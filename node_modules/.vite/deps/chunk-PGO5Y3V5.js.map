{
  "version": 3,
  "sources": ["../../tiny-emitter/index.js", "../../cross-fetch/dist/browser-ponyfill.js", "../../p-cancelable/index.js", "../../@okta/lib/idx/types/api.ts", "../../@okta/lib/util/console.ts", "../../@okta/lib/util/object.ts", "../../@okta/lib/util/misc.ts", "../../@okta/lib/util/url.ts", "../../@okta/lib/errors/CustomError.ts", "../../@okta/lib/errors/AuthSdkError.ts", "../../@okta/lib/oidc/util/oauth.ts", "../../@okta/lib/oidc/util/oauthMeta.ts", "../../js-cookie/dist/js.cookie.mjs", "../../@okta/lib/oidc/types/Token.ts", "../../@okta/lib/idx/transactionMeta.ts", "../../@okta/lib/util/types.ts", "../../@okta/lib/constants.ts", "../../@okta/lib/errors/AuthApiError.ts", "../../@okta/lib/errors/OAuthError.ts", "../../@okta/lib/http/request.ts", "../../@okta/lib/idx/interact.ts", "../../@okta/okta-auth-js/esm/browser/_virtual/_tslib.js", "../../@okta/lib/idx/idxState/v1/actionParser.ts", "../../@okta/lib/idx/idxState/v1/generateIdxAction.ts", "../../@okta/lib/idx/idxState/v1/remediationParser.ts", "../../jsonpath-plus/dist/index-browser-esm.js", "../../@okta/lib/util/jsonpath.ts", "../../@okta/lib/idx/idxState/v1/idxResponseParser.ts", "../../@okta/lib/idx/idxState/v1/makeIdxState.ts", "../../@okta/lib/idx/idxState/v1/parsers.ts", "../../@okta/lib/idx/idxState/index.ts", "../../@okta/lib/idx/types/idx-js.ts", "../../@okta/lib/errors/index.ts", "../../@okta/lib/idx/introspect.ts", "../../@okta/lib/idx/remediators/util.ts", "../../@okta/lib/idx/authenticator/util.ts", "../../@okta/lib/idx/remediators/Base/Remediator.ts", "../../@okta/lib/idx/remediators/GenericRemediator/util.ts", "../../@okta/lib/idx/remediators/GenericRemediator/GenericRemediator.ts", "../../@okta/lib/idx/util.ts", "../../@okta/lib/idx/remediate.ts", "../../@okta/lib/idx/run.ts", "../../@okta/lib/idx/authenticate.ts", "../../@okta/lib/idx/authenticator/Authenticator.ts", "../../@okta/lib/idx/authenticator/VerificationCodeAuthenticator.ts", "../../@okta/lib/idx/authenticator/OktaVerifyTotp.ts", "../../@okta/lib/idx/authenticator/OktaPassword.ts", "../../@okta/lib/idx/authenticator/SecurityQuestionEnrollment.ts", "../../@okta/lib/idx/authenticator/SecurityQuestionVerification.ts", "../../@okta/lib/idx/authenticator/WebauthnEnrollment.ts", "../../@okta/lib/idx/authenticator/WebauthnVerification.ts", "../../@okta/lib/idx/authenticator/getAuthenticator.ts", "../../@okta/lib/idx/remediators/Base/VerifyAuthenticator.ts", "../../@okta/lib/idx/remediators/EnrollAuthenticator.ts", "../../@okta/lib/idx/remediators/EnrollPoll.ts", "../../@okta/lib/idx/remediators/SelectEnrollmentChannel.ts", "../../@okta/lib/idx/remediators/EnrollmentChannelData.ts", "../../@okta/lib/idx/remediators/ChallengeAuthenticator.ts", "../../@okta/lib/idx/remediators/ChallengePoll.ts", "../../@okta/lib/idx/remediators/ResetAuthenticator.ts", "../../@okta/lib/idx/remediators/EnrollProfile.ts", "../../@okta/lib/idx/remediators/Identify.ts", "../../@okta/lib/idx/remediators/ReEnrollAuthenticator.ts", "../../@okta/lib/idx/remediators/ReEnrollAuthenticatorWarning.ts", "../../@okta/lib/idx/remediators/RedirectIdp.ts", "../../@okta/lib/idx/remediators/Base/SelectAuthenticator.ts", "../../@okta/lib/idx/remediators/SelectAuthenticatorAuthenticate.ts", "../../@okta/lib/idx/remediators/SelectAuthenticatorEnroll.ts", "../../@okta/lib/idx/remediators/SelectAuthenticatorUnlockAccount.ts", "../../@okta/lib/idx/remediators/SelectEnrollProfile.ts", "../../@okta/lib/idx/remediators/Base/AuthenticatorData.ts", "../../@okta/lib/idx/remediators/AuthenticatorVerificationData.ts", "../../@okta/lib/idx/remediators/AuthenticatorEnrollmentData.ts", "../../@okta/lib/idx/remediators/Skip.ts", "../../@okta/lib/idx/flow/AuthenticationFlow.ts", "../../@okta/lib/idx/flow/PasswordRecoveryFlow.ts", "../../@okta/lib/idx/flow/RegistrationFlow.ts", "../../@okta/lib/idx/flow/AccountUnlockFlow.ts", "../../@okta/lib/idx/flow/FlowSpecification.ts", "../../@okta/lib/idx/cancel.ts", "../../@okta/lib/oidc/util/urlParams.ts", "../../@okta/lib/idx/emailVerify.ts", "../../@okta/lib/idx/proceed.ts", "../../@okta/lib/idx/poll.ts", "../../@okta/lib/idx/startTransaction.ts", "../../@okta/lib/idx/register.ts", "../../@okta/lib/idx/recoverPassword.ts", "../../@okta/lib/idx/handleInteractionCodeRedirect.ts", "../../@okta/lib/idx/unlockAccount.ts", "../../@okta/lib/oidc/util/errors.ts", "../../@okta/lib/oidc/util/loginRedirect.ts", "../../@okta/okta-auth-js/esm/browser/idx/remediators/index.js", "../../@okta/lib/idx/factory/api.ts", "../../@okta/lib/crypto/browser.ts", "../../@okta/lib/features.ts", "../../@okta/lib/base/factory.ts", "../../@okta/lib/storage/mixin.ts", "../../@okta/lib/http/OktaUserAgent.ts", "../../@okta/lib/http/headers.ts", "../../@okta/lib/http/mixin.ts", "../../@okta/okta-auth-js/esm/browser/crypto/index.js", "../../@okta/lib/crypto/base64.ts", "../../@okta/lib/crypto/oidcHash.ts", "../../@okta/lib/crypto/verifyToken.ts", "../../@okta/lib/util/PromiseQueue.ts", "../../@okta/lib/oidc/util/pkce.ts", "../../@okta/lib/oidc/decodeToken.ts", "../../@okta/lib/oidc/util/defaultTokenParams.ts", "../../@okta/lib/oidc/endpoints/token.ts", "../../@okta/lib/oidc/endpoints/well-known.ts", "../../@okta/lib/oidc/util/validateClaims.ts", "../../@okta/lib/oidc/verifyToken.ts", "../../@okta/lib/oidc/handleOAuthResponse.ts", "../../@okta/lib/oidc/exchangeCodeForTokens.ts", "../../@okta/lib/oidc/getUserInfo.ts", "../../@okta/lib/oidc/util/browser.ts", "../../@okta/lib/oidc/util/prepareTokenParams.ts", "../../@okta/lib/oidc/endpoints/authorize.ts", "../../@okta/lib/oidc/getToken.ts", "../../@okta/lib/oidc/getWithoutPrompt.ts", "../../@okta/lib/oidc/getWithPopup.ts", "../../@okta/lib/oidc/getWithRedirect.ts", "../../@okta/lib/oidc/parseFromUrl.ts", "../../@okta/lib/oidc/util/refreshToken.ts", "../../@okta/lib/oidc/renewTokensWithRefresh.ts", "../../@okta/lib/oidc/renewToken.ts", "../../@okta/lib/oidc/renewTokens.ts", "../../@okta/lib/oidc/revokeToken.ts", "../../@okta/lib/oidc/introspect.ts", "../../@okta/lib/oidc/util/enrollAuthenticatorMeta.ts", "../../@okta/lib/oidc/util/defaultEnrollAuthenticatorParams.ts", "../../@okta/lib/oidc/util/prepareEnrollAuthenticatorParams.ts", "../../@okta/lib/oidc/enrollAuthenticator.ts", "../../@okta/lib/oidc/factory/api.ts", "../../@okta/lib/oidc/util/validateToken.ts", "../../@okta/lib/clock.ts", "../../@okta/lib/oidc/types/TokenManager.ts", "../../@okta/lib/oidc/TokenManager.ts", "../../@okta/lib/browser/browserStorage.ts", "../../@okta/lib/oidc/mixin/browser.ts", "../../@okta/lib/oidc/mixin/index.ts", "../../@okta/lib/core/AuthStateManager.ts", "../../@okta/lib/services/AutoRenewService.ts", "../../broadcast-channel/dist/esbrowser/util.js", "../../broadcast-channel/dist/esbrowser/methods/native.js", "../../oblivious-set/src/index.ts", "../../broadcast-channel/dist/esbrowser/options.js", "../../broadcast-channel/dist/esbrowser/methods/indexed-db.js", "../../broadcast-channel/dist/esbrowser/methods/localstorage.js", "../../broadcast-channel/dist/esbrowser/methods/simulate.js", "../../broadcast-channel/dist/esbrowser/method-chooser.js", "../../broadcast-channel/dist/esbrowser/broadcast-channel.js", "../../unload/dist/es/browser.js", "../../unload/dist/es/node.js", "../../unload/dist/es/index.js", "../../broadcast-channel/dist/esbrowser/leader-election-util.js", "../../broadcast-channel/dist/esbrowser/leader-election-web-lock.js", "../../broadcast-channel/dist/esbrowser/leader-election.js", "../../@okta/lib/services/SyncStorageService.ts", "../../@okta/lib/services/LeaderElectionService.ts", "../../@okta/lib/core/ServiceManager/browser.ts", "../../@okta/lib/core/mixin.ts", "../../@okta/lib/session/api.ts", "../../@okta/lib/session/factory.ts", "../../@okta/lib/session/mixin.ts", "../../@okta/lib/core/factory.ts", "../../@okta/lib/idx/webauthn.ts", "../../@okta/lib/idx/mixin.ts", "../../@okta/lib/idx/factory/OktaAuthIdx.ts", "../../@okta/lib/idx/factory/minimalApi.ts", "../../@okta/lib/idx/mixinMinimal.ts", "../../@okta/lib/oidc/factory/baseApi.ts", "../../@okta/lib/oidc/mixin/minimal.ts", "../../@okta/lib/idx/factory/MinimalOktaAuthIdx.ts", "../../@okta/lib/base/options.ts", "../../@okta/lib/storage/options/browser.ts", "../../@okta/lib/storage/options/StorageOptionsConstructor.ts", "../../@okta/lib/fetch/fetchRequest.ts", "../../@okta/lib/http/options.ts", "../../@okta/lib/oidc/options/browser.ts", "../../@okta/lib/oidc/options/OAuthOptionsConstructor.ts", "../../@okta/lib/core/options.ts", "../../@okta/lib/idx/options.ts", "../../@okta/lib/storage/SavedObject.ts", "../../@okta/lib/storage/BaseStorageManager.ts", "../../@okta/lib/oidc/storage.ts", "../../@okta/lib/core/storage.ts", "../../@okta/lib/idx/storage.ts", "../../@okta/lib/oidc/types/Transaction.ts", "../../@okta/lib/oidc/util/sharedStorage.ts", "../../@okta/lib/oidc/TransactionManager.ts", "../../@okta/lib/idx/IdxTransactionManager.ts", "../../@okta/lib/myaccount/transactions/Base.ts", "../../@okta/lib/myaccount/request.ts", "../../@okta/lib/myaccount/transactions/ProfileTransaction.ts", "../../@okta/lib/myaccount/transactions/ProfileSchemaTransaction.ts", "../../@okta/lib/myaccount/types.ts", "../../@okta/lib/myaccount/profileApi.ts", "../../@okta/lib/myaccount/transactions/EmailStatusTransaction.ts", "../../@okta/lib/myaccount/transactions/EmailChallengeTransaction.ts", "../../@okta/lib/myaccount/transactions/EmailTransaction.ts", "../../@okta/lib/myaccount/emailApi.ts", "../../@okta/lib/myaccount/transactions/PhoneTransaction.ts", "../../@okta/lib/myaccount/phoneApi.ts", "../../@okta/lib/myaccount/transactions/PasswordTransaction.ts", "../../@okta/lib/myaccount/passwordApi.ts", "../../@okta/okta-auth-js/esm/browser/myaccount/api.js", "../../@okta/lib/myaccount/mixin.ts", "../../@okta/lib/myaccount/factory.ts", "../../@okta/lib/authn/util/stateToken.ts", "../../@okta/lib/authn/api.ts", "../../@okta/lib/authn/util/link2fn.ts", "../../@okta/lib/errors/AuthPollStopError.ts", "../../@okta/lib/authn/util/poll.ts", "../../@okta/lib/authn/util/links2fns.ts", "../../@okta/lib/authn/util/flattenEmbedded.ts", "../../@okta/lib/authn/AuthnTransactionImpl.ts", "../../@okta/lib/authn/factory.ts", "../../@okta/lib/browser/fingerprint.ts", "../../@okta/lib/authn/mixin.ts", "../../@okta/lib/oidc/factory/OktaAuthOAuth.ts", "../../@okta/lib/exports/default.ts"],
  "sourcesContent": ["function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n", "var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n", "'use strict';\n\nclass CancelError extends Error {\n\tconstructor(reason) {\n\t\tsuper(reason || 'Promise was canceled');\n\t\tthis.name = 'CancelError';\n\t}\n\n\tget isCanceled() {\n\t\treturn true;\n\t}\n}\n\nclass PCancelable {\n\tstatic fn(userFn) {\n\t\treturn (...arguments_) => {\n\t\t\treturn new PCancelable((resolve, reject, onCancel) => {\n\t\t\t\targuments_.push(onCancel);\n\t\t\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\t\t\tuserFn(...arguments_).then(resolve, reject);\n\t\t\t});\n\t\t};\n\t}\n\n\tconstructor(executor) {\n\t\tthis._cancelHandlers = [];\n\t\tthis._isPending = true;\n\t\tthis._isCanceled = false;\n\t\tthis._rejectOnCancel = true;\n\n\t\tthis._promise = new Promise((resolve, reject) => {\n\t\t\tthis._reject = reject;\n\n\t\t\tconst onResolve = value => {\n\t\t\t\tif (!this._isCanceled || !onCancel.shouldReject) {\n\t\t\t\t\tthis._isPending = false;\n\t\t\t\t\tresolve(value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onReject = error => {\n\t\t\t\tthis._isPending = false;\n\t\t\t\treject(error);\n\t\t\t};\n\n\t\t\tconst onCancel = handler => {\n\t\t\t\tif (!this._isPending) {\n\t\t\t\t\tthrow new Error('The `onCancel` handler was attached after the promise settled.');\n\t\t\t\t}\n\n\t\t\t\tthis._cancelHandlers.push(handler);\n\t\t\t};\n\n\t\t\tObject.defineProperties(onCancel, {\n\t\t\t\tshouldReject: {\n\t\t\t\t\tget: () => this._rejectOnCancel,\n\t\t\t\t\tset: boolean => {\n\t\t\t\t\t\tthis._rejectOnCancel = boolean;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn executor(onResolve, onReject, onCancel);\n\t\t});\n\t}\n\n\tthen(onFulfilled, onRejected) {\n\t\t// eslint-disable-next-line promise/prefer-await-to-then\n\t\treturn this._promise.then(onFulfilled, onRejected);\n\t}\n\n\tcatch(onRejected) {\n\t\treturn this._promise.catch(onRejected);\n\t}\n\n\tfinally(onFinally) {\n\t\treturn this._promise.finally(onFinally);\n\t}\n\n\tcancel(reason) {\n\t\tif (!this._isPending || this._isCanceled) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._isCanceled = true;\n\n\t\tif (this._cancelHandlers.length > 0) {\n\t\t\ttry {\n\t\t\t\tfor (const handler of this._cancelHandlers) {\n\t\t\t\t\thandler();\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis._reject(error);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (this._rejectOnCancel) {\n\t\t\tthis._reject(new CancelError(reason));\n\t\t}\n\t}\n\n\tget isCanceled() {\n\t\treturn this._isCanceled;\n\t}\n}\n\nObject.setPrototypeOf(PCancelable.prototype, Promise.prototype);\n\nmodule.exports = PCancelable;\nmodule.exports.CancelError = CancelError;\n", "/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { APIError } from '../../errors/types';\nimport {\n  OktaAuthOAuthInterface,\n  MinimalOktaOAuthInterface,\n  Tokens,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../../oidc/types';\nimport { FlowIdentifier } from './FlowIdentifier';\nimport {\n  IdxActions,\n  IdxAuthenticator,\n  IdxContext,\n  IdxForm,\n  IdxMessage,\n  IdxOption,\n  IdxRemediation,\n  IdxResponse,\n  RawIdxResponse,\n  IdxActionParams,\n  IdpConfig,\n  IdxToPersist,\n  ChallengeData,\n  ActivationData,\n} from './idx-js';\nimport {\n  AccountUnlockOptions,\n  AuthenticationOptions,\n  CancelOptions,\n  InteractOptions,\n  IntrospectOptions,\n  OktaAuthIdxOptions,\n  PasswordRecoveryOptions,\n  ProceedOptions,\n  RegistrationOptions,\n  StartOptions,\n  IdxTransactionMetaOptions\n} from './options';\nimport { IdxTransactionMeta } from './meta';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './storage';\nimport type {\n  WebauthnEnrollValues,\n  WebauthnVerificationValues\n} from '../authenticator';\nimport { OktaAuthConstructor } from '../../base/types';\n\nexport enum IdxStatus {\n  SUCCESS = 'SUCCESS',\n  PENDING = 'PENDING',\n  FAILURE = 'FAILURE',\n  TERMINAL = 'TERMINAL',\n  CANCELED = 'CANCELED',\n}\n\nexport enum AuthenticatorKey {\n  OKTA_PASSWORD = 'okta_password',\n  OKTA_EMAIL = 'okta_email',\n  PHONE_NUMBER = 'phone_number',\n  GOOGLE_AUTHENTICATOR = 'google_otp',\n  SECURITY_QUESTION = 'security_question',\n  OKTA_VERIFY = 'okta_verify',\n  WEBAUTHN = 'webauthn',\n}\n\nexport type Input = {\n  name: string;\n  key?: string;\n  type?: string;\n  label?: string;\n  value?: string | {form: IdxForm} | Input[];\n  minLength?: number;\n  maxLength?: number;\n  secret?: boolean;\n  required?: boolean;\n  options?: IdxOption[];\n  mutable?: boolean;\n  visible?: boolean;\n  customLabel?: boolean\n}\n\n\nexport interface IdxPollOptions {\n  required?: boolean;\n  refresh?: number;\n}\n\nexport type NextStep = {\n  name: string;\n  authenticator?: IdxAuthenticator;\n  canSkip?: boolean;\n  canResend?: boolean;\n  inputs?: Input[];\n  poll?: IdxPollOptions;\n  authenticatorEnrollments?: IdxAuthenticator[];\n  // eslint-disable-next-line no-use-before-define\n  action?: (params?: IdxActionParams) => Promise<IdxTransaction>;\n  idp?: IdpConfig;\n  href?: string;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  refresh?: number;\n}\n\nexport enum IdxFeature {\n  PASSWORD_RECOVERY = 'recover-password',\n  REGISTRATION = 'enroll-profile',\n  SOCIAL_IDP = 'redirect-idp',\n  ACCOUNT_UNLOCK = 'unlock-account',\n}\n\n\nexport interface IdxTransaction {\n  status: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n  \n  // from idx-js, used by signin widget\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  context: IdxContext;\n}\n\n\nexport type Authenticator = {\n  id?: string;\n  key?: string;\n  methodType?: string;\n  phoneNumber?: string;\n  channel?: string;\n};\n\nexport function isAuthenticator(obj: any): obj is Authenticator {\n  return obj && (obj.key || obj.id);\n}\n\nexport interface RemediationResponse {\n  idxResponse: IdxResponse;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  terminal?: boolean;\n  canceled?: boolean;\n}\n\nexport interface InteractResponse {\n  state?: string;\n  interactionHandle: string;\n  meta: IdxTransactionMeta;\n}\n\nexport interface EmailVerifyCallbackResponse {\n  state: string;\n  otp: string;\n}\n\nexport interface MinimalIdxAPI {\n  // lowest level api\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxAPI {\n  // lowest level api\n  interact: (options?: InteractOptions) => Promise<InteractResponse>;\n  introspect: (options?: IntrospectOptions) => Promise<IdxResponse>;\n  makeIdxResponse: (rawIdxResponse: RawIdxResponse, toPersist: IdxToPersist, requestDidSucceed: boolean) => IdxResponse;\n\n  // flow entrypoints\n  authenticate: (options?: AuthenticationOptions) => Promise<IdxTransaction>;\n  register: (options?: RegistrationOptions) => Promise<IdxTransaction>;\n  recoverPassword: (options?: PasswordRecoveryOptions) => Promise<IdxTransaction>;\n  unlockAccount: (options?: AccountUnlockOptions) => Promise<IdxTransaction>;\n  poll: (options?: IdxPollOptions) => Promise<IdxTransaction>;\n\n  // flow control\n  start: (options?: StartOptions) => Promise<IdxTransaction>;\n  canProceed(options?: ProceedOptions): boolean;\n  proceed: (options?: ProceedOptions) => Promise<IdxTransaction>;\n  cancel: (options?: CancelOptions) => Promise<IdxTransaction>;\n  getFlow(): FlowIdentifier | undefined;\n  setFlow(flow: FlowIdentifier): void;\n\n  // call `start` instead of `startTransaction`. `startTransaction` will be removed in next major version (7.0)\n  startTransaction: (options?: StartOptions) => Promise<IdxTransaction>;\n\n  // redirect callbacks\n  isInteractionRequired: (hashOrSearch?: string) => boolean;\n  isInteractionRequiredError: (error: Error) => boolean; \n  handleInteractionCodeRedirect: (url: string) => Promise<void>;\n  isEmailVerifyCallback: (search: string) => boolean;\n  parseEmailVerifyCallback: (search: string) => EmailVerifyCallbackResponse;\n  handleEmailVerifyCallback: (search: string) => Promise<IdxTransaction | undefined>;\n  isEmailVerifyCallbackError: (error: Error) => boolean;\n\n  // transaction meta\n  getSavedTransactionMeta: (options?: IdxTransactionMetaOptions) => IdxTransactionMeta | undefined;\n  createTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  getTransactionMeta: (options?: IdxTransactionMetaOptions) => Promise<IdxTransactionMeta>;\n  saveTransactionMeta: (meta: unknown) => void;\n  clearTransactionMeta: () => void;\n  isTransactionMetaValid: (meta: unknown) => boolean;\n}\n\nexport interface IdxTransactionManagerInterface extends TransactionManagerInterface {\n  saveIdxResponse(data: SavedIdxResponse): void;\n  loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null;\n  clearIdxResponse(): void;\n}\n\nexport type IdxTransactionManagerConstructor = TransactionManagerConstructor<IdxTransactionManagerInterface>;\n\nexport interface WebauthnAPI {\n  getAssertion(credential: PublicKeyCredential): WebauthnVerificationValues;\n  getAttestation(credential: PublicKeyCredential): WebauthnEnrollValues;\n  buildCredentialRequestOptions(\n    challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialRequestOptions;\n  buildCredentialCreationOptions(\n    activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n  ): CredentialCreationOptions;\n}\n\nexport interface OktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends OktaAuthOAuthInterface<M, S, O, TM>\n{\n  idx: IdxAPI;\n}\n\nexport interface MinimalOktaAuthIdxInterface\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>\n  extends MinimalOktaOAuthInterface<M, S, O, TM>\n{\n  idx: MinimalIdxAPI;\n}\n\nexport interface OktaAuthIdxConstructor\n<\n  I extends MinimalOktaAuthIdxInterface = OktaAuthIdxInterface\n>\n extends OktaAuthConstructor<I>\n{\n  new(...args: any[]): I;\n  webauthn: WebauthnAPI;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* global window */\n\nexport function getNativeConsole() {\n  if (typeof window !== 'undefined') {\n    return window.console;\n  } else if (typeof console !== 'undefined') {\n    return console;\n  } else {\n    return undefined;\n  }\n}\n\nexport function getConsole() {\n  var nativeConsole = getNativeConsole();\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (nativeConsole && nativeConsole.log) {\n    return nativeConsole;\n  }\n  return {\n    log: function() {},\n    warn: function() {},\n    group: function() {},\n    groupEnd: function() {}\n  };\n}\n\nexport function warn(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] WARN: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecate(text) {\n  /* eslint-disable no-console */\n  getConsole().warn('[okta-auth-sdk] DEPRECATION: ' + text);\n  /* eslint-enable */\n}\n\nexport function deprecateWrap(text, fn) {\n  return function() {\n    deprecate(text);\n    return fn.apply(null, arguments);\n  };\n}\n\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function bind(fn, ctx) {\n  var additionalArgs = Array.prototype.slice.call(arguments, 2);\n  return function() {\n    var args = Array.prototype.slice.call(arguments);\n    args = additionalArgs.concat(args);\n    return fn.apply(ctx, args);\n  };\n}\n\n// TODO: replace all references with `Object.assign` then remove this function\nexport function extend() {\n  // First object will be modified!\n  var obj1 = arguments[0];\n  // Properties from other objects will be copied over\n  var objArray = [].slice.call(arguments, 1);\n  objArray.forEach(function(obj) {\n    for (var prop in obj) {\n      // copy over all properties with defined values\n      if (Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined) {\n        obj1[prop] = obj[prop];\n      }\n    }\n  });\n  return obj1; // return the modified object\n}\n\nexport function removeNils(obj) {\n  var cleaned = {};\n  for (var prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      var value = obj[prop];\n      if (value !== null && value !== undefined) {\n        cleaned[prop] = value;\n      }\n    }\n  }\n  return cleaned;\n}\n\nexport function clone(obj) {\n  if (obj) {\n    var str = JSON.stringify(obj);\n    if (str) {\n      return JSON.parse(str);\n    }\n  }\n  return obj;\n}\n\n// Analogous to _.omit\nexport function omit(obj, ...props: any[]) {\n  // var props = Array.prototype.slice.call(arguments, 1);\n  var newobj = {};\n  for (var p in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, p) && props.indexOf(p) == -1) {\n      newobj[p] = obj[p];\n    }\n  }\n  return clone(newobj);\n}\n\nexport function find(collection, searchParams) {\n  var c = collection.length;\n  while (c--) {\n    var item = collection[c];\n    var found = true;\n    for (var prop in searchParams) {\n      if (!Object.prototype.hasOwnProperty.call(searchParams, prop)) {\n        continue;\n      }\n      if (item[prop] !== searchParams[prop]) {\n        found = false;\n        break;\n      }\n    }\n    if (found) {\n      return item;\n    }\n  }\n}\n\nexport function getLink(obj, linkName, altName?) {\n  if (!obj || !obj._links) {\n    return;\n  }\n\n  var link = clone(obj._links[linkName]);\n\n  // If a link has a name and we have an altName, return if they match\n  if (link && link.name && altName) {\n    if (link.name === altName) {\n      return link;\n    }\n  } else {\n    return link;\n  }\n}\n\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isoToUTCString(str) {\n  var parts = str.match(/\\d+/g),\n      isoTime = Date.UTC(parts[0], parts[1] - 1, parts[2], parts[3], parts[4], parts[5]),\n      isoDate = new Date(isoTime);\n\n  return isoDate.toUTCString();\n}\n\nexport function genRandomString(length) {\n  var randomCharset = 'abcdefghijklnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  var random = '';\n  for (var c = 0, cl = randomCharset.length; c < length; ++c) {\n    random += randomCharset[Math.floor(Math.random() * cl)];\n  }\n  return random;\n}\n\nexport function delay(ms) {\n  return new Promise(function(resolve) {\n    setTimeout(resolve, ms);\n  });\n}\n\nexport function split2(str, delim) {\n  const parts = str.split(delim);\n  return [\n    parts[0], \n    parts.splice(1, parts.length).join(delim),\n  ];\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isAbsoluteUrl(url) {\n  return /^[a-z][a-z0-9+.-]*:/i.test(url);\n}\n\nexport function toAbsoluteUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    return url;\n  }\n  baseUrl = removeTrailingSlash(baseUrl);\n  return url[0] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n}\n\nexport function toRelativeUrl(url = '', baseUrl) {\n  if (isAbsoluteUrl(url)) {\n    url = url.substring(baseUrl.length);\n  }\n\n  return url[0] === '/' ? url : `/${url}`;\n}\n\nexport function toQueryString(obj) {\n  var str = [];\n  if (obj !== null) {\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key) &&\n          obj[key] !== undefined &&\n          obj[key] !== null) {\n        str.push(key + '=' + encodeURIComponent(obj[key]) as never);\n      }\n    }\n  }\n  if (str.length) {\n    return '?' + str.join('&');\n  } else {\n    return '';\n  }\n}\n\nexport function removeTrailingSlash(path) {\n  if (!path) {\n    return;\n  }\n  // Remove any whitespace before or after string\n  var trimmed = path.replace(/^\\s+|\\s+$/gm,'');\n  // Remove trailing slash(es)\n  trimmed = trimmed.replace(/\\/+$/, '');\n\n  return trimmed;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class CustomError extends Error {\n  constructor(message: string) {\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    super(message); // 'Error' breaks prototype chain here\n    Object.setPrototypeOf(this, new.target.prototype); // restore prototype chain\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthSdkError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode: string;\n  errorLink: string;\n  errorId: string;\n  errorCauses: Array<FieldError>;\n  xhr?: XMLHttpRequest;\n\n  constructor(msg: string, xhr?: XMLHttpRequest) {\n    super(msg);\n    this.name = 'AuthSdkError';\n    this.errorCode = 'INTERNAL';\n    this.errorSummary = msg;\n    this.errorLink = 'INTERNAL';\n    this.errorId = 'INTERNAL';\n    this.errorCauses = [];\n    if (xhr) {\n      this.xhr = xhr;\n    }\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\nimport { genRandomString, removeTrailingSlash } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, CustomUrls } from '../types';\n\nexport function generateState() {\n  return genRandomString(64);\n}\n\nexport function generateNonce() {\n  return genRandomString(64);\n}\n\nfunction getIssuer(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = removeTrailingSlash(options.issuer) || sdk.options.issuer;\n  return issuer;\n}\n\nexport function getOAuthBaseUrl(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const baseUrl = issuer.indexOf('/oauth2') > 0 ? issuer : issuer + '/oauth2';\n  return baseUrl;\n}\n\nexport function getOAuthDomain(sdk: OktaAuthOAuthInterface, options: CustomUrls = {}) {\n  const issuer = getIssuer(sdk, options);\n  const domain = issuer.split('/oauth2')[0];\n  return domain;\n}\n\nexport function getOAuthUrls(sdk: OktaAuthOAuthInterface, options?: CustomUrls): CustomUrls {\n  if (arguments.length > 2) {\n    throw new AuthSdkError('As of version 3.0, \"getOAuthUrls\" takes only a single set of options');\n  }\n  options = options || {};\n\n  // Get user-supplied arguments\n  var authorizeUrl = removeTrailingSlash(options.authorizeUrl) || sdk.options.authorizeUrl;\n  var issuer = getIssuer(sdk, options);\n  var userinfoUrl = removeTrailingSlash(options.userinfoUrl) || sdk.options.userinfoUrl;\n  var tokenUrl = removeTrailingSlash(options.tokenUrl) || sdk.options.tokenUrl;\n  var logoutUrl = removeTrailingSlash(options.logoutUrl) || sdk.options.logoutUrl;\n  var revokeUrl = removeTrailingSlash(options.revokeUrl) || sdk.options.revokeUrl;\n\n  var baseUrl = getOAuthBaseUrl(sdk, options);\n\n  authorizeUrl = authorizeUrl || baseUrl + '/v1/authorize';\n  userinfoUrl = userinfoUrl || baseUrl + '/v1/userinfo';\n  tokenUrl = tokenUrl || baseUrl + '/v1/token';\n  revokeUrl = revokeUrl || baseUrl + '/v1/revoke';\n  logoutUrl = logoutUrl || baseUrl + '/v1/logout';\n\n  return {\n    issuer: issuer,\n    authorizeUrl: authorizeUrl,\n    userinfoUrl: userinfoUrl,\n    tokenUrl: tokenUrl,\n    revokeUrl: revokeUrl,\n    logoutUrl: logoutUrl\n  };\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, PKCETransactionMeta, TokenParams } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createOAuthMeta(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): OAuthTransactionMeta | PKCETransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, tokenParams);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: tokenParams.clientId!,\n    redirectUri: tokenParams.redirectUri!,\n    responseType: tokenParams.responseType!,\n    responseMode: tokenParams.responseMode!,\n    scopes: tokenParams.scopes!,\n    state: tokenParams.state!,\n    nonce: tokenParams.nonce!,\n    ignoreSignature: tokenParams.ignoreSignature!,\n    acrValues: tokenParams.acrValues,\n  };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return oauthMeta;\n  }\n\n  const pkceMeta: PKCETransactionMeta = {\n    ...oauthMeta,\n    codeVerifier: tokenParams.codeVerifier!,\n    codeChallengeMethod: tokenParams.codeChallengeMethod!,\n    codeChallenge: tokenParams.codeChallenge!,\n  };\n\n  return pkceMeta;\n}\n", "/*! js-cookie v3.0.5 | MIT */\n/* eslint-disable no-var */\nfunction assign (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      target[key] = source[key];\n    }\n  }\n  return target\n}\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\nvar defaultConverter = {\n  read: function (value) {\n    if (value[0] === '\"') {\n      value = value.slice(1, -1);\n    }\n    return value.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent)\n  },\n  write: function (value) {\n    return encodeURIComponent(value).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    )\n  }\n};\n/* eslint-enable no-var */\n\n/* eslint-disable no-var */\n\nfunction init (converter, defaultAttributes) {\n  function set (name, value, attributes) {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    attributes = assign({}, defaultAttributes, attributes);\n\n    if (typeof attributes.expires === 'number') {\n      attributes.expires = new Date(Date.now() + attributes.expires * 864e5);\n    }\n    if (attributes.expires) {\n      attributes.expires = attributes.expires.toUTCString();\n    }\n\n    name = encodeURIComponent(name)\n      .replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent)\n      .replace(/[()]/g, escape);\n\n    var stringifiedAttributes = '';\n    for (var attributeName in attributes) {\n      if (!attributes[attributeName]) {\n        continue\n      }\n\n      stringifiedAttributes += '; ' + attributeName;\n\n      if (attributes[attributeName] === true) {\n        continue\n      }\n\n      // Considers RFC 6265 section 5.2:\n      // ...\n      // 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n      //     character:\n      // Consume the characters of the unparsed-attributes up to,\n      // not including, the first %x3B (\";\") character.\n      // ...\n      stringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n    }\n\n    return (document.cookie =\n      name + '=' + converter.write(value, name) + stringifiedAttributes)\n  }\n\n  function get (name) {\n    if (typeof document === 'undefined' || (arguments.length && !name)) {\n      return\n    }\n\n    // To prevent the for loop in the first place assign an empty array\n    // in case there are no cookies at all.\n    var cookies = document.cookie ? document.cookie.split('; ') : [];\n    var jar = {};\n    for (var i = 0; i < cookies.length; i++) {\n      var parts = cookies[i].split('=');\n      var value = parts.slice(1).join('=');\n\n      try {\n        var found = decodeURIComponent(parts[0]);\n        jar[found] = converter.read(value, found);\n\n        if (name === found) {\n          break\n        }\n      } catch (e) {}\n    }\n\n    return name ? jar[name] : jar\n  }\n\n  return Object.create(\n    {\n      set,\n      get,\n      remove: function (name, attributes) {\n        set(\n          name,\n          '',\n          assign({}, attributes, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function (attributes) {\n        return init(this.converter, assign({}, this.attributes, attributes))\n      },\n      withConverter: function (converter) {\n        return init(assign({}, this.converter, converter), this.attributes)\n      }\n    },\n    {\n      attributes: { value: Object.freeze(defaultAttributes) },\n      converter: { value: Object.freeze(converter) }\n    }\n  )\n}\n\nvar api = init(defaultConverter, { path: '/' });\n/* eslint-enable no-var */\n\nexport { api as default };\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { UserClaims } from './UserClaims';\n\nexport interface AbstractToken {\n  expiresAt: number;\n  authorizeUrl: string;\n  scopes: string[];\n  pendingRemove?: boolean;\n}\n\nexport interface AccessToken extends AbstractToken {\n  accessToken: string;\n  claims: UserClaims;\n  tokenType: string;\n  userinfoUrl: string;\n}\n\nexport interface RefreshToken extends AbstractToken {\n  refreshToken: string;\n  tokenUrl: string;\n  issuer: string;\n}\n\nexport interface IDToken extends AbstractToken {\n  idToken: string;\n  claims: UserClaims;\n  issuer: string;\n  clientId: string;\n}\n\nexport type Token = AccessToken | IDToken | RefreshToken;\nexport type RevocableToken = AccessToken | RefreshToken;\n\nexport type TokenType = 'accessToken' | 'idToken' | 'refreshToken';\nexport enum TokenKind {\n  ACCESS = 'accessToken',\n  ID = 'idToken',\n  REFRESH = 'refreshToken',\n}\n\nexport function isToken(obj: any): obj is Token {\n  if (obj &&\n      (obj.accessToken || obj.idToken || obj.refreshToken) &&\n      Array.isArray(obj.scopes)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isAccessToken(obj: any): obj is AccessToken {\n  return obj && obj.accessToken;\n}\n\nexport function isIDToken(obj: any): obj is IDToken {\n  return obj && obj.idToken;\n}\n\nexport function isRefreshToken(obj: any): obj is RefreshToken {\n  return obj && obj.refreshToken;\n}\n\nexport interface Tokens {\n  accessToken?: AccessToken;\n  idToken?: IDToken;\n  refreshToken?: RefreshToken;\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxTransactionMeta, IdxTransactionMetaOptions } from './types';\nimport { removeNils, warn } from '../util';\nimport { createOAuthMeta, PKCETransactionMeta } from '../oidc';\n\n// Calculate new values\nexport async function createTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options: IdxTransactionMetaOptions = {}\n): Promise<IdxTransactionMeta> {\n  const tokenParams = await authClient.token.prepareTokenParams(options);\n  const pkceMeta = createOAuthMeta(authClient, tokenParams) as PKCETransactionMeta;\n  let {\n    flow = 'default',\n    withCredentials = true,\n    activationToken = undefined,\n    recoveryToken = undefined,\n    maxAge = undefined,\n    acrValues = undefined,\n  } = { ...authClient.options, ...options }; // local options override SDK options\n\n  const meta: IdxTransactionMeta = {\n    ...pkceMeta,\n    flow,\n    withCredentials,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues\n  };\n  return meta;\n}\n\nexport function hasSavedInteractionHandle(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): boolean {\n  const savedMeta = getSavedTransactionMeta(authClient, options);\n  if (savedMeta?.interactionHandle) {\n    return true;\n  }\n  return false;\n}\n\n// Returns the saved transaction meta, if it exists and is valid\nexport function getSavedTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): IdxTransactionMeta | undefined {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  let savedMeta;\n  try {\n    savedMeta = authClient.transactionManager.load(options) as IdxTransactionMeta;\n  } catch (e) {\n    // ignore errors here\n  }\n\n  if (!savedMeta) {\n    return;\n  }\n\n  if (isTransactionMetaValid(savedMeta, options)) {\n    return savedMeta;\n  }\n\n  // existing meta is not valid for this configuration\n  // this is common when changing configuration in local development environment\n  // in a production environment, this may indicate that two apps are sharing a storage key\n  warn('Saved transaction meta does not match the current configuration. ' + \n    'This may indicate that two apps are sharing a storage key.');\n\n}\n\nexport async function getTransactionMeta(\n  authClient: OktaAuthIdxInterface,\n  options?: IdxTransactionMetaOptions\n): Promise<IdxTransactionMeta> {\n  options = removeNils(options);\n  options = { ...authClient.options, ...options }; // local options override SDK options\n  // Load existing transaction meta from storage\n  const validExistingMeta = getSavedTransactionMeta(authClient, options);\n  if (validExistingMeta) {\n    return validExistingMeta;\n  }\n  // No existing? Create new transaction meta.\n  return createTransactionMeta(authClient, options);\n}\n\nexport function saveTransactionMeta (authClient: OktaAuthIdxInterface, meta): void {\n  authClient.transactionManager.save(meta, { muteWarning: true });\n}\n\nexport function clearTransactionMeta (authClient: OktaAuthIdxInterface): void {\n  authClient.transactionManager.clear();\n}\n\nexport function isTransactionMetaValid (meta, options: IdxTransactionMetaOptions  = {}): boolean {\n  // Validate against certain options. If these exist in options, they must match in meta\n  const keys = [\n    'issuer',\n    'clientId',\n    'redirectUri',\n    'state',\n    'codeChallenge',\n    'codeChallengeMethod',\n    'activationToken',\n    'recoveryToken'\n  ];\n  if (isTransactionMetaValidForOptions(meta, options, keys) === false) {\n    return false;\n  }\n\n  // Validate configured flow\n  const { flow } = options;\n  if (isTransactionMetaValidForFlow(meta, flow) === false) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function isTransactionMetaValidForFlow(meta, flow) {\n  // Specific flows should not share transaction data\n  const shouldValidateFlow = flow && flow !== 'default' && flow !== 'proceed';\n  if (shouldValidateFlow) {\n    if (flow !== meta.flow) {\n      // The flow has changed; abandon the old transaction\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function isTransactionMetaValidForOptions(meta, options, keys) {\n  // returns false if values in meta do not match options\n  // if the option does not have a value for a specific key, it is ignored\n  const mismatch = keys.some(key => {\n    const value = options[key];\n    if (value && value !== meta[key]) {\n      return true;\n    }\n  });\n  return !mismatch;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport function isString(obj: any): obj is string {\n  return Object.prototype.toString.call(obj) === '[object String]';\n}\n\nexport function isObject(obj: any): obj is object {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nexport function isNumber(obj: any): obj is number {\n  return Object.prototype.toString.call(obj) === '[object Number]';\n}\n\nexport function isFunction(fn: any): fn is (...any: any[]) => any {\n  return !!fn && {}.toString.call(fn) === '[object Function]';\n}\n\nexport function isPromise(obj) {\n  return obj && obj.finally && (typeof obj.finally === 'function');\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport const STATE_TOKEN_KEY_NAME = 'oktaStateToken';\nexport const DEFAULT_POLLING_DELAY = 500;\nexport const DEFAULT_MAX_CLOCK_SKEW = 300;\nexport const DEFAULT_CACHE_DURATION = 86400;\nexport const TOKEN_STORAGE_NAME = 'okta-token-storage';\nexport const CACHE_STORAGE_NAME = 'okta-cache-storage';\nexport const PKCE_STORAGE_NAME = 'okta-pkce-storage';\nexport const TRANSACTION_STORAGE_NAME = 'okta-transaction-storage';\nexport const SHARED_TRANSACTION_STORAGE_NAME = 'okta-shared-transaction-storage';\nexport const ORIGINAL_URI_STORAGE_NAME = 'okta-original-uri-storage';\nexport const IDX_RESPONSE_STORAGE_NAME = 'okta-idx-response-storage';\nexport const ACCESS_TOKEN_STORAGE_KEY = 'accessToken';\nexport const ID_TOKEN_STORAGE_KEY =  'idToken';\nexport const REFRESH_TOKEN_STORAGE_KEY =  'refreshToken';\nexport const REFERRER_PATH_STORAGE_KEY = 'referrerPath';\n\n// Code verifier: Random URL-safe string with a minimum length of 43 characters.\n// Code challenge: Base64 URL-encoded SHA-256 hash of the code verifier.\nexport const MIN_VERIFIER_LENGTH = 43;\nexport const MAX_VERIFIER_LENGTH = 128;\nexport const DEFAULT_CODE_CHALLENGE_METHOD = 'S256';\n\nexport const IDX_API_VERSION = '1.0.0';", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\nimport { HttpResponse } from '../http/types';\nimport { APIError, FieldError } from './types';\n\nexport default class AuthApiError extends CustomError implements APIError {\n  errorSummary: string;\n  errorCode?: string;\n  errorLink?: string;\n  errorId?: string;\n  errorCauses?: Array<FieldError>;\n  xhr?: HttpResponse;\n  meta?: Record<string, string | number>;\n\n  constructor(err: APIError, xhr?: HttpResponse, meta?: Record<string, string | number>) {\n    const message = err.errorSummary;\n    super(message);\n\n    this.name = 'AuthApiError';\n    this.errorSummary = err.errorSummary;\n    this.errorCode = err.errorCode;\n    this.errorLink = err.errorLink;\n    this.errorId = err.errorId;\n    this.errorCauses = err.errorCauses;\n\n    if (xhr) {\n      this.xhr = xhr;\n    }\n\n    if (meta) {\n      this.meta = meta;\n    }\n  }\n}\n", "/* eslint-disable camelcase */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class OAuthError extends CustomError {\n  errorCode: string;\n  errorSummary: string;\n\n  // for widget / idx-js backward compatibility\n  error: string;\n  error_description: string;\n\n  constructor(errorCode: string, summary: string) {\n    super(summary);\n\n    this.name = 'OAuthError';\n    this.errorCode = errorCode;\n    this.errorSummary = summary;\n\n    // for widget / idx-js backward compatibility\n    this.error = errorCode;\n    this.error_description = summary;\n  }\n}\n\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity */\nimport { isString, clone, isAbsoluteUrl, removeNils } from '../util';\nimport { STATE_TOKEN_KEY_NAME, DEFAULT_CACHE_DURATION } from '../constants';\nimport {\n  OktaAuthHttpInterface,\n  RequestOptions,\n  FetchOptions,\n  RequestData,\n  HttpResponse\n} from './types';\nimport { AuthApiError, OAuthError, AuthSdkError, APIError } from '../errors';\n\ntype InsufficientAuthenticationError = {\n  error: string;\n  // eslint-disable-next-line camelcase\n  error_description: string;\n  // eslint-disable-next-line camelcase\n  max_age: string;\n  // eslint-disable-next-line camelcase\n  acr_values: string;\n};\n\nconst parseInsufficientAuthenticationError = (\n  header: string\n): InsufficientAuthenticationError => {\n  if (!header) {\n    throw new AuthSdkError('Missing header string');\n  }\n\n  return header\n    .split(',')\n    .map(part => part.trim())\n    .map(part => part.split('='))\n    .reduce((acc, curr) => {\n      // unwrap quotes from value\n      acc[curr[0]] = curr[1].replace(/^\"(.*)\"$/, '$1');\n      return acc;\n    }, {}) as InsufficientAuthenticationError;\n};\n\nconst formatError = (sdk: OktaAuthHttpInterface, error: HttpResponse | Error): AuthApiError | OAuthError => {\n  if (error instanceof Error) {\n    // fetch() can throw exceptions\n    // see https://developer.mozilla.org/en-US/docs/Web/API/fetch#exceptions\n    return new AuthApiError({\n      errorSummary: error.message,\n    });\n  }\n\n  let resp: HttpResponse = error;\n  let err: AuthApiError | OAuthError;\n  let serverErr: Record<string, any> = {};\n  if (resp.responseText && isString(resp.responseText)) {\n    try {\n      serverErr = JSON.parse(resp.responseText);\n    } catch (e) {\n      serverErr = {\n        errorSummary: 'Unknown error'\n      };\n    }\n  }\n\n  if (resp.status >= 500) {\n    serverErr.errorSummary = 'Unknown error';\n  }\n\n  if (sdk.options.transformErrorXHR) {\n    resp = sdk.options.transformErrorXHR(clone(resp));\n  }\n\n  if (serverErr.error && serverErr.error_description) {\n    err = new OAuthError(serverErr.error, serverErr.error_description);\n  } else {\n    err = new AuthApiError(serverErr as APIError, resp);\n  }\n\n  if (resp?.status === 403 && !!resp?.headers?.['www-authenticate']) {\n    const { \n      error, \n      // eslint-disable-next-line camelcase\n      error_description,\n      // eslint-disable-next-line camelcase\n      max_age,\n      // eslint-disable-next-line camelcase\n      acr_values \n    } = parseInsufficientAuthenticationError(resp?.headers?.['www-authenticate']);\n    if (error === 'insufficient_authentication_context') {\n      err = new AuthApiError(\n        { \n          errorSummary: error,\n          // eslint-disable-next-line camelcase\n          errorCauses: [{ errorSummary: error_description }]\n        }, \n        resp, \n        {\n          // eslint-disable-next-line camelcase\n          max_age: +max_age,\n          // eslint-disable-next-line camelcase\n          ...(acr_values && { acr_values })\n        }\n      );\n    }\n  }\n\n  return err;\n};\n\nexport function httpRequest(sdk: OktaAuthHttpInterface, options: RequestOptions): Promise<any> {\n  options = options || {};\n\n  if (sdk.options.httpRequestInterceptors) {\n    for (const interceptor of sdk.options.httpRequestInterceptors) {\n      interceptor(options);\n    }\n  }\n\n  var url = options.url,\n      method = options.method,\n      args = options.args,\n      saveAuthnState = options.saveAuthnState,\n      accessToken = options.accessToken,\n      withCredentials = options.withCredentials === true, // default value is false\n      storageUtil = sdk.options.storageUtil,\n      storage = storageUtil!.storage,\n      httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  if (options.cacheResponse) {\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[url as string];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      return Promise.resolve(cachedResponse.response);\n    }\n  }\n\n  var oktaUserAgentHeader = sdk._oktaUserAgent.getHttpHeader();\n  var headers: HeadersInit = {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n    ...oktaUserAgentHeader\n  };\n  Object.assign(headers, sdk.options.headers, options.headers);\n  headers = removeNils(headers) as HeadersInit;\n\n  if (accessToken && isString(accessToken)) {\n    headers['Authorization'] = 'Bearer ' + accessToken;\n  }\n\n  var ajaxOptions: FetchOptions = {\n    headers,\n    data: args || undefined,\n    withCredentials\n  };\n\n  var err, res;\n  return sdk.options.httpRequestClient!(method!, url!, ajaxOptions)\n    .then(function(resp) {\n      res = resp.responseText;\n      if (res && isString(res)) {\n        res = JSON.parse(res);\n        if (res && typeof res === 'object' && !res.headers) {\n          if (Array.isArray(res)) {\n            res.forEach(item => {\n              item.headers = resp.headers;\n            });\n          } else {\n            res.headers = resp.headers;\n          }\n        }\n      }\n\n      if (saveAuthnState) {\n        if (!res.stateToken) {\n          storage.delete(STATE_TOKEN_KEY_NAME);\n        }\n      }\n\n      if (res && res.stateToken && res.expiresAt) {\n        storage.set(STATE_TOKEN_KEY_NAME, res.stateToken, res.expiresAt, sdk.options.cookies!);\n      }\n\n      if (res && options.cacheResponse) {\n        httpCache.updateStorage(url!, {\n          expiresAt: Math.floor(Date.now()/1000) + DEFAULT_CACHE_DURATION,\n          response: res\n        });\n      }\n      \n      return res;\n    })\n    .catch(function(resp) {\n      err = formatError(sdk, resp);\n\n      if (err.errorCode === 'E0000011') {\n        storage.delete(STATE_TOKEN_KEY_NAME);\n      }\n\n      throw err;\n    });\n}\n\nexport function get(sdk: OktaAuthHttpInterface, url: string, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var getOptions = {\n    url: url,\n    method: 'GET'\n  };\n  Object.assign(getOptions, options);\n  return httpRequest(sdk, getOptions);\n}\n\nexport function post(sdk: OktaAuthHttpInterface, url: string, args?: RequestData, options?: RequestOptions) {\n  url = isAbsoluteUrl(url) ? url : sdk.getIssuerOrigin() + url;\n  var postOptions = {\n    url: url,\n    method: 'POST',\n    args: args,\n    saveAuthnState: true\n  };\n  Object.assign(postOptions, options);\n  return httpRequest(sdk, postOptions);\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n/* eslint complexity:[0,8] */\nimport { OktaAuthIdxInterface, IdxTransactionMeta, InteractOptions, InteractResponse } from './types';\nimport { getSavedTransactionMeta, saveTransactionMeta, createTransactionMeta } from './transactionMeta';\nimport { getOAuthBaseUrl } from '../oidc';\nimport { removeNils } from '../util';\nimport { httpRequest } from '../http';\n\n\n/* eslint-disable camelcase */\nexport interface InteractParams {\n  client_id: string;\n  scope: string;\n  redirect_uri: string;\n  code_challenge: string;\n  code_challenge_method: string;\n  state: string;\n  activation_token?: string;\n  recovery_token?: string;\n  client_secret?: string;\n  max_age?: string | number;\n  acr_values?: string;\n  nonce?: string;\n}\n/* eslint-enable camelcase */\n\nfunction getResponse(meta: IdxTransactionMeta): InteractResponse {\n  return {\n    meta,\n    interactionHandle: meta.interactionHandle!,\n    state: meta.state\n  };\n}\n\n// Begin or resume a transaction. Returns an interaction handle\nexport async function interact (\n  authClient: OktaAuthIdxInterface, \n  options: InteractOptions = {}\n): Promise<InteractResponse> {\n  options = removeNils(options);\n\n  let meta = getSavedTransactionMeta(authClient, options);\n  // If meta exists, it has been validated against all options\n\n  if (meta?.interactionHandle) {\n    return getResponse(meta); // Saved transaction, return meta\n  }\n\n  // Create new meta, respecting previous meta if it has been set and is not overridden\n  meta = await createTransactionMeta(authClient, { ...meta, ...options });\n  const baseUrl = getOAuthBaseUrl(authClient);\n  let {\n    clientId,\n    redirectUri,\n    state,\n    scopes,\n    withCredentials,\n    codeChallenge,\n    codeChallengeMethod,\n    activationToken,\n    recoveryToken,\n    maxAge,\n    acrValues,\n    nonce\n  } = meta as IdxTransactionMeta;\n  const clientSecret = options.clientSecret || authClient.options.clientSecret;\n  withCredentials = withCredentials ?? true;\n\n  /* eslint-disable camelcase */\n  const url = `${baseUrl}/v1/interact`;\n  const params = {\n    client_id: clientId,\n    scope: scopes!.join(' '),\n    redirect_uri: redirectUri,\n    code_challenge: codeChallenge,\n    code_challenge_method: codeChallengeMethod,\n    state,\n    ...(activationToken && { activation_token: activationToken }),\n    ...(recoveryToken && { recovery_token: recoveryToken }),\n    // X-Device-Token header need to pair with `client_secret`\n    // eslint-disable-next-line max-len\n    // https://oktawiki.atlassian.net/wiki/spaces/eng/pages/2445902453/Support+Device+Binding+in+interact#Scenario-1%3A-Non-User-Agent-with-Confidential-Client-(top-priority)\n    ...(clientSecret && { client_secret: clientSecret }),\n    ...(maxAge && { max_age: maxAge }),\n    ...(acrValues && { acr_values: acrValues }),\n    ...(nonce && { nonce }),\n  } as InteractParams;\n  /* eslint-enable camelcase */\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded',\n  };\n\n  const resp = await httpRequest(authClient, {\n    method: 'POST',\n    url,\n    headers,\n    withCredentials,\n    args: params\n  });\n  const interactionHandle = resp.interaction_handle;\n\n  const newMeta = {\n    ...meta,\n    interactionHandle,\n    \n    // Options which can be passed into interact() should be saved in the meta\n    withCredentials,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken\n  };\n  // Save transaction meta so it can be resumed\n  saveTransactionMeta(authClient, newMeta);\n\n  return getResponse(newMeta);\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nexport { __rest };\n//# sourceMappingURL=_tslib.js.map\n", "/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nconst isFieldMutable = function isFieldMutable(field) {\n  // mutable defaults to true, annoyingly\n  return ( field.mutable !== false );\n};\n\nconst divideSingleActionParamsByMutability = function divideSingleActionParamsByMutability( action ) {\n  const defaultParamsForAction = {}; // mutable and present\n  const neededParamsForAction = []; // mutable values\n  const immutableParamsForAction = {}; // immutable\n  // TODO: remove assumption that form names are unique, neededParams being an array is a temp fix\n  // not all actions have value (e.g. redirect)\n  // making sure they are not empty and instead hold the remediation object\n  if (!action.value) {\n    neededParamsForAction.push(action);\n    return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n  }\n\n  for ( let field of action.value ) {\n\n    if ( isFieldMutable( field ) ) {\n\n      neededParamsForAction.push(field);\n\n      if ( field.value ?? false ) {\n        defaultParamsForAction[field.name] = field.value;\n      }\n\n    } else {\n      immutableParamsForAction[field.name] = field.value ?? '';\n    }\n  }\n  return { defaultParamsForAction, neededParamsForAction, immutableParamsForAction };\n};\n\nexport const divideActionParamsByMutability = function divideActionParamsByMutability( actionList ) {\n  // TODO: when removing form name is unique assumption, this may all be redundant\n  actionList = Array.isArray(actionList) ? actionList : [ actionList ];\n  const neededParams = [];\n  const defaultParams = {};\n  const immutableParams = {};\n\n  for ( let action of actionList ) {\n    const { \n      defaultParamsForAction, \n      neededParamsForAction, \n      immutableParamsForAction \n    } = divideSingleActionParamsByMutability(action);\n    neededParams.push(neededParamsForAction);\n    defaultParams[action.name] = defaultParamsForAction;\n    immutableParams[action.name] = immutableParamsForAction;\n  }\n\n  return { defaultParams, neededParams, immutableParams };\n};\n\n", "/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len, complexity */\nimport { httpRequest } from '../../../http';\nimport { OktaAuthIdxInterface } from '../../types';    // auth-js/types\nimport { IdxActionFunction, IdxActionParams, IdxResponse, IdxToPersist } from '../../types/idx-js';\nimport { divideActionParamsByMutability } from './actionParser';\nimport AuthApiError from '../../../errors/AuthApiError';\n\nconst generateDirectFetch = function generateDirectFetch(authClient: OktaAuthIdxInterface, { \n  actionDefinition, \n  defaultParamsForAction = {}, \n  immutableParamsForAction = {}, \n  toPersist = {} as IdxToPersist\n}): IdxActionFunction {\n  const target = actionDefinition.href;\n  return async function(params: IdxActionParams = {}): Promise<IdxResponse> {\n    const headers = {\n      'Content-Type': 'application/json',\n      'Accept': actionDefinition.accepts || 'application/ion+json',\n    };\n    const body = JSON.stringify({\n      ...defaultParamsForAction,\n      ...params,\n      ...immutableParamsForAction\n    });\n\n    try {\n      const response = await httpRequest(authClient, {\n        url: target,\n        method: actionDefinition.method,\n        headers,\n        args: body,\n        withCredentials: toPersist?.withCredentials ?? true\n      });\n\n      return authClient.idx.makeIdxResponse({ ...response }, toPersist, true);\n    }\n    catch (err) {\n      if (!(err instanceof AuthApiError) || !err?.xhr) {\n        throw err;\n      }\n\n      const response = err.xhr;\n      const payload = response.responseJSON || JSON.parse(response.responseText);\n      const wwwAuthHeader = response.headers['WWW-Authenticate'] || response.headers['www-authenticate'];\n\n      const idxResponse = authClient.idx.makeIdxResponse({ ...payload }, toPersist, false);\n      if (response.status === 401 && wwwAuthHeader === 'Oktadevicejwt realm=\"Okta Device\"') {\n        // Okta server responds 401 status code with WWW-Authenticate header and new remediation\n        // so that the iOS/MacOS credential SSO extension (Okta Verify) can intercept\n        // the response reaches here when Okta Verify is not installed\n        // set `stepUp` to true if flow should be continued without showing any errors\n        idxResponse.stepUp = true;\n      }\n\n      return idxResponse;\n    }\n  };\n};\n\n// TODO: Resolve in M2: Either build the final polling solution or remove this code\n// const generatePollingFetch = function generatePollingFetch( { actionDefinition, defaultParamsForAction = {}, immutableParamsForAction = {} } ) {\n//   // TODO: Discussions ongoing about when/how to terminate polling: OKTA-246581\n//   const target = actionDefinition.href;\n//   return async function(params) {\n//     return fetch(target, {\n//       method: actionDefinition.method,\n//       headers: {\n//         'content-type': actionDefinition.accepts,\n//       },\n//       body: JSON.stringify({ ...defaultParamsForAction, ...params, ...immutableParamsForAction })\n//     })\n//       .then( response => response.ok ? response.json() : response.json().then( err => Promise.reject(err)) )\n//       .then( idxResponse => makeIdxState(authClient, idxResponse) );\n//   };\n// };\n\nconst generateIdxAction = function generateIdxAction( authClient: OktaAuthIdxInterface, actionDefinition, toPersist ): IdxActionFunction {\n  // TODO: leaving this here to see where the polling is EXPECTED to drop into the code, but removing any accidental trigger of incomplete code\n  // const generator =  actionDefinition.refresh ? generatePollingFetch : generateDirectFetch;\n  const generator = generateDirectFetch;\n  const { defaultParams, neededParams, immutableParams } = divideActionParamsByMutability( actionDefinition );\n\n  const action = generator(authClient, {\n    actionDefinition,\n    defaultParamsForAction: defaultParams[actionDefinition.name],\n    immutableParamsForAction: immutableParams[actionDefinition.name],\n    toPersist\n  });\n  action.neededParams = neededParams;\n  return action;\n};\n\nexport default generateIdxAction;\n", "/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, IdxRemediation } from '../../types';    // auth-js/types\nimport generateIdxAction from './generateIdxAction';\n\nexport const generateRemediationFunctions = function generateRemediationFunctions(\n  authClient: OktaAuthIdxInterface,\n  remediationValue: IdxRemediation[],\n  toPersist = {}\n) {\n  return remediationValue.reduce((obj, remediation) => ({\n    ...obj,\n    [remediation.name]: generateIdxAction(authClient, remediation, toPersist)\n  }), {});\n};\n", "function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (_isNativeReflectConstruct()) {\n    _construct = Reflect.construct;\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nfunction _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !_isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return _setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function () {};\n\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nvar hasOwnProp = Object.prototype.hasOwnProperty;\n/**\n* @typedef {null|boolean|number|string|PlainObject|GenericArray} JSONObject\n*/\n\n/**\n * Copies array and then pushes item into it.\n * @param {GenericArray} arr Array to copy and into which to push\n * @param {any} item Array item to add (to end)\n * @returns {GenericArray} Copy of the original array\n */\n\nfunction push(arr, item) {\n  arr = arr.slice();\n  arr.push(item);\n  return arr;\n}\n/**\n * Copies array and then unshifts item into it.\n * @param {any} item Array item to add (to beginning)\n * @param {GenericArray} arr Array to copy and into which to unshift\n * @returns {GenericArray} Copy of the original array\n */\n\n\nfunction unshift(item, arr) {\n  arr = arr.slice();\n  arr.unshift(item);\n  return arr;\n}\n/**\n * Caught when JSONPath is used without `new` but rethrown if with `new`\n * @extends Error\n */\n\n\nvar NewError = /*#__PURE__*/function (_Error) {\n  _inherits(NewError, _Error);\n\n  var _super = _createSuper(NewError);\n\n  /**\n   * @param {any} value The evaluated scalar value\n   */\n  function NewError(value) {\n    var _this;\n\n    _classCallCheck(this, NewError);\n\n    _this = _super.call(this, 'JSONPath should not be called with \"new\" (it prevents return ' + 'of (unwrapped) scalar values)');\n    _this.avoidNew = true;\n    _this.value = value;\n    _this.name = 'NewError';\n    return _this;\n  }\n\n  return NewError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n* @typedef {PlainObject} ReturnObject\n* @property {string} path\n* @property {JSONObject} value\n* @property {PlainObject|GenericArray} parent\n* @property {string} parentProperty\n*/\n\n/**\n* @callback JSONPathCallback\n* @param {string|PlainObject} preferredOutput\n* @param {\"value\"|\"property\"} type\n* @param {ReturnObject} fullRetObj\n* @returns {void}\n*/\n\n/**\n* @callback OtherTypeCallback\n* @param {JSONObject} val\n* @param {string} path\n* @param {PlainObject|GenericArray} parent\n* @param {string} parentPropName\n* @returns {boolean}\n*/\n\n/* eslint-disable max-len -- Can make multiline type after https://github.com/syavorsky/comment-parser/issues/109 */\n\n/**\n * @typedef {PlainObject} JSONPathOptions\n * @property {JSON} json\n * @property {string|string[]} path\n * @property {\"value\"|\"path\"|\"pointer\"|\"parent\"|\"parentProperty\"|\"all\"} [resultType=\"value\"]\n * @property {boolean} [flatten=false]\n * @property {boolean} [wrap=true]\n * @property {PlainObject} [sandbox={}]\n * @property {boolean} [preventEval=false]\n * @property {PlainObject|GenericArray|null} [parent=null]\n * @property {string|null} [parentProperty=null]\n * @property {JSONPathCallback} [callback]\n * @property {OtherTypeCallback} [otherTypeCallback] Defaults to\n *   function which throws on encountering `@other`\n * @property {boolean} [autostart=true]\n */\n\n/* eslint-enable max-len -- Can make multiline type after https://github.com/syavorsky/comment-parser/issues/109 */\n\n/**\n * @param {string|JSONPathOptions} opts If a string, will be treated as `expr`\n * @param {string} [expr] JSON path to evaluate\n * @param {JSON} [obj] JSON object to evaluate against\n * @param {JSONPathCallback} [callback] Passed 3 arguments: 1) desired payload\n *     per `resultType`, 2) `\"value\"|\"property\"`, 3) Full returned object with\n *     all payloads\n * @param {OtherTypeCallback} [otherTypeCallback] If `@other()` is at the end\n *   of one's query, this will be invoked with the value of the item, its\n *   path, its parent, and its parent's property name, and it should return\n *   a boolean indicating whether the supplied value belongs to the \"other\"\n *   type or not (or it may handle transformations and return `false`).\n * @returns {JSONPath}\n * @class\n */\n\n\nfunction JSONPath(opts, expr, obj, callback, otherTypeCallback) {\n  // eslint-disable-next-line no-restricted-syntax\n  if (!(this instanceof JSONPath)) {\n    try {\n      return new JSONPath(opts, expr, obj, callback, otherTypeCallback);\n    } catch (e) {\n      if (!e.avoidNew) {\n        throw e;\n      }\n\n      return e.value;\n    }\n  }\n\n  if (typeof opts === 'string') {\n    otherTypeCallback = callback;\n    callback = obj;\n    obj = expr;\n    expr = opts;\n    opts = null;\n  }\n\n  var optObj = opts && _typeof(opts) === 'object';\n  opts = opts || {};\n  this.json = opts.json || obj;\n  this.path = opts.path || expr;\n  this.resultType = opts.resultType || 'value';\n  this.flatten = opts.flatten || false;\n  this.wrap = hasOwnProp.call(opts, 'wrap') ? opts.wrap : true;\n  this.sandbox = opts.sandbox || {};\n  this.preventEval = opts.preventEval || false;\n  this.parent = opts.parent || null;\n  this.parentProperty = opts.parentProperty || null;\n  this.callback = opts.callback || callback || null;\n\n  this.otherTypeCallback = opts.otherTypeCallback || otherTypeCallback || function () {\n    throw new TypeError('You must supply an otherTypeCallback callback option ' + 'with the @other() operator.');\n  };\n\n  if (opts.autostart !== false) {\n    var args = {\n      path: optObj ? opts.path : expr\n    };\n\n    if (!optObj) {\n      args.json = obj;\n    } else if ('json' in opts) {\n      args.json = opts.json;\n    }\n\n    var ret = this.evaluate(args);\n\n    if (!ret || _typeof(ret) !== 'object') {\n      throw new NewError(ret);\n    }\n\n    return ret;\n  }\n} // PUBLIC METHODS\n\n\nJSONPath.prototype.evaluate = function (expr, json, callback, otherTypeCallback) {\n  var _this2 = this;\n\n  var currParent = this.parent,\n      currParentProperty = this.parentProperty;\n  var flatten = this.flatten,\n      wrap = this.wrap;\n  this.currResultType = this.resultType;\n  this.currPreventEval = this.preventEval;\n  this.currSandbox = this.sandbox;\n  callback = callback || this.callback;\n  this.currOtherTypeCallback = otherTypeCallback || this.otherTypeCallback;\n  json = json || this.json;\n  expr = expr || this.path;\n\n  if (expr && _typeof(expr) === 'object' && !Array.isArray(expr)) {\n    if (!expr.path && expr.path !== '') {\n      throw new TypeError('You must supply a \"path\" property when providing an object ' + 'argument to JSONPath.evaluate().');\n    }\n\n    if (!hasOwnProp.call(expr, 'json')) {\n      throw new TypeError('You must supply a \"json\" property when providing an object ' + 'argument to JSONPath.evaluate().');\n    }\n\n    var _expr = expr;\n    json = _expr.json;\n    flatten = hasOwnProp.call(expr, 'flatten') ? expr.flatten : flatten;\n    this.currResultType = hasOwnProp.call(expr, 'resultType') ? expr.resultType : this.currResultType;\n    this.currSandbox = hasOwnProp.call(expr, 'sandbox') ? expr.sandbox : this.currSandbox;\n    wrap = hasOwnProp.call(expr, 'wrap') ? expr.wrap : wrap;\n    this.currPreventEval = hasOwnProp.call(expr, 'preventEval') ? expr.preventEval : this.currPreventEval;\n    callback = hasOwnProp.call(expr, 'callback') ? expr.callback : callback;\n    this.currOtherTypeCallback = hasOwnProp.call(expr, 'otherTypeCallback') ? expr.otherTypeCallback : this.currOtherTypeCallback;\n    currParent = hasOwnProp.call(expr, 'parent') ? expr.parent : currParent;\n    currParentProperty = hasOwnProp.call(expr, 'parentProperty') ? expr.parentProperty : currParentProperty;\n    expr = expr.path;\n  }\n\n  currParent = currParent || null;\n  currParentProperty = currParentProperty || null;\n\n  if (Array.isArray(expr)) {\n    expr = JSONPath.toPathString(expr);\n  }\n\n  if (!expr && expr !== '' || !json) {\n    return undefined;\n  }\n\n  var exprList = JSONPath.toPathArray(expr);\n\n  if (exprList[0] === '$' && exprList.length > 1) {\n    exprList.shift();\n  }\n\n  this._hasParentSelector = null;\n\n  var result = this._trace(exprList, json, ['$'], currParent, currParentProperty, callback).filter(function (ea) {\n    return ea && !ea.isParentSelector;\n  });\n\n  if (!result.length) {\n    return wrap ? [] : undefined;\n  }\n\n  if (!wrap && result.length === 1 && !result[0].hasArrExpr) {\n    return this._getPreferredOutput(result[0]);\n  }\n\n  return result.reduce(function (rslt, ea) {\n    var valOrPath = _this2._getPreferredOutput(ea);\n\n    if (flatten && Array.isArray(valOrPath)) {\n      rslt = rslt.concat(valOrPath);\n    } else {\n      rslt.push(valOrPath);\n    }\n\n    return rslt;\n  }, []);\n}; // PRIVATE METHODS\n\n\nJSONPath.prototype._getPreferredOutput = function (ea) {\n  var resultType = this.currResultType;\n\n  switch (resultType) {\n    case 'all':\n      {\n        var path = Array.isArray(ea.path) ? ea.path : JSONPath.toPathArray(ea.path);\n        ea.pointer = JSONPath.toPointer(path);\n        ea.path = typeof ea.path === 'string' ? ea.path : JSONPath.toPathString(ea.path);\n        return ea;\n      }\n\n    case 'value':\n    case 'parent':\n    case 'parentProperty':\n      return ea[resultType];\n\n    case 'path':\n      return JSONPath.toPathString(ea[resultType]);\n\n    case 'pointer':\n      return JSONPath.toPointer(ea.path);\n\n    default:\n      throw new TypeError('Unknown result type');\n  }\n};\n\nJSONPath.prototype._handleCallback = function (fullRetObj, callback, type) {\n  if (callback) {\n    var preferredOutput = this._getPreferredOutput(fullRetObj);\n\n    fullRetObj.path = typeof fullRetObj.path === 'string' ? fullRetObj.path : JSONPath.toPathString(fullRetObj.path); // eslint-disable-next-line node/callback-return\n\n    callback(preferredOutput, type, fullRetObj);\n  }\n};\n/**\n *\n * @param {string} expr\n * @param {JSONObject} val\n * @param {string} path\n * @param {PlainObject|GenericArray} parent\n * @param {string} parentPropName\n * @param {JSONPathCallback} callback\n * @param {boolean} hasArrExpr\n * @param {boolean} literalPriority\n * @returns {ReturnObject|ReturnObject[]}\n */\n\n\nJSONPath.prototype._trace = function (expr, val, path, parent, parentPropName, callback, hasArrExpr, literalPriority) {\n  var _this3 = this;\n\n  // No expr to follow? return path and value as the result of\n  //  this trace branch\n  var retObj;\n\n  if (!expr.length) {\n    retObj = {\n      path: path,\n      value: val,\n      parent: parent,\n      parentProperty: parentPropName,\n      hasArrExpr: hasArrExpr\n    };\n\n    this._handleCallback(retObj, callback, 'value');\n\n    return retObj;\n  }\n\n  var loc = expr[0],\n      x = expr.slice(1); // We need to gather the return value of recursive trace calls in order to\n  // do the parent sel computation.\n\n  var ret = [];\n  /**\n   *\n   * @param {ReturnObject|ReturnObject[]} elems\n   * @returns {void}\n   */\n\n  function addRet(elems) {\n    if (Array.isArray(elems)) {\n      // This was causing excessive stack size in Node (with or\n      //  without Babel) against our performance test:\n      //  `ret.push(...elems);`\n      elems.forEach(function (t) {\n        ret.push(t);\n      });\n    } else {\n      ret.push(elems);\n    }\n  }\n\n  if ((typeof loc !== 'string' || literalPriority) && val && hasOwnProp.call(val, loc)) {\n    // simple case--directly follow property\n    addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, hasArrExpr)); // eslint-disable-next-line unicorn/prefer-switch -- Part of larger `if`\n  } else if (loc === '*') {\n    // all child properties\n    this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, _x, v, p, par, pr, cb) {\n      addRet(_this3._trace(unshift(m, _x), v, p, par, pr, cb, true, true));\n    });\n  } else if (loc === '..') {\n    // all descendent parent properties\n    // Check remaining expression with val's immediate children\n    addRet(this._trace(x, val, path, parent, parentPropName, callback, hasArrExpr));\n\n    this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, _x, v, p, par, pr, cb) {\n      // We don't join m and x here because we only want parents,\n      //   not scalar values\n      if (_typeof(v[m]) === 'object') {\n        // Keep going with recursive descent on val's\n        //   object children\n        addRet(_this3._trace(unshift(l, _x), v[m], push(p, m), v, m, cb, true));\n      }\n    }); // The parent sel computation is handled in the frame above using the\n    // ancestor object of val\n\n  } else if (loc === '^') {\n    // This is not a final endpoint, so we do not invoke the callback here\n    this._hasParentSelector = true;\n    return {\n      path: path.slice(0, -1),\n      expr: x,\n      isParentSelector: true\n    };\n  } else if (loc === '~') {\n    // property name\n    retObj = {\n      path: push(path, loc),\n      value: parentPropName,\n      parent: parent,\n      parentProperty: null\n    };\n\n    this._handleCallback(retObj, callback, 'property');\n\n    return retObj;\n  } else if (loc === '$') {\n    // root only\n    addRet(this._trace(x, val, path, null, null, callback, hasArrExpr));\n  } else if (/^(\\x2D?[0-9]*):(\\x2D?[0-9]*):?([0-9]*)$/.test(loc)) {\n    // [start:end:step]  Python slice syntax\n    addRet(this._slice(loc, x, val, path, parent, parentPropName, callback));\n  } else if (loc.indexOf('?(') === 0) {\n    // [?(expr)] (filtering)\n    if (this.currPreventEval) {\n      throw new Error('Eval [?(expr)] prevented in JSONPath expression.');\n    }\n\n    this._walk(loc, x, val, path, parent, parentPropName, callback, function (m, l, _x, v, p, par, pr, cb) {\n      if (_this3._eval(l.replace(/^\\?\\(((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*?)\\)$/, '$1'), v[m], m, p, par, pr)) {\n        addRet(_this3._trace(unshift(m, _x), v, p, par, pr, cb, true));\n      }\n    });\n  } else if (loc[0] === '(') {\n    // [(expr)] (dynamic property/index)\n    if (this.currPreventEval) {\n      throw new Error('Eval [(expr)] prevented in JSONPath expression.');\n    } // As this will resolve to a property name (but we don't know it\n    //  yet), property and parent information is relative to the\n    //  parent of the property to which this expression will resolve\n\n\n    addRet(this._trace(unshift(this._eval(loc, val, path[path.length - 1], path.slice(0, -1), parent, parentPropName), x), val, path, parent, parentPropName, callback, hasArrExpr));\n  } else if (loc[0] === '@') {\n    // value type: @boolean(), etc.\n    var addType = false;\n    var valueType = loc.slice(1, -2);\n\n    switch (valueType) {\n      case 'scalar':\n        if (!val || !['object', 'function'].includes(_typeof(val))) {\n          addType = true;\n        }\n\n        break;\n\n      case 'boolean':\n      case 'string':\n      case 'undefined':\n      case 'function':\n        // eslint-disable-next-line valid-typeof\n        if (_typeof(val) === valueType) {\n          addType = true;\n        }\n\n        break;\n\n      case 'integer':\n        if (Number.isFinite(val) && !(val % 1)) {\n          addType = true;\n        }\n\n        break;\n\n      case 'number':\n        if (Number.isFinite(val)) {\n          addType = true;\n        }\n\n        break;\n\n      case 'nonFinite':\n        if (typeof val === 'number' && !Number.isFinite(val)) {\n          addType = true;\n        }\n\n        break;\n\n      case 'object':\n        // eslint-disable-next-line valid-typeof\n        if (val && _typeof(val) === valueType) {\n          addType = true;\n        }\n\n        break;\n\n      case 'array':\n        if (Array.isArray(val)) {\n          addType = true;\n        }\n\n        break;\n\n      case 'other':\n        addType = this.currOtherTypeCallback(val, path, parent, parentPropName);\n        break;\n\n      case 'null':\n        if (val === null) {\n          addType = true;\n        }\n\n        break;\n\n      /* c8 ignore next 2 */\n\n      default:\n        throw new TypeError('Unknown value type ' + valueType);\n    }\n\n    if (addType) {\n      retObj = {\n        path: path,\n        value: val,\n        parent: parent,\n        parentProperty: parentPropName\n      };\n\n      this._handleCallback(retObj, callback, 'value');\n\n      return retObj;\n    } // `-escaped property\n\n  } else if (loc[0] === '`' && val && hasOwnProp.call(val, loc.slice(1))) {\n    var locProp = loc.slice(1);\n    addRet(this._trace(x, val[locProp], push(path, locProp), val, locProp, callback, hasArrExpr, true));\n  } else if (loc.includes(',')) {\n    // [name1,name2,...]\n    var parts = loc.split(',');\n\n    var _iterator = _createForOfIteratorHelper(parts),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var part = _step.value;\n        addRet(this._trace(unshift(part, x), val, path, parent, parentPropName, callback, true));\n      } // simple case--directly follow property\n\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  } else if (!literalPriority && val && hasOwnProp.call(val, loc)) {\n    addRet(this._trace(x, val[loc], push(path, loc), val, loc, callback, hasArrExpr, true));\n  } // We check the resulting values for parent selections. For parent\n  // selections we discard the value object and continue the trace with the\n  // current val object\n\n\n  if (this._hasParentSelector) {\n    for (var t = 0; t < ret.length; t++) {\n      var rett = ret[t];\n\n      if (rett && rett.isParentSelector) {\n        var tmp = this._trace(rett.expr, val, rett.path, parent, parentPropName, callback, hasArrExpr);\n\n        if (Array.isArray(tmp)) {\n          ret[t] = tmp[0];\n          var tl = tmp.length;\n\n          for (var tt = 1; tt < tl; tt++) {\n            t++;\n            ret.splice(t, 0, tmp[tt]);\n          }\n        } else {\n          ret[t] = tmp;\n        }\n      }\n    }\n  }\n\n  return ret;\n};\n\nJSONPath.prototype._walk = function (loc, expr, val, path, parent, parentPropName, callback, f) {\n  if (Array.isArray(val)) {\n    var n = val.length;\n\n    for (var i = 0; i < n; i++) {\n      f(i, loc, expr, val, path, parent, parentPropName, callback);\n    }\n  } else if (val && _typeof(val) === 'object') {\n    Object.keys(val).forEach(function (m) {\n      f(m, loc, expr, val, path, parent, parentPropName, callback);\n    });\n  }\n};\n\nJSONPath.prototype._slice = function (loc, expr, val, path, parent, parentPropName, callback) {\n  if (!Array.isArray(val)) {\n    return undefined;\n  }\n\n  var len = val.length,\n      parts = loc.split(':'),\n      step = parts[2] && Number.parseInt(parts[2]) || 1;\n  var start = parts[0] && Number.parseInt(parts[0]) || 0,\n      end = parts[1] && Number.parseInt(parts[1]) || len;\n  start = start < 0 ? Math.max(0, start + len) : Math.min(len, start);\n  end = end < 0 ? Math.max(0, end + len) : Math.min(len, end);\n  var ret = [];\n\n  for (var i = start; i < end; i += step) {\n    var tmp = this._trace(unshift(i, expr), val, path, parent, parentPropName, callback, true); // Should only be possible to be an array here since first part of\n    //   ``unshift(i, expr)` passed in above would not be empty, nor `~`,\n    //     nor begin with `@` (as could return objects)\n    // This was causing excessive stack size in Node (with or\n    //  without Babel) against our performance test: `ret.push(...tmp);`\n\n\n    tmp.forEach(function (t) {\n      ret.push(t);\n    });\n  }\n\n  return ret;\n};\n\nJSONPath.prototype._eval = function (code, _v, _vname, path, parent, parentPropName) {\n  if (code.includes('@parentProperty')) {\n    this.currSandbox._$_parentProperty = parentPropName;\n    code = code.replace(/@parentProperty/g, '_$_parentProperty');\n  }\n\n  if (code.includes('@parent')) {\n    this.currSandbox._$_parent = parent;\n    code = code.replace(/@parent/g, '_$_parent');\n  }\n\n  if (code.includes('@property')) {\n    this.currSandbox._$_property = _vname;\n    code = code.replace(/@property/g, '_$_property');\n  }\n\n  if (code.includes('@path')) {\n    this.currSandbox._$_path = JSONPath.toPathString(path.concat([_vname]));\n    code = code.replace(/@path/g, '_$_path');\n  }\n\n  if (code.includes('@root')) {\n    this.currSandbox._$_root = this.json;\n    code = code.replace(/@root/g, '_$_root');\n  }\n\n  if (/@([\\t-\\r \\)\\.\\[\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF])/.test(code)) {\n    this.currSandbox._$_v = _v;\n    code = code.replace(/@([\\t-\\r \\)\\.\\[\\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF])/g, '_$_v$1');\n  }\n\n  try {\n    return this.vm.runInNewContext(code, this.currSandbox);\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.log(e);\n    throw new Error('jsonPath: ' + e.message + ': ' + code);\n  }\n}; // PUBLIC CLASS PROPERTIES AND METHODS\n// Could store the cache object itself\n\n\nJSONPath.cache = {};\n/**\n * @param {string[]} pathArr Array to convert\n * @returns {string} The path string\n */\n\nJSONPath.toPathString = function (pathArr) {\n  var x = pathArr,\n      n = x.length;\n  var p = '$';\n\n  for (var i = 1; i < n; i++) {\n    if (!/^(~|\\^|@(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*?\\(\\))$/.test(x[i])) {\n      p += /^[\\*0-9]+$/.test(x[i]) ? '[' + x[i] + ']' : \"['\" + x[i] + \"']\";\n    }\n  }\n\n  return p;\n};\n/**\n * @param {string} pointer JSON Path\n * @returns {string} JSON Pointer\n */\n\n\nJSONPath.toPointer = function (pointer) {\n  var x = pointer,\n      n = x.length;\n  var p = '';\n\n  for (var i = 1; i < n; i++) {\n    if (!/^(~|\\^|@(?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*?\\(\\))$/.test(x[i])) {\n      p += '/' + x[i].toString().replace(/~/g, '~0').replace(/\\//g, '~1');\n    }\n  }\n\n  return p;\n};\n/**\n * @param {string} expr Expression to convert\n * @returns {string[]}\n */\n\n\nJSONPath.toPathArray = function (expr) {\n  var cache = JSONPath.cache;\n\n  if (cache[expr]) {\n    return cache[expr].concat();\n  }\n\n  var subx = [];\n  var normalized = expr // Properties\n  .replace(/@(?:null|boolean|number|string|integer|undefined|nonFinite|scalar|array|object|function|other)\\(\\)/g, ';$&;') // Parenthetical evaluations (filtering and otherwise), directly\n  //   within brackets or single quotes\n  .replace(/['\\[](\\??\\((?:[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])*?\\))['\\]]/g, function ($0, $1) {\n    return '[#' + (subx.push($1) - 1) + ']';\n  }) // Escape periods and tildes within properties\n  .replace(/\\[[\"']((?:(?!['\\]])[\\s\\S])*)[\"']\\]/g, function ($0, prop) {\n    return \"['\" + prop.replace(/\\./g, '%@%').replace(/~/g, '%%@@%%') + \"']\";\n  }) // Properties operator\n  .replace(/~/g, ';~;') // Split by property boundaries\n  .replace(/[\"']?\\.[\"']?(?!(?:(?!\\[)[\\s\\S])*\\])|\\[[\"']?/g, ';') // Reinsert periods within properties\n  .replace(/%@%/g, '.') // Reinsert tildes within properties\n  .replace(/%%@@%%/g, '~') // Parent\n  .replace(/(?:;)?(\\^+)(?:;)?/g, function ($0, ups) {\n    return ';' + ups.split('').join(';') + ';';\n  }) // Descendents\n  .replace(/;;;|;;/g, ';..;') // Remove trailing\n  .replace(/;$|'?\\]|'$/g, '');\n  var exprList = normalized.split(';').map(function (exp) {\n    var match = exp.match(/#([0-9]+)/);\n    return !match || !match[1] ? exp : subx[match[1]];\n  });\n  cache[expr] = exprList;\n  return cache[expr].concat();\n};\n\n/**\n* @callback ConditionCallback\n* @param {any} item\n* @returns {boolean}\n*/\n\n/**\n * Copy items out of one array into another.\n * @param {GenericArray} source Array with items to copy\n * @param {GenericArray} target Array to which to copy\n * @param {ConditionCallback} conditionCb Callback passed the current item;\n *     will move item if evaluates to `true`\n * @returns {void}\n */\n\nvar moveToAnotherArray = function moveToAnotherArray(source, target, conditionCb) {\n  var il = source.length;\n\n  for (var i = 0; i < il; i++) {\n    var item = source[i];\n\n    if (conditionCb(item)) {\n      target.push(source.splice(i--, 1)[0]);\n    }\n  }\n};\n\nJSONPath.prototype.vm = {\n  /**\n   * @param {string} expr Expression to evaluate\n   * @param {PlainObject} context Object whose items will be added\n   *   to evaluation\n   * @returns {any} Result of evaluated code\n   */\n  runInNewContext: function runInNewContext(expr, context) {\n    var keys = Object.keys(context);\n    var funcs = [];\n    moveToAnotherArray(keys, funcs, function (key) {\n      return typeof context[key] === 'function';\n    });\n    var values = keys.map(function (vr, i) {\n      return context[vr];\n    });\n    var funcString = funcs.reduce(function (s, func) {\n      var fString = context[func].toString();\n\n      if (!/function/.test(fString)) {\n        fString = 'function ' + fString;\n      }\n\n      return 'var ' + func + '=' + fString + ';' + s;\n    }, '');\n    expr = funcString + expr; // Mitigate http://perfectionkills.com/global-eval-what-are-the-options/#new_function\n\n    if (!/([\"'])use strict\\1/.test(expr) && !keys.includes('arguments')) {\n      expr = 'var arguments = undefined;' + expr;\n    } // Remove last semi so `return` will be inserted before\n    //  the previous one instead, allowing for the return\n    //  of a bare ending expression\n\n\n    expr = expr.replace(/;[\\t-\\r \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000\\uFEFF]*$/, ''); // Insert `return`\n\n    var lastStatementEnd = expr.lastIndexOf(';');\n    var code = lastStatementEnd > -1 ? expr.slice(0, lastStatementEnd + 1) + ' return ' + expr.slice(lastStatementEnd + 1) : ' return ' + expr; // eslint-disable-next-line no-new-func\n\n    return _construct(Function, _toConsumableArray(keys).concat([code])).apply(void 0, _toConsumableArray(values));\n  }\n};\n\nexport { JSONPath };\n", "import { JSONPath, JSONPathOptions } from 'jsonpath-plus';\n\nexport function jsonpath(options: JSONPathOptions): any {\n  // eslint-disable-next-line new-cap\n  return JSONPath({\n    // Disable javascript evaluation by default\n\tpreventEval: true, ...options, });\n}\n", "/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable max-len */\n\nimport { OktaAuthIdxInterface, IdxResponse, IdxRemediation, IdxContext } from '../../types';    // auth-js/types\nimport { IdxActions } from '../../types/idx-js';\nimport { generateRemediationFunctions } from './remediationParser';\nimport generateIdxAction from './generateIdxAction';\nimport { jsonpath } from '../../../util/jsonpath';\nimport { AuthSdkError } from '../../../errors';\n\nconst SKIP_FIELDS = {\n  'remediation': true, // remediations are put into proceed/neededToProceed\n  'context': true, // the API response of 'context' isn't externally useful.  We ignore it and put all non-action (contextual) info into idxState.context\n};\n\nexport const parseNonRemediations = function parseNonRemediations( authClient: OktaAuthIdxInterface, idxResponse: IdxResponse, toPersist = {} ) {\n  const actions = {};\n  const context = {} as IdxContext;\n\n  Object.keys(idxResponse)\n    .filter( field => !SKIP_FIELDS[field])\n    .forEach( field => {\n      const fieldIsObject = typeof idxResponse[field] === 'object' && !!idxResponse[field];\n\n      if ( !fieldIsObject ) {\n        // simple fields are contextual info\n        context[field] = idxResponse[field];\n        return;\n      }\n\n      if ( idxResponse[field].rel ) {\n        // top level actions\n        actions[idxResponse[field].name] = generateIdxAction(authClient, idxResponse[field], toPersist);\n        return;\n      }\n\n      const { value: fieldValue, type, ...info} = idxResponse[field];\n      context[field] = { type, ...info}; // add the non-action parts as context\n\n      if ( type !== 'object' ) {\n        // only object values hold actions\n        context[field].value = fieldValue;\n        return;\n      }\n\n      // We are an object field containing an object value\n      context[field].value = {};\n      Object.entries<IdxRemediation>(fieldValue)\n        .forEach( ([subField, value]) => {\n          if (value.rel) { // is [field].value[subField] an action?\n            // add any \"action\" value subfields to actions\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            actions[`${field}-${subField.name || subField}`] = generateIdxAction(authClient, value, toPersist);\n          } else {\n            // add non-action value subfields to context\n            context[field].value[subField] = value;\n          }\n        });\n    });\n\n  return { context, actions };\n};\n\nconst expandRelatesTo = (idxResponse, value) => {\n  Object.keys(value).forEach(k => {\n    if (k === 'relatesTo') {\n      const query = Array.isArray(value[k]) ? value[k][0] : value[k];\n      if (typeof query === 'string') {\n        const result = jsonpath({ path: query, json: idxResponse })[0];\n        if (result) {\n          value[k] = result;\n          return;\n        } else {\n          throw new AuthSdkError(`Cannot resolve relatesTo: ${query}`);\n        }\n      }\n    }\n    if (Array.isArray(value[k])) {\n      value[k].forEach(innerValue => expandRelatesTo(idxResponse, innerValue));\n    }\n  });\n};\n\nconst convertRemediationAction = (authClient: OktaAuthIdxInterface, remediation, toPersist) => {\n  // Only remediation that has `rel` field (indicator for form submission) can have http action\n  if (remediation.rel) {\n    const remediationActions = generateRemediationFunctions( authClient, [remediation], toPersist );\n    const actionFn = remediationActions[remediation.name];\n    return {\n      ...remediation,\n      action: actionFn,\n    };\n  }\n\n  return remediation;\n};\n\nexport const parseIdxResponse = function parseIdxResponse( authClient: OktaAuthIdxInterface, idxResponse, toPersist = {} ): {\n  remediations: IdxRemediation[];\n  context: IdxContext;\n  actions: IdxActions;\n} {\n  const remediationData = idxResponse.remediation?.value || [];\n\n  remediationData.forEach(\n    remediation => {\n      // TODO: remove once IDX is fixed - OKTA-659181\n      if (remediation.name === 'launch-authenticator' &&\n        remediation?.relatesTo?.[0] === 'authenticatorChallenge' &&\n        !idxResponse?.authenticatorChallenge\n      ) {\n        delete remediation.relatesTo;\n        return;\n      }\n\n      return expandRelatesTo(idxResponse, remediation);\n    }\n  );\n\n  const remediations = remediationData.map(remediation => convertRemediationAction( authClient, remediation, toPersist ));\n\n  const { context, actions } = parseNonRemediations( authClient, idxResponse, toPersist );\n\n  return {\n    remediations,\n    context,\n    actions,\n  };\n};\n", "/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxResponse, IdxToPersist, IdxActionParams } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, RawIdxResponse } from '../../types';    // auth-js/types\nimport { parseIdxResponse } from './idxResponseParser';\n\nexport function makeIdxState( \n  authClient: OktaAuthIdxInterface,\n  idxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean\n): IdxResponse {\n  const rawIdxResponse =  idxResponse;\n  const { remediations, context, actions } = parseIdxResponse( authClient, idxResponse, toPersist );\n  const neededToProceed = [...remediations];\n\n  const proceed: IdxResponse['proceed'] = async function( remediationChoice, paramsFromUser = {} ) {\n    /*\n    remediationChoice is the name attribute on each form\n    name should remain unique for items inside the remediation that are considered forms(identify, select-factor)\n    name can be duplicate for items like redirect where its not considered a form(redirect)\n    when names are not unique its a redirect to a href, so widget wont POST to idx-js layer.\n    */\n    const remediationChoiceObject = remediations.find((remediation) => remediation.name === remediationChoice);\n    if ( !remediationChoiceObject ) {\n      return Promise.reject(`Unknown remediation choice: [${remediationChoice}]`);\n    }\n\n    const actionFn = remediationChoiceObject.action;\n    if (typeof actionFn !== 'function') {\n      return Promise.reject(`Current remediation cannot make form submit action: [${remediationChoice}]`);\n    }\n\n    return remediationChoiceObject.action!(paramsFromUser as IdxActionParams);\n  };\n\n  const findCode = item => item.name === 'interaction_code';\n  const interactionCode = rawIdxResponse.successWithInteractionCode?.value?.find( findCode )?.value as string;\n\n  return {\n    proceed,\n    neededToProceed,\n    actions,\n    context,\n    rawIdxState: rawIdxResponse,\n    interactionCode,\n    toPersist,\n    requestDidSucceed,\n  };\n}\n", "/*!\n * Copyright (c) 2021-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState } from './makeIdxState';\n\nexport default {\n  makeIdxState,\n};\n", "import { OktaAuthIdxInterface } from '../types';    // auth-js/types\nimport { IdxResponse, IdxToPersist, RawIdxResponse } from '../types/idx-js';      // idx/types\nimport { IDX_API_VERSION } from '../../constants';\nimport v1 from './v1/parsers';\n\n\nexport const parsersForVersion = function parsersForVersion( version ) {\n  switch (version) {\n    case '1.0.0':\n      return v1;\n    case undefined:\n    case null:\n      throw new Error('Api version is required');\n    default:\n      throw new Error(`Unknown api version: ${version}.  Use an exact semver version.`);\n  }\n};\n\nexport function validateVersionConfig(version) {\n  if ( !version ) {\n    throw new Error('version is required');\n  }\n\n  const cleanVersion = (version ?? '').replace(/[^0-9a-zA-Z._-]/, '');\n  if ( cleanVersion !== version || !version ) {\n    throw new Error('invalid version supplied - version is required and uses semver syntax');\n  }\n\n  parsersForVersion(version); // will throw for invalid version\n}\n\nexport function makeIdxState ( \n  authClient: OktaAuthIdxInterface,\n  rawIdxResponse: RawIdxResponse,\n  toPersist: IdxToPersist,\n  requestDidSucceed: boolean,\n): IdxResponse {\n  const version = rawIdxResponse?.version ?? IDX_API_VERSION;\n  validateVersionConfig(version);\n  \n  const { makeIdxState } = parsersForVersion(version);\n  return makeIdxState(authClient, rawIdxResponse, toPersist, requestDidSucceed);\n}\n", "/* eslint-disable no-use-before-define */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Input } from './api';\n\n\n// TODO: remove when idx-js provides type information\n\nexport interface ChallengeData {\n  challenge: string; \n  userVerification: string; \n  extensions?: {\n    appid: string;\n  };\n}\nexport interface ActivationData {\n  challenge: string;\n  rp: {\n    name: string;\n  };\n  user: {\n    id: string;\n    name: string;\n    displayName: string;\n  };\n  pubKeyCredParams: {\n    type: string;\n    alg: number;\n  }[];\n  attestation?: string;\n  authenticatorSelection?: {\n    userVerification?: string;\n    authenticatorAttachment?: string;\n    requireResidentKey?: boolean;\n    residentKey?: string;\n  };\n  excludeCredentials?: {\n    id: string;\n    type: string;\n  }[];\n}\nexport interface IdxAuthenticatorMethod {\n  type: string;\n}\nexport interface IdxAuthenticator {\n  displayName: string;\n  id: string;\n  key: string;\n  methods: IdxAuthenticatorMethod[];\n  type: string;\n  settings?: {\n    complexity?: unknown;\n    age?: unknown;\n  };\n  contextualData?: {\n    enrolledQuestion?: {\n      question: string;\n      questionKey: string;\n    };\n    qrcode?: { \n      href: string; \n      method: string; \n      type: string; \n    };\n    sharedSecret?: string;\n    questions?: {\n      questionKey: string;\n      question: string;\n    }[];\n    questionKeys?: string[];\n    selectedChannel?: string;\n    activationData?: ActivationData;\n    challengeData?: ChallengeData;\n  };\n  credentialId?: string;\n  enrollmentId?: string;\n  profile?: Record<string, unknown>;\n  resend?: Record<string, unknown>;\n  poll?: Record<string, unknown>;\n  recover?: Record<string, unknown>;\n  deviceKnown?: boolean;\n}\n\nexport interface IdxForm {\n  value: IdxRemediationValue[];\n}\n\nexport interface IdxOption {\n  value: string | {form: IdxForm} | Input[];\n  label: string;\n  relatesTo?: IdxAuthenticator;\n}\n\nexport interface IdpConfig {\n  id: string;\n  name: string;\n}\n\nexport interface IdxRemediationValueForm {\n  form: IdxForm;\n}\n\nexport interface IdxRemediationValue {\n  name: string;\n  type?: string;\n  required?: boolean;\n  secret?: boolean;\n  visible?: boolean;\n  mutable?: boolean;\n  value?: string | IdxRemediationValueForm;\n  label?: string;\n  form?: IdxForm;\n  options?: IdxOption[];\n  messages?: IdxMessages;\n  minLength?: number;\n  maxLength?: number;\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport interface IdxRemediation {\n  name: string;\n  label?: string;\n  value?: IdxRemediationValue[];\n  relatesTo?: {\n    type?: string;\n    value: IdxAuthenticator;\n  };\n  idp?: IdpConfig;\n  href?: string;\n  method?: string;\n  type?: string;\n  accepts?: string;\n  produces?: string;\n  refresh?: number;\n  rel?: string[];\n  action?: (payload?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxContext {\n  version: string;\n  stateHandle: string;\n  expiresAt: string;\n  intent: string;\n  currentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  authenticators: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  authenticatorEnrollments: {\n    type: string;\n    value: IdxAuthenticator[];\n  };\n  enrollmentAuthenticator: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  user?: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  uiDisplay?: IdxContextUIDisplay\n  app: {\n    type: string;\n    value: Record<string, unknown>;\n  };\n  messages?: IdxMessages;\n  success?: IdxRemediation;\n  failure?: IdxRemediation;\n}\n\nexport interface IdxContextUIDisplay {\n  type: string;\n  value: {\n    label?: string;\n    buttonLabel?: string;\n  }\n}\n\nexport interface IdxMessage {\n  message: string;\n  class: string;\n  i18n: {\n    key: string;\n    params?: unknown[];\n  };\n}\n\nexport interface IdxMessages {\n  type: 'array';\n  value: IdxMessage[];\n}\n\n// JSON response from the server\nexport interface RawIdxResponse {\n  version: string;\n  stateHandle: string;\n  intent?: string;\n  expiresAt?: string;\n  remediation?: {\n    type: 'array';\n    value: IdxRemediation[];\n  };\n  messages?: IdxMessages;\n  success?: boolean;\n  successWithInteractionCode?: IdxRemediation;\n  currentAuthenticator?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n  currentAuthenticatorEnrollment?: {\n    type: string;\n    value: IdxAuthenticator;\n  };\n}\n\nexport function isRawIdxResponse(obj: any): obj is RawIdxResponse {\n  return obj && obj.version;\n}\n\nexport interface IdxActionParams {\n  [key: string]: string | boolean | number | object;\n}\n\nexport interface IdxActions {\n  [key: string]: (params?: IdxActionParams) => Promise<IdxResponse>;\n}\n\nexport interface IdxToPersist {\n  interactionHandle?: string;\n  withCredentials?: boolean;\n}\n\nexport interface IdxActionFunction {\n  (params: IdxActionParams): Promise<IdxResponse>;\n  neededParams?: Array<Array<IdxRemediationValue>>;\n}\n\nexport interface IdxResponse {\n  proceed: (remediationName: string, params: unknown) => Promise<IdxResponse>;\n  neededToProceed: IdxRemediation[];\n  rawIdxState: RawIdxResponse;\n  interactionCode?: string;\n  actions: IdxActions;\n  toPersist: IdxToPersist;\n  context?: IdxContext;\n  requestDidSucceed?: boolean;\n  stepUp?: boolean;\n}\n\nexport function isIdxResponse(obj: any): obj is IdxResponse {\n  return obj && isRawIdxResponse(obj.rawIdxState);\n}\n", "\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport AuthApiError from './AuthApiError';\nimport AuthPollStopError from './AuthPollStopError';\nimport AuthSdkError from './AuthSdkError';\nimport OAuthError from './OAuthError';\n\nfunction isAuthApiError(obj: any): obj is AuthApiError {\n  return (obj instanceof AuthApiError);\n}\n\nfunction isOAuthError(obj: any): obj is OAuthError {\n  return (obj instanceof OAuthError);\n}\n\nexport {\n  isAuthApiError,\n  isOAuthError,\n  AuthApiError,\n  AuthPollStopError,\n  AuthSdkError,\n  OAuthError\n};\n\nexport * from './types';\n", "/* eslint-disable complexity */\n/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { makeIdxState, validateVersionConfig } from './idxState';\nimport { IntrospectOptions, OktaAuthIdxInterface } from './types';\nimport { IdxResponse, isRawIdxResponse } from './types/idx-js';\nimport { getOAuthDomain } from '../oidc';\nimport { IDX_API_VERSION } from '../constants';\nimport { httpRequest } from '../http';\nimport { isAuthApiError } from '../errors';\n\nexport async function introspect (\n  authClient: OktaAuthIdxInterface, \n  options: IntrospectOptions = {}\n): Promise<IdxResponse> {\n  let rawIdxResponse;\n  let requestDidSucceed;\n\n  // try load from storage first\n  const savedIdxResponse = authClient.transactionManager.loadIdxResponse(options);\n  if (savedIdxResponse) {\n    rawIdxResponse = savedIdxResponse.rawIdxResponse;\n    requestDidSucceed = savedIdxResponse.requestDidSucceed;\n  }\n\n  // call idx.introspect if no existing idx response available in storage\n  if (!rawIdxResponse) {\n    const version = options.version || IDX_API_VERSION;\n    const domain = getOAuthDomain(authClient);\n    const { interactionHandle, stateHandle } = options;\n    const withCredentials = options.withCredentials ?? true;\n    try {\n      requestDidSucceed = true;\n      validateVersionConfig(version);\n      const url = `${domain}/idp/idx/introspect`;\n      const body = stateHandle ? { stateToken: stateHandle } : { interactionHandle };\n      const headers = {\n        'Content-Type': `application/ion+json; okta-version=${version}`, // Server wants this version info\n        Accept: `application/ion+json; okta-version=${version}`,\n      };\n      rawIdxResponse = await httpRequest(authClient, {\n        method: 'POST',\n        url,\n        headers,\n        withCredentials,\n        args: body\n      });\n    } catch (err) {\n      if (isAuthApiError(err) && err.xhr && isRawIdxResponse(err.xhr.responseJSON)) {\n        rawIdxResponse = err.xhr.responseJSON;\n        requestDidSucceed = false;\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  const { withCredentials } = options;\n  return makeIdxState(authClient, rawIdxResponse, { withCredentials }, requestDidSucceed);\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { IdxRemediation, IdxRemediationValue } from '../types/idx-js';\n\nexport function getAllValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.map(r => r.name);\n}\n\nexport function getRequiredValues(idxRemediation: IdxRemediation) {\n  return idxRemediation.value?.reduce((required, cur) => {\n    if (cur.required) {\n      required.push(cur.name as never);\n    }\n    return required;\n  }, []);\n}\n\nexport function titleCase(str: string) {\n  return str.charAt(0).toUpperCase() + str.substring(1);\n}\n\nexport function getAuthenticatorFromRemediation(\n  remediation: IdxRemediation\n): IdxRemediationValue {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediation.value!.find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n}\n", "import { Authenticator, isAuthenticator } from '../types';\n\nexport function formatAuthenticator(incoming: unknown): Authenticator {\n  let authenticator: Authenticator;\n  if  (isAuthenticator(incoming)) {\n    authenticator = incoming;\n  } else if (typeof incoming === 'string') {\n    authenticator = {\n      key: incoming\n    };\n  } else {\n    throw new Error('Invalid format for authenticator');\n  }\n  return authenticator;\n}\n\n// Returns true if the authenticators are equivalent\nexport function compareAuthenticators(auth1, auth2) {\n  if (!auth1 || !auth2) {\n    return false;\n  }\n  // by id\n  if (auth1.id && auth2.id) {\n    return (auth1.id === auth2.id);\n  }\n  // by key\n  if (auth1.key && auth2.key) {\n    return (auth1.key === auth2.key);\n  }\n  return false;\n}\n\n// Find matched authenticator in provided order\nexport function findMatchedOption(authenticators, options) {\n  let option;\n  for (let authenticator of authenticators) {\n    option = options\n      .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n    if (option) {\n      break;\n    }\n  }\n  return option;\n}", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable complexity */\nimport { OktaAuthIdxInterface, NextStep, IdxMessage, Authenticator, Input, RemediateOptions } from '../../types';\nimport { IdxAuthenticator, IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { getAllValues, getRequiredValues, titleCase, getAuthenticatorFromRemediation } from '../util';\nimport { formatAuthenticator, compareAuthenticators } from '../../authenticator/util';\n\n// A map from IDX data values (server spec) to RemediationValues (client spec)\nexport type IdxToRemediationValueMap = Record<string, string[]>;\n\nexport interface RemediationValues {\n  stateHandle?: string;\n  authenticators?: (Authenticator | string)[];\n  authenticator?: string | Authenticator;\n  authenticatorsData?: Authenticator[];\n  resend?: boolean;\n}\n\nexport interface RemediatorConstructor {\n  remediationName: string;\n  new<T extends RemediationValues>(\n    remediation: IdxRemediation, \n    values?: T, \n    options?: RemediateOptions\n  ): any;\n}\n\n// Base class - DO NOT expose static remediationName\nexport class Remediator<T extends RemediationValues = RemediationValues> {\n  static remediationName: string;\n\n  remediation: IdxRemediation;\n  values: T;\n  options: RemediateOptions;\n  map?: IdxToRemediationValueMap;\n\n  constructor(\n    remediation: IdxRemediation, \n    values: T = {} as T, \n    options: RemediateOptions = {}\n  ) {\n    // assign fields to the instance\n    this.values = { ...values };\n    this.options = { ...options };\n    this.formatAuthenticators();\n    this.remediation = remediation;\n  }\n\n  private formatAuthenticators() {\n    this.values.authenticators = (this.values.authenticators || []) as Authenticator[];\n\n    // ensure authenticators are in the correct format\n    this.values.authenticators = this.values.authenticators.map(authenticator => {\n      return formatAuthenticator(authenticator);\n    });\n\n    // add authenticator (if any) to \"authenticators\"\n    if (this.values.authenticator) {\n      const authenticator = formatAuthenticator(this.values.authenticator);\n      const hasAuthenticatorInList = this.values.authenticators.some(existing => {\n        return compareAuthenticators(authenticator, existing);\n      });\n      if (!hasAuthenticatorInList) {\n        this.values.authenticators.push(authenticator);\n      }\n    }\n\n    // save non-key meta to \"authenticatorsData\" field\n    // authenticators will be removed after selection to avoid select-authenticator loop\n    this.values.authenticatorsData = this.values.authenticators.reduce((acc, authenticator) => {\n      if (typeof authenticator === 'object' && Object.keys(authenticator).length > 1) {\n        // save authenticator meta into authenticator data\n        acc.push(authenticator);\n      }\n      return acc;\n    }, this.values.authenticatorsData || []);\n  }\n\n  getName(): string {\n    return this.remediation.name;\n  }\n\n  // Override this method to provide custom check\n  /* eslint-disable-next-line no-unused-vars, @typescript-eslint/no-unused-vars */\n  canRemediate(context?: IdxContext): boolean {\n    const required = getRequiredValues(this.remediation);\n    const needed = required!.find((key) => !this.hasData(key));\n    if (needed) {\n      return false; // missing data for a required field\n    }\n    return true; // all required fields have available data\n  }\n\n  // returns an object for the entire remediation form, or just a part\n  getData(key?: string) {\n    if (!key) {\n      let allValues = getAllValues(this.remediation);\n      let res = allValues!.reduce((data, key) => {\n        data[key] = this.getData(key); // recursive\n        return data;\n      }, {});\n      return res;\n    }\n\n    // Map value by \"map${Property}\" function in each subClass\n    if (typeof this[`map${titleCase(key)}`] === 'function') {\n      const val = this[`map${titleCase(key)}`](\n        this.remediation.value!.find(({name}) => name === key)\n      );\n      if (val) {\n        return val;\n      }\n    }\n\n    // If a map is defined for this key, return the first aliased property that returns a truthy value\n    if (this.map && this.map[key]) {\n      const entry = this.map[key];\n      for (let i = 0; i < entry.length; i++) {\n        let val = this.values[entry[i]];\n        if (val) {\n          return val;\n        }\n      }\n    }\n\n    // fallback: return the value by key\n    return this.values[key];\n  }\n\n  hasData(\n    key: string // idx name\n  ): boolean \n  {\n    // no attempt to format, we want simple true/false\n    return !!this.getData(key);\n  }\n\n  getNextStep(_authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    const authenticator = this.getAuthenticator();\n    // TODO: remove type field in the next major version change\n    // https://oktainc.atlassian.net/browse/OKTA-431749\n    const type = authenticator?.type;\n    return { \n      name, \n      inputs, \n      ...(type && { type }),\n      ...(authenticator && { authenticator }),\n    };\n  }\n\n  // Get inputs for the next step\n  getInputs(): Input[] {\n    const inputs: Input[] = [];\n    const inputsFromRemediation = this.remediation.value || [];\n    inputsFromRemediation.forEach(inputFromRemediation => {\n      let input;\n      let { name, type, visible, messages } = inputFromRemediation;\n      if (visible === false) {\n        return; // Filter out invisible inputs, like stateHandle\n      }\n      if (typeof this[`getInput${titleCase(name)}`] === 'function') {\n        input = this[`getInput${titleCase(name)}`](inputFromRemediation);\n      } else if (type !== 'object') {\n        // handle general primitive types\n        let alias;\n        const aliases = (this.map ? this.map[name] : null) || [];\n        if (aliases.length === 1) {\n          alias = aliases[0];\n        } else {\n          // try find key from values\n          alias = aliases.find(name => Object.keys(this.values).includes(name));\n        }\n        if (alias) {\n          input = { ...inputFromRemediation, name: alias };\n        }\n      }\n      if (!input) {\n        input = inputFromRemediation;\n      }\n      if (Array.isArray(input)) {\n        input.forEach(i => inputs.push(i));\n      } else {\n        // guarantees field-level messages are passed back\n        if (messages) {\n          input.messages = messages;\n        }\n        inputs.push(input);\n      }\n    });\n    return inputs;\n  }\n\n  static getMessages(remediation: IdxRemediation): IdxMessage[] | undefined {\n    if (!remediation.value) {\n      return;\n    }\n    return remediation.value[0]?.form?.value.reduce((messages: IdxMessage[], field) => {\n      if (field.messages) {\n        messages = [...messages, ...field.messages.value];\n      }\n      return messages;\n    }, []);\n  }\n\n  // Prepare values for the next remediation\n  // In general, remove used values from inputs for the current remediation\n  // Override this method if special cases need be handled\n  getValuesAfterProceed(): T {\n    const inputsFromRemediation = this.remediation.value || []; // \"raw\" inputs from server response\n    const inputsFromRemediator = this.getInputs(); // \"aliased\" inputs from SDK remediator\n    const inputs = [\n      ...inputsFromRemediation,\n      ...inputsFromRemediator\n    ];\n    // scrub all values related to this remediation\n    for (const input of inputs) {\n      delete this.values[input.name];\n    }\n    return this.values;\n  }\n\n  protected getAuthenticator(): IdxAuthenticator | undefined {\n    // relatesTo value may be an authenticator or an authenticatorEnrollment\n    const relatesTo = this.remediation.relatesTo?.value;\n    if (!relatesTo) {\n      return;\n    }\n\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    if (!authenticatorFromRemediation) {\n      // Hopefully value is an authenticator\n      return relatesTo;\n    }\n\n    // If relatesTo is an authenticatorEnrollment, the id is actually the enrollmentId\n    // Let's get the correct authenticator id from the form value\n    const id = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'id')!.value as string;\n    const enrollmentId = authenticatorFromRemediation.form!.value\n      .find(({ name }) => name === 'enrollmentId')?.value as string;\n\n    return {\n      ...relatesTo,\n      id,\n      enrollmentId\n    };\n  }\n}\n", "/* eslint-disable complexity */\nimport { AuthSdkError } from '../../../errors';\nimport { Input } from '../../types';\n\nexport function unwrapFormValue(remediation): Input { \n  if (Array.isArray(remediation)) {\n    return remediation\n      .map(item => {\n        if (typeof item === 'string' || typeof item === 'number' || typeof item === 'boolean') {\n          return item;\n        }\n        return unwrapFormValue(item);\n      }) as any;\n  }\n\n  const res = {};\n  for (const [key, value] of Object.entries(remediation)) {\n    if (value === null || typeof value === 'undefined') {\n      continue;\n    }\n\n    if (typeof value === 'object') {\n      const formKeys = Object.keys(value as object);\n      // detect patterns like:\n      // value -> form -> value | form -> value\n      if (['value', 'form'].includes(key) \n        && formKeys.length === 1 \n        && ['value', 'form'].includes(formKeys[0])\n      ) {\n        // unwrap nested form\n        const unwrappedForm = unwrapFormValue(value);\n        Object.entries(unwrappedForm).forEach(([key, value]) => {\n          res[key] = value;\n        });\n      } else {\n        // dfs\n        res[key] = unwrapFormValue(value);\n      }\n    } else {\n      // handle primitive value\n      res[key] = value;\n    }\n  }\n\n  return res as Input;\n}\n\n// only check if value is required for now\n// TODO: support SDK layer type based input validation\nexport function hasValidInputValue(input, values) {\n  const fn = (input, values, requiredTracker) => {\n    const { name, value, type, options, required } = input;\n    const isRequired = required || requiredTracker;\n\n    // handle nested value - all required fields should be avaiable in values \n    if (Array.isArray(value)) {\n      return value.reduce((acc, item) => {\n        return acc && fn(item, values[name], isRequired); // recursive call\n      }, true);\n    }\n\n    // handle options field\n    // 1. object type options - check if each object field is required and value can be found from the selectedOption\n    // 2. primitive options - required field is avaiable from top level\n    // 3. unknown format - pass to backend for validation\n    if (options) {\n      // object type options\n      if (type === 'object') {\n        const selectedOption = values[name];\n        if (!selectedOption) {\n          return false;\n        }\n        if (!selectedOption.id) {\n          // unknown option format, pass to backend for validation\n          return true;\n        }\n        const optionSchema = options.find((option) => {\n          const idSchema = option.value.find(({ name }) => name === 'id' );\n          return idSchema.value === selectedOption.id;\n        });\n        if (!optionSchema) {\n          return false;\n        }\n        return optionSchema.value\n          .filter(({ required }) => !!required)\n          .reduce((acc, { name }) => {\n            return acc && !!selectedOption[name];\n          }, true);\n      }\n\n      // primitive options, not required - always valid\n      if (required === false) {\n        return true;\n      }\n\n      // primitive options, required - check if value is available\n      if (required === true) {\n        return !!values[name];\n      }\n\n      // unknown options, throw\n      throw new AuthSdkError(`Unknown options type, ${JSON.stringify(input)}`);\n    }\n\n    // base case\n    if (!isRequired) {\n      return true;\n    }\n      \n    return !!(values && values[name]);\n  };\n\n  return fn(input, values, false);\n}\n", "import { OktaAuthIdxInterface, IdxContext, NextStep, Input } from '../../types';\nimport { Remediator } from '../Base/Remediator';\nimport { unwrapFormValue } from './util';\n\nexport class GenericRemediator extends Remediator {\n  canRemediate(): boolean {\n    // only handle remediations that are able to submit form (xhr)\n    if (typeof this.remediation.action !== 'function') {\n      return false;\n    }\n\n    // DO NOT REMOVE - bring it back when enable client side validation for GenericRemediator - OKTA-512003\n    // const inputs = this.getInputs();\n    // const res = inputs.reduce((acc, input) => {\n    //   return acc && hasValidInputValue(input, this.values);\n    // }, true);\n    // return res;\n\n    if (this.remediation.name === 'poll' || this.remediation.name.endsWith('-poll')) {\n      return true;\n    }\n\n    if (this.options.step) {\n      return true;\n    }\n    \n    // disable auto proceed for unknown remediations\n    return false;\n  }\n\n  getData() {\n    const data = this.getInputs().reduce((acc, { name }) => {\n      acc[name] = this.values[name];\n      return acc;\n    }, {});\n    return data;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, _context?: IdxContext): NextStep {\n    const name = this.getName();\n    const inputs = this.getInputs();\n    \n    /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n    // excludes transformed fields\n    const { \n      // http metas have been transformed to action\n      href, \n      method, \n      rel, \n      accepts, \n      produces, \n      // value has been transform to inputs\n      value,\n      // will be transformed to a function that resolves IdxTransaction\n      action,\n      ...rest \n    } = this.remediation;\n    /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n\n    // step to handle form submission\n    if (action) {\n      return { \n        ...rest,\n        ...(!!inputs.length && { inputs }),\n        action: async (params?) => {\n          return authClient.idx.proceed({\n            step: name,\n            ...params\n          });\n        }\n      };\n    }\n\n    // return whole remediation data for other steps, eg \"redirect-idp\"\n    return { ...this.remediation } as NextStep;\n    \n  }\n\n  getInputs(): Input[] {\n    return (this.remediation.value || [])\n      .filter(({ name }) => name !== 'stateHandle')\n      .map(unwrapFormValue)\n      .map(input => {\n        // use string as default input type\n        input.type = input.type || 'string';\n        return input;\n      });\n  }\n\n}\n", "import { warn, split2 } from '../util';\nimport { RemediationValues, Remediator, RemediatorConstructor } from './remediators';\nimport { GenericRemediator } from './remediators/GenericRemediator';\nimport {\n  OktaAuthIdxInterface,\n  IdxFeature,\n  NextStep,\n  RemediateOptions,\n  RemediationResponse,\n  RunOptions,\n  FlowIdentifier,\n  FlowSpecification\n} from './types';\nimport { IdxMessage, IdxRemediation, IdxRemediationValue, IdxResponse } from './types/idx-js';\n\ntype GetFlowSpecification = (\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier\n) => FlowSpecification;\n\nconst ctx: {\n  remediators: Record<string, RemediatorConstructor>,\n  getFlowSpecification: GetFlowSpecification,\n} = {\n  // default values to be used by minimal IDX API\n  remediators: {},\n  getFlowSpecification: function(_oktaAuth: OktaAuthIdxInterface, _flow: FlowIdentifier = 'default') {\n    return {\n      remediators: {}\n    } as FlowSpecification;\n  }\n};\n\n// should be set in createIdxAPI() factory\nexport function setRemediatorsCtx(newCtx: Partial<typeof ctx>) {\n  Object.assign(ctx, newCtx);\n}\n\nexport function getFlowSpecification(oktaAuth: OktaAuthIdxInterface, flow: FlowIdentifier = 'default') {\n  return ctx.getFlowSpecification(oktaAuth, flow);\n}\n\nexport function isTerminalResponse(idxResponse: IdxResponse) {\n  const { neededToProceed, interactionCode } = idxResponse;\n  return !neededToProceed.length && !interactionCode;\n}\n\nexport function canSkipFn(idxResponse: IdxResponse) {\n  return idxResponse.neededToProceed.some(({ name }) => name === 'skip');\n}\n\nexport function canResendFn(idxResponse: IdxResponse) {\n  return Object.keys(idxResponse.actions).some(actionName => actionName.includes('resend'));\n}\n\nexport function getMessagesFromIdxRemediationValue(\n  value?: IdxRemediationValue[]\n): IdxMessage[] | undefined {\n  if (!value || !Array.isArray(value)) {\n    return;\n  }\n  return value.reduce((messages, value) => {\n    if (value.messages) {\n      messages = [...messages, ...value.messages.value] as never;\n    }\n    if (value.form) {\n      const messagesFromForm = getMessagesFromIdxRemediationValue(value.form.value) || [];\n      messages = [...messages, ...messagesFromForm] as never;\n    } \n    if (value.options) {\n      let optionValues = [];\n      value.options.forEach(option => {\n        if (!option.value || typeof option.value === 'string') {\n          return;\n        }\n        optionValues = [...optionValues, option.value] as never;\n      });\n      const messagesFromOptions = getMessagesFromIdxRemediationValue(optionValues) || [];\n      messages = [...messages, ...messagesFromOptions] as never;\n    }\n    return messages;\n  }, []);\n}\n\nexport function getMessagesFromResponse(idxResponse: IdxResponse, options: RunOptions): IdxMessage[] {\n  let messages: IdxMessage[] = [];\n  const { rawIdxState, neededToProceed } = idxResponse;\n\n  // Handle global messages\n  const globalMessages = rawIdxState.messages?.value.map(message => message);\n  if (globalMessages) {\n    messages = [...messages, ...globalMessages] as never;\n  }\n\n  // Handle field messages for current flow\n  // Preserve existing logic for general cases, remove in the next major version\n  // Follow ion response format for top level messages when useGenericRemediator is true\n  if (!options.useGenericRemediator) {\n    for (let remediation of neededToProceed) {\n      const fieldMessages = getMessagesFromIdxRemediationValue(remediation.value);\n      if (fieldMessages) {\n        messages = [...messages, ...fieldMessages] as never;\n      }\n    }\n  }\n\n  // API may return identical error on same field, filter by i18n key\n  const seen = {};\n  messages = messages.reduce((filtered, message) => {\n    const key = message.i18n?.key;\n    if (key && seen[key] && message.message === seen[key].message) {\n      return filtered;\n    }\n    seen[key] = message;\n    filtered = [...filtered, message] as never;\n    return filtered;\n  }, []);\n\n  return messages;\n}\n\n\nexport function getEnabledFeatures(idxResponse: IdxResponse): IdxFeature[] {\n  const res = [];\n  const { actions, neededToProceed } = idxResponse;\n\n  if (actions['currentAuthenticator-recover']) {\n    res.push(IdxFeature.PASSWORD_RECOVERY as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'select-enroll-profile')) {\n    res.push(IdxFeature.REGISTRATION as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'redirect-idp')) {\n    res.push(IdxFeature.SOCIAL_IDP as never);\n  }\n\n  if (neededToProceed.some(({ name }) => name === 'unlock-account')) {\n    res.push(IdxFeature.ACCOUNT_UNLOCK as never);\n  }\n\n  return res;\n}\n\nexport function getAvailableSteps(\n  authClient: OktaAuthIdxInterface, \n  idxResponse: IdxResponse, \n  useGenericRemediator?: boolean\n): NextStep[] {\n  const res: NextStep[] = [];\n\n  const remediatorMap: Record<string, RemediatorConstructor> = Object.values(ctx.remediators)\n    .reduce((map, remediatorClass) => {\n      // Only add concrete subclasses to the map\n      if (remediatorClass.remediationName) {\n        map[remediatorClass.remediationName] = remediatorClass;\n      }\n      return map;\n    }, {});\n\n  for (let remediation of idxResponse.neededToProceed) {\n    const T = getRemediatorClass(remediation, { useGenericRemediator, remediators: remediatorMap });\n    if (T) {\n      const remediator: Remediator = new T(remediation);\n      res.push (remediator.getNextStep(authClient, idxResponse.context) as never);\n    }\n  }\n\n  for (const [name] of Object.entries((idxResponse.actions || {}))) {\n    let stepObj = {\n      name, \n      action: async (params?) => {\n        return authClient.idx.proceed({ \n          actions: [{ name, params }] \n        });\n      }\n    };\n    if (name.startsWith('currentAuthenticator')) {\n      const [part1, part2] = split2(name, '-');\n      const actionObj = idxResponse.rawIdxState[part1].value[part2];\n      /* eslint-disable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const {\n        href, \n        method, \n        rel, \n        accepts, \n        produces, \n        ...rest\n      } = actionObj;\n      /* eslint-enable no-unused-vars, @typescript-eslint/no-unused-vars */\n      const value = actionObj.value?.filter(item => item.name !== 'stateHandle');\n      stepObj = { \n        ...rest,  \n        ...(value && { value }),\n        ...stepObj,\n      };\n    }\n    res.push(stepObj);\n  }\n\n  return res;\n}\n\nexport function filterValuesForRemediation(\n  idxResponse: IdxResponse,\n  remediationName: string,\n  values: RemediationValues\n): RemediationValues {\n  const remediations = idxResponse.neededToProceed || [];\n  const remediation = remediations.find(r => r.name === remediationName);\n  if (!remediation) {\n    // step was specified, but remediation was not found. This is unexpected!\n    warn(`filterValuesForRemediation: \"${remediationName}\" did not match any remediations`);\n    return values;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const valuesForRemediation = remediation.value!.reduce((res, entry) => {\n    const { name, value } = entry;\n    if (name === 'stateHandle') {\n      res[name] = value; // use the stateHandle value in the remediation\n    } else {\n      res[name] = values[name]; // use the value provided by the caller\n    }\n    return res;\n  }, {});\n  return valuesForRemediation;\n}\n\nfunction getRemediatorClass(remediation: IdxRemediation, options: RemediateOptions) {\n  const { useGenericRemediator, remediators } = options;\n  \n  if (!remediation) {\n    return undefined;\n  }\n\n  if (useGenericRemediator) {\n    return GenericRemediator;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  return remediators![remediation.name];\n}\n\n// Return first match idxRemediation in allowed remediators\n// eslint-disable-next-line complexity\nexport function getRemediator(\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions,\n): Remediator | undefined {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const remediators = options.remediators!;\n  const useGenericRemediator = options.useGenericRemediator;\n  const {neededToProceed: idxRemediations, context} = idxResponse;\n\n  let remediator: Remediator;\n  // remediation name specified by caller - fast-track remediator lookup \n  if (options.step) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediation = idxRemediations.find(({ name }) => name === options.step)!;\n    if (remediation) {\n      const T = getRemediatorClass(remediation, options);\n      return T ? new T(remediation, values, options) : undefined;\n    } else {\n      // step was specified, but remediation was not found. This is unexpected!\n      warn(`step \"${options.step}\" did not match any remediations`);\n      return;\n    }\n  }\n\n  const remediatorCandidates: Remediator[] = [];\n  if (useGenericRemediator) {\n    // always pick the first remediation for when use GenericRemediator\n    remediatorCandidates.push(new GenericRemediator(idxRemediations[0], values, options));\n  } else {\n    for (let remediation of idxRemediations) {\n      const isRemeditionInFlow = Object.keys(remediators as object).includes(remediation.name);\n      if (!isRemeditionInFlow) {\n        continue;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const T = getRemediatorClass(remediation, options)!;\n      remediator = new T(remediation, values, options);\n      if (remediator.canRemediate(context)) {\n        // found the remediator\n        return remediator;\n      }\n      // remediator cannot handle the current values\n      // maybe return for next step\n      remediatorCandidates.push(remediator);  \n    }\n  }\n  \n  return remediatorCandidates[0];\n}\n\n\nexport function getNextStep(\n  authClient: OktaAuthIdxInterface, remediator: Remediator, idxResponse: IdxResponse\n): NextStep {\n  const nextStep = remediator.getNextStep(authClient, idxResponse.context);\n  const canSkip = canSkipFn(idxResponse);\n  const canResend = canResendFn(idxResponse);\n  return {\n    ...nextStep,\n    ...(canSkip && {canSkip}),\n    ...(canResend && {canResend}),\n  };\n}\n\nexport function handleFailedResponse(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  options = {}\n): RemediationResponse {\n  const terminal = isTerminalResponse(idxResponse);\n  const messages = getMessagesFromResponse(idxResponse, options);\n  if (terminal) {\n    return { idxResponse, terminal, messages };\n  } else {\n    const remediator = getRemediator(idxResponse, {}, options);\n    const nextStep = remediator && getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      messages,\n      ...(nextStep && { nextStep }),\n    };\n  }\n  \n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, max-depth, complexity */\nimport { AuthSdkError } from '../errors';\nimport { RemediationValues } from './remediators';\nimport { OktaAuthIdxInterface, RemediateOptions, RemediationResponse } from './types';\nimport { \n  IdxResponse,\n  IdxActionParams, \n} from './types/idx-js';\nimport {\n  isTerminalResponse,\n  filterValuesForRemediation,\n  getRemediator,\n  getNextStep,\n  handleFailedResponse\n} from './util';\n\nexport interface RemediateActionWithOptionalParams {\n  name: string;\n  params?: IdxActionParams;\n}\n\nexport type RemediateAction = string | RemediateActionWithOptionalParams;\n\n\nfunction getActionFromValues(values: RemediationValues, idxResponse: IdxResponse): string | undefined {\n  // Currently support resend actions only\n  return Object.keys(idxResponse.actions).find(action => !!values.resend && action.includes('-resend'));\n}\n\nfunction removeActionFromValues(values: RemediationValues): RemediationValues {\n  // Currently support resend actions only\n  return {\n    ...values,\n    resend: undefined\n  };\n}\n\nfunction removeActionFromOptions(options: RemediateOptions, actionName: string): RemediateOptions {\n  let actions = options.actions || [];\n  actions = actions.filter(entry => {\n    if (typeof entry === 'string') {\n      return entry !== actionName;\n    }\n    return entry.name !== actionName;\n  });\n\n  return { ...options, actions };\n}\n\n// This function is called recursively until it reaches success or cannot be remediated\nexport async function remediate(\n  authClient: OktaAuthIdxInterface,\n  idxResponse: IdxResponse,\n  values: RemediationValues,\n  options: RemediateOptions\n): Promise<RemediationResponse> {\n  let { neededToProceed, interactionCode } = idxResponse;\n  const { flow } = options;\n\n  // If the response contains an interaction code, there is no need to remediate\n  if (interactionCode) {\n    return { idxResponse };\n  }\n\n  const remediator = getRemediator(idxResponse, values, options);\n\n  // Try actions in idxResponse first\n  const actionFromValues = getActionFromValues(values, idxResponse);\n  const actionFromOptions = options.actions || [];\n  const actions = [\n    ...actionFromOptions,\n    ...(actionFromValues && [actionFromValues] || []),\n  ];\n  if (actions) {\n    for (let action of actions) {\n      // Action can either be specified as a string, or as an object with name and optional params\n      let params: IdxActionParams = {};\n      if (typeof action !== 'string') {\n        params = action.params || {};\n        action = action.name;\n      }\n      let valuesWithoutExecutedAction = removeActionFromValues(values);\n      let optionsWithoutExecutedAction = removeActionFromOptions(options, action);\n\n      if (typeof idxResponse.actions[action] === 'function') {\n        idxResponse = await idxResponse.actions[action](params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        if (action === 'cancel') {\n          return { idxResponse, canceled: true };\n        }\n        return remediate(\n          authClient, \n          idxResponse, \n          valuesWithoutExecutedAction, \n          optionsWithoutExecutedAction\n        ); // recursive call\n      }\n\n      // search for action in remediation list\n      const remediationAction = neededToProceed.find(({ name }) => name === action);\n      if (remediationAction) {\n        idxResponse = await idxResponse.proceed(action, params);\n        if (idxResponse.requestDidSucceed === false) {\n          return handleFailedResponse(authClient, idxResponse, options);\n        }\n        return remediate(authClient, idxResponse, values, optionsWithoutExecutedAction); // recursive call\n      }\n    }\n  }\n\n  // Do not attempt to remediate if response is in terminal state\n  const terminal = isTerminalResponse(idxResponse);\n  if (terminal) {\n    return { idxResponse, terminal };\n  }\n\n  if (!remediator) {\n    // With options.step, remediator is not required\n    if (options.step) {\n      values = filterValuesForRemediation(idxResponse, options.step, values); // include only requested values\n      idxResponse = await idxResponse.proceed(options.step, values);\n      if (idxResponse.requestDidSucceed === false) {\n        return handleFailedResponse(authClient, idxResponse, options);\n      }\n      return { idxResponse };\n    }\n\n    // With default flow, remediator is not required\n    if (flow === 'default') {\n      return { idxResponse };\n    }\n    throw new AuthSdkError(`\n      No remediation can match current flow, check policy settings in your org.\n      Remediations: [${neededToProceed.reduce((acc, curr) => acc ? acc + ' ,' + curr.name : curr.name, '')}]\n    `);\n  }\n\n  // Return next step to the caller\n  if (!remediator.canRemediate()) {\n    const nextStep = getNextStep(authClient, remediator, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n\n  const name = remediator.getName();\n  const data = remediator.getData();\n\n  idxResponse = await idxResponse.proceed(name, data);\n  if (idxResponse.requestDidSucceed === false) {\n    return handleFailedResponse(authClient, idxResponse, options);\n  }\n  // We may want to trim the values bag for the next remediation\n  // Let the remediator decide what the values should be (default to current values)\n  values = remediator.getValuesAfterProceed();\n  options = { ...options, step: undefined }; // do not re-use the step\n\n  // generic remediator should not auto proceed in pending status\n  // return nextStep directly\n  if (options.useGenericRemediator && !idxResponse.interactionCode && !isTerminalResponse(idxResponse)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const gr = getRemediator(idxResponse, values, options)!;\n    const nextStep = getNextStep(authClient, gr, idxResponse);\n    return {\n      idxResponse,\n      nextStep,\n    };\n  }\n  \n  return remediate(authClient, idxResponse, values, options); // recursive call\n\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* eslint-disable max-statements, complexity, max-depth */\nimport { interact } from './interact';\nimport { introspect } from './introspect';\nimport { remediate } from './remediate';\nimport { RemediationValues } from './remediators/Base/Remediator';\nimport { \n  OktaAuthIdxInterface,\n  IdxStatus,\n  IdxTransaction,\n  IdxFeature,\n  NextStep,\n  RunOptions,\n  IdxTransactionMeta,\n} from './types';\nimport { IdxMessage, IdxResponse } from './types/idx-js';\nimport { getSavedTransactionMeta, saveTransactionMeta } from './transactionMeta';\nimport {\n  getAvailableSteps,\n  getEnabledFeatures,\n  getMessagesFromResponse,\n  isTerminalResponse,\n  getFlowSpecification\n} from './util';\nimport { Tokens } from '../oidc/types';\nimport { APIError } from '../errors/types';\ndeclare interface RunData {\n  options: RunOptions;\n  values: RemediationValues;\n  status?: IdxStatus;\n  tokens?: Tokens;\n  nextStep?: NextStep;\n  messages?: IdxMessage[];\n  error?: APIError | IdxResponse;\n  meta?: IdxTransactionMeta;\n  enabledFeatures?: IdxFeature[];\n  availableSteps?: NextStep[];\n  idxResponse?: IdxResponse;\n  canceled?: boolean;\n  interactionCode?: string;\n  shouldSaveResponse?: boolean;\n  shouldClearTransaction?: boolean;\n  clearSharedStorage?: boolean;\n  terminal?: boolean;\n}\n\nfunction initializeValues(options: RunOptions) {\n  // remove known options, everything else is assumed to be a value\n  const knownOptions = [\n    'flow', \n    'remediators', \n    'actions', \n    'withCredentials', \n    'step',\n    'useGenericRemediator',\n    'exchangeCodeForTokens',\n  ];\n  const values = { ...options };\n  knownOptions.forEach(option => {\n    delete values[option];\n  });\n  return values;\n}\n\nfunction initializeData(authClient: OktaAuthIdxInterface, data: RunData): RunData {\n  let { options } = data;\n  options = {\n    ...authClient.options.idx,\n    ...options\n  };\n  let {\n    flow,\n    withCredentials,\n    remediators,\n    actions,\n  } = options;\n\n  const status = IdxStatus.PENDING;\n\n  // certain options can be set by the flow specification\n  flow = flow || authClient.idx.getFlow?.() || 'default';\n  if (flow) {\n    authClient.idx.setFlow?.(flow);\n    const flowSpec = getFlowSpecification(authClient, flow);\n    // Favor option values over flow spec\n    withCredentials = (typeof withCredentials !== 'undefined') ? withCredentials : flowSpec.withCredentials;\n    remediators = remediators || flowSpec.remediators;\n    actions = actions || flowSpec.actions;\n  }\n\n  return { \n    ...data,\n    options: { \n      ...options, \n      flow, \n      withCredentials, \n      remediators, \n      actions,\n    },\n    status\n  };\n}\n\nasync function getDataFromIntrospect(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  const { options } = data;\n  const {\n    stateHandle,\n    withCredentials,\n    version,\n    state,\n    scopes,\n    recoveryToken,\n    activationToken,\n    maxAge,\n    acrValues,\n    nonce,\n  } = options;\n\n  let idxResponse;\n  let meta = getSavedTransactionMeta(authClient, { state, recoveryToken, activationToken }); // may be undefined\n\n  if (stateHandle) {\n    idxResponse = await introspect(authClient, { withCredentials, version, stateHandle });\n  } else {\n    let interactionHandle = meta?.interactionHandle; // may be undefined\n    if (!interactionHandle) {\n      // start a new transaction\n      authClient.transactionManager.clear();\n      const interactResponse = await interact(authClient, {\n        withCredentials,\n        state,\n        scopes,\n        activationToken,\n        recoveryToken,\n        maxAge,\n        acrValues,\n        nonce,\n      }); \n      interactionHandle = interactResponse.interactionHandle;\n      meta = interactResponse.meta;\n    }\n  \n    // Introspect to get idx response\n    idxResponse = await introspect(authClient, { withCredentials, version, interactionHandle });\n  }\n  return { ...data, idxResponse, meta };\n}\n\nasync function getDataFromRemediate(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    idxResponse,\n    options,\n    values\n  } = data;\n\n  const {\n    autoRemediate,\n    remediators,\n    actions,\n    flow,\n    step,\n    useGenericRemediator,\n  } = options;\n  \n  const shouldRemediate = (autoRemediate !== false && (remediators || actions || step));\n  if (!shouldRemediate) {\n    return data;\n  }\n\n  values = { \n    ...values, \n    stateHandle: idxResponse!.rawIdxState.stateHandle \n  };\n\n  // Can we handle the remediations?\n  const { \n    idxResponse: idxResponseFromRemediation, \n    nextStep,\n    canceled,\n  } = await remediate(\n    authClient,\n    idxResponse!, \n    values, \n    {\n      remediators,\n      actions,\n      flow,\n      step,\n      useGenericRemediator,\n    }\n  );\n  idxResponse = idxResponseFromRemediation;\n\n  return { ...data, idxResponse, nextStep, canceled };\n}\n\nasync function getTokens(authClient: OktaAuthIdxInterface, data: RunData): Promise<Tokens> {\n  let { meta, idxResponse } = data;\n  const { interactionCode } = idxResponse as IdxResponse;\n  const {\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    urls,\n    scopes,\n  } = meta as IdxTransactionMeta;\n  const tokenResponse = await authClient.token.exchangeCodeForTokens({\n    interactionCode,\n    clientId,\n    codeVerifier,\n    ignoreSignature,\n    redirectUri,\n    scopes\n  }, urls);\n  return tokenResponse.tokens;\n}\n\nasync function finalizeData(authClient: OktaAuthIdxInterface, data: RunData): Promise<RunData> {\n  let {\n    options,\n    idxResponse,\n    canceled,\n    status,\n  } = data;\n  const { exchangeCodeForTokens } = options;\n  let shouldSaveResponse = false;\n  let shouldClearTransaction = false;\n  let clearSharedStorage = true;\n  let interactionCode;\n  let tokens;\n  let enabledFeatures;\n  let availableSteps;\n  let messages;\n  let terminal;\n\n  if (idxResponse) {\n    shouldSaveResponse = !!(idxResponse.requestDidSucceed || idxResponse.stepUp);\n    enabledFeatures = getEnabledFeatures(idxResponse);\n    availableSteps = getAvailableSteps(authClient, idxResponse, options.useGenericRemediator);\n    messages = getMessagesFromResponse(idxResponse, options);\n    terminal = isTerminalResponse(idxResponse);\n  }\n\n  if (terminal) {\n    status = IdxStatus.TERMINAL;\n\n    // In most cases a terminal response should not clear transaction data. The user should cancel or skip to continue.\n    // A terminal \"success\" is a non-error response with no further actions available.\n    // In these narrow cases, saved transaction data should be cleared.\n    // One example of a terminal success is when the email verify flow is continued in another tab\n    const hasActions = Object.keys(idxResponse!.actions).length > 0;\n    const hasErrors = !!messages.find(msg => msg.class === 'ERROR');\n    const isTerminalSuccess = !hasActions && !hasErrors && idxResponse!.requestDidSucceed === true;\n    if (isTerminalSuccess) {\n      shouldClearTransaction = true;\n    } else {\n      // save response if there are actions available (ignore messages)\n      shouldSaveResponse = !!hasActions;\n    }\n    // leave shared storage intact so the transaction can be continued in another tab\n    clearSharedStorage = false;\n  } else if (canceled) {\n    status = IdxStatus.CANCELED;\n    shouldClearTransaction = true;\n  } else if (idxResponse?.interactionCode) { \n    interactionCode = idxResponse.interactionCode;\n    if (exchangeCodeForTokens === false) {\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = false;\n    } else {\n      tokens = await getTokens(authClient, data);\n      status = IdxStatus.SUCCESS;\n      shouldClearTransaction = true;\n    }\n  }\n  return {\n    ...data,\n    status,\n    interactionCode,\n    tokens,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    enabledFeatures,\n    availableSteps,\n    messages,\n    terminal\n  };\n}\n\nexport async function run(\n  authClient: OktaAuthIdxInterface, \n  options: RunOptions = {},\n): Promise<IdxTransaction> {\n  let data: RunData = {\n    options,\n    values: initializeValues(options)\n  };\n\n  data = initializeData(authClient, data);\n  data = await getDataFromIntrospect(authClient, data);\n  data = await getDataFromRemediate(authClient, data);\n  data = await finalizeData(authClient, data);\n\n  const {\n    idxResponse,\n    meta,\n    shouldSaveResponse,\n    shouldClearTransaction,\n    clearSharedStorage,\n    status,\n    enabledFeatures,\n    availableSteps,\n    tokens,\n    nextStep,\n    messages,\n    error,\n    interactionCode\n  } = data;\n\n  if (shouldClearTransaction) {\n    authClient.transactionManager.clear({ clearSharedStorage });\n  }\n  else {\n    // ensures state is saved to sessionStorage\n    saveTransactionMeta(authClient, { ...meta });\n\n    if (shouldSaveResponse) {\n      // Save intermediate idx response in storage to reduce introspect call\n      const { rawIdxState: rawIdxResponse, requestDidSucceed } = idxResponse!;\n      authClient.transactionManager.saveIdxResponse({\n        rawIdxResponse,\n        requestDidSucceed,\n        stateHandle: idxResponse!.context?.stateHandle,\n        interactionHandle: meta?.interactionHandle\n      });\n    }\n  }\n  \n  // copy all fields from idxResponse which are needed by the widget\n  const { actions, context, neededToProceed, proceed, rawIdxState, requestDidSucceed, stepUp } = idxResponse || {};\n  return {\n    status: status!,\n    ...(meta && { meta }),\n    ...(enabledFeatures && { enabledFeatures }),\n    ...(availableSteps && { availableSteps }),\n    ...(tokens && { tokens }),\n    ...(nextStep && { nextStep }),\n    ...(messages && messages.length && { messages }),\n    ...(error && { error }),\n    ...(stepUp && { stepUp }),\n    interactionCode, // if options.exchangeCodeForTokens is false\n\n    // from idx-js\n    actions: actions!,\n    context: context!,\n    neededToProceed: neededToProceed!,\n    proceed: proceed!,\n    rawIdxState: rawIdxState!,\n    requestDidSucceed\n  };\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  AuthenticatorKey,\n  AuthenticationOptions\n} from './types';\nimport { run } from './run';\n\nexport async function authenticate(\n  authClient: OktaAuthIdxInterface, options: AuthenticationOptions = {}\n): Promise<IdxTransaction> {\n  if (options.password && !options.authenticator) {\n    options.authenticator = AuthenticatorKey.OKTA_PASSWORD;\n  }\n  return run(authClient, { \n    ...options, \n    flow: 'authenticate'\n  });\n}\n", "import { IdxAuthenticator, IdxRemediationValue } from '../types/idx-js';\n\n\nexport interface Credentials {\n  [key: string]: string | undefined;\n}\n\nexport abstract class Authenticator<Values> {\n  meta: IdxAuthenticator;\n\n  constructor(authenticator: IdxAuthenticator) {\n    this.meta = authenticator;\n  }\n\n  abstract canVerify(values: Values): boolean;\n\n  abstract mapCredentials(values: Values): Credentials | undefined;\n\n  abstract getInputs(idxRemediationValue: IdxRemediationValue): any; // TODO: add type\n}\n", "import { Authenticator, Credentials } from './Authenticator';\n\nexport interface VerificationCodeValues {\n  verificationCode?: string;\n  otp?: string;\n  credentials?: Credentials;\n}\n\ninterface VerificationCodeCredentials extends Credentials {\n  passcode: string;\n}\n\n// general authenticator to handle \"verificationCode\" input\n// it can be used for \"email\", \"phone\", \"google authenticator\"\n// a new authenticator class should be created if special cases need to be handled\nexport class VerificationCodeAuthenticator extends Authenticator<VerificationCodeValues> {\n  canVerify(values: VerificationCodeValues) {\n    return !!(values.credentials ||values.verificationCode || values.otp);\n  }\n\n  mapCredentials(values): VerificationCodeCredentials | Credentials | undefined {\n    const { credentials, verificationCode, otp } = values;\n    if (!credentials && !verificationCode && !otp) {\n      return;\n    }\n    return credentials || { passcode: verificationCode || otp };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'verificationCode',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n", "import { Credentials } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\n\ninterface TotpCredentials extends Credentials {\n  totp: string;\n}\n\nexport class OktaVerifyTotp extends VerificationCodeAuthenticator {\n  mapCredentials(values): TotpCredentials | undefined {\n    const { verificationCode } = values;\n    if (!verificationCode) {\n      return;\n    }\n    return { totp: verificationCode };\n  }\n}\n", "import { Authenticator, Credentials } from './Authenticator';\n\nexport interface OktaPasswordInputValues {\n  password?: string;\n  passcode?: string;\n  credentials?: Credentials;\n}\n\nexport class OktaPassword extends Authenticator<OktaPasswordInputValues> {\n  canVerify(values: OktaPasswordInputValues) {\n    return !!(values.credentials || values.password || values.passcode);\n  }\n\n  mapCredentials(values: OktaPasswordInputValues): Credentials | undefined {\n    const { credentials, password, passcode } = values;\n    if (!credentials && !password && !passcode) {\n      return;\n    }\n    return credentials || { passcode: passcode || password };\n  }\n\n  getInputs(idxRemediationValue) {\n    return {\n      ...idxRemediationValue.form?.value[0],\n      name: 'password',\n      type: 'string',\n      required: idxRemediationValue.required\n    };\n  }\n}\n", "import { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionEnrollValues {\n  questionKey?: string;\n  question?: string;\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionEnrollment extends Authenticator<SecurityQuestionEnrollValues> {\n  canVerify(values: SecurityQuestionEnrollValues) {\n    const { credentials } = values;\n    if (credentials && credentials.questionKey && credentials.answer) {\n      return true;\n    }\n    const { questionKey, question, answer } = values;\n    return !!(questionKey && answer) || !!(question && answer);\n  }\n\n  mapCredentials(values: SecurityQuestionEnrollValues): Credentials | undefined {\n    const { questionKey, question, answer } = values;\n    if (!answer || (!questionKey && !question)) {\n      return;\n    }\n    return {\n      questionKey: question ? 'custom' : questionKey,\n      question,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'questionKey', type: 'string', required: true },\n      { name: 'question', type: 'string', label: 'Create a security question' },\n      { name: 'answer', type: 'string', label: 'Answer', required: true },\n    ];\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { Authenticator, Credentials } from './Authenticator';\n\nexport interface SecurityQuestionVerificationValues {\n  answer?: string;\n  credentials?: Credentials;\n}\n\nexport class SecurityQuestionVerification extends Authenticator<SecurityQuestionVerificationValues> {\n  canVerify(values: SecurityQuestionVerificationValues) {\n    const { credentials } = values;\n    if (credentials && credentials.answer) {\n      return true;\n    }\n    const { answer } = values;\n    return !!answer;\n  }\n\n  mapCredentials(values: SecurityQuestionVerificationValues): Credentials | undefined {\n    const { answer } = values;\n    if (!answer) {\n      return;\n    }\n    return {\n      questionKey: this.meta.contextualData!.enrolledQuestion!.questionKey,\n      answer\n    };\n  }\n\n  getInputs() {\n    return [\n      { name: 'answer', type: 'string', label: 'Answer', required: true }\n    ];\n  }\n}\n", "import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnEnrollValues {\n  clientData?: string;\n  attestation?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnEnrollment extends Authenticator<WebauthnEnrollValues> {\n  canVerify(values: WebauthnEnrollValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, attestation } = obj;\n    return !!(clientData && attestation);\n  }\n\n  mapCredentials(values: WebauthnEnrollValues): Credentials | undefined {\n    const { credentials, clientData, attestation } = values;\n    if (!credentials && !clientData && !attestation) {\n      return;\n    }\n    return credentials || ({\n      clientData,\n      attestation\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'clientData', type: 'string', required: true, visible: false, label: 'Client Data' },\n      { name: 'attestation', type: 'string', required: true, visible: false, label: 'Attestation' },\n    ];\n  }\n}\n", "import { Authenticator, Credentials } from './Authenticator';\n\nexport interface WebauthnVerificationValues {\n  clientData?: string;\n  authenticatorData?: string;\n  signatureData?: string;\n  credentials?: Credentials;\n}\n\nexport class WebauthnVerification extends Authenticator<WebauthnVerificationValues> {\n  canVerify(values: WebauthnVerificationValues) {\n    const { credentials } = values;\n    const obj = credentials || values;\n    const { clientData, authenticatorData, signatureData } = obj;\n    return !!(clientData && authenticatorData && signatureData);\n  }\n\n  mapCredentials(values: WebauthnVerificationValues): Credentials | undefined {\n    const { credentials, authenticatorData, clientData, signatureData } = values;\n    if (!credentials && !authenticatorData && !clientData && !signatureData) {\n      return;\n    }\n    return credentials || ({\n      authenticatorData,\n      clientData,\n      signatureData\n    });\n  }\n\n  getInputs() {\n    return [\n      { name: 'authenticatorData', type: 'string', label: 'Authenticator Data', required: true, visible: false },\n      { name: 'clientData', type: 'string', label: 'Client Data', required: true, visible: false },\n      { name: 'signatureData', type: 'string', label: 'Signature Data', required: true, visible: false },\n    ];\n  }\n}\n", "import { OktaVerifyTotp } from './OktaVerifyTotp';\nimport { Authenticator } from './Authenticator';\nimport { VerificationCodeAuthenticator } from './VerificationCodeAuthenticator';\nimport { OktaPassword } from './OktaPassword';\nimport { SecurityQuestionEnrollment } from './SecurityQuestionEnrollment';\nimport { SecurityQuestionVerification } from './SecurityQuestionVerification';\nimport { WebauthnEnrollment } from './WebauthnEnrollment';\nimport { WebauthnVerification } from './WebauthnVerification';\nimport { IdxAuthenticator, IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey } from '../types';\n\n/* eslint complexity:[0,8] */\nexport function getAuthenticator(remediation: IdxRemediation): Authenticator<any> {\n  const relatesTo = remediation.relatesTo;\n  const value = relatesTo?.value || {} as IdxAuthenticator;\n  switch (value.key) {\n    case AuthenticatorKey.OKTA_PASSWORD:\n      return new OktaPassword(value);\n    case AuthenticatorKey.SECURITY_QUESTION:\n      if (value.contextualData?.enrolledQuestion) {\n        return new SecurityQuestionVerification(value);\n      } else {\n        return new SecurityQuestionEnrollment(value);\n      }\n    case AuthenticatorKey.OKTA_VERIFY:\n      return new OktaVerifyTotp(value);\n    case AuthenticatorKey.WEBAUTHN:\n      if (value.contextualData?.challengeData) {\n        return new WebauthnVerification(value);\n      } else {\n        return new WebauthnEnrollment(value);\n      }\n    default:\n      return new VerificationCodeAuthenticator(value);\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticator, Authenticator, AuthenticatorValues } from '../../authenticator';\nimport { IdxRemediation, IdxContext } from '../../types/idx-js';\nimport { OktaAuthIdxInterface, NextStep } from '../../types';\n\nexport type VerifyAuthenticatorValues = AuthenticatorValues & RemediationValues;\n\n// Base class - DO NOT expose static remediationName\nexport class VerifyAuthenticator<T extends VerifyAuthenticatorValues = VerifyAuthenticatorValues>\n  extends Remediator<T> {\n\n  authenticator: Authenticator<VerifyAuthenticatorValues>;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n    this.authenticator = getAuthenticator(remediation);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const nextStep = super.getNextStep(authClient, context);\n    const authenticatorEnrollments = context?.authenticatorEnrollments?.value;\n\n    return {\n      ...nextStep,\n      authenticatorEnrollments\n    };\n  }\n\n  canRemediate() {\n    return this.authenticator.canVerify(this.values);\n  }\n\n  mapCredentials() {\n    return this.authenticator.mapCredentials(this.values);\n  }\n\n  getInputCredentials(input) {\n    return this.authenticator.getInputs(input);\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'credentials');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {} as T);\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type EnrollAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class EnrollAuthenticator extends VerifyAuthenticator<EnrollAuthenticatorValues> {\n  static remediationName = 'enroll-authenticator';\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { NextStep, OktaAuthIdxInterface } from '../types';\nimport { IdxContext } from '../types/idx-js';\n\nexport interface EnrollPollValues extends RemediationValues {\n  startPolling?: boolean;\n}\n\nexport class EnrollPoll extends Remediator<EnrollPollValues> {\n  static remediationName = 'enroll-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'enroll-poll';\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context?: IdxContext): NextStep {\n    const common = super.getNextStep(authClient, context);\n    let authenticator = this.getAuthenticator();\n    if (!authenticator && context?.currentAuthenticator) {\n      authenticator = context.currentAuthenticator.value;\n    }\n    return {\n      ...common,\n      authenticator,\n      poll: {\n        required: true,\n        refresh: this.remediation.refresh\n      },\n    };\n  }\n\n  getValuesAfterProceed(): EnrollPollValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'startPolling');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n", "/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxRemediationValueForm, IdxContext } from '../types/idx-js';\nimport { Authenticator, OktaAuthIdxInterface } from '../types/api';\n\n\nexport type SelectEnrollmentChannelValues = RemediationValues & {\n  channel?: string;\n};\n\nexport class SelectEnrollmentChannel extends Remediator<SelectEnrollmentChannelValues> {\n  static remediationName = 'select-enrollment-channel';\n\n  canRemediate() {\n    if (this.values.channel) {\n      return true;\n    }\n\n    if (this.values.authenticator) {\n      const { id, channel } = this.values.authenticator as Authenticator;\n      if (!!id && !!channel) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const remediationValue = this.remediation!.value![0].value as IdxRemediationValueForm;\n    return {\n      authenticator: {\n        id: remediationValue.form.value[0].value,\n        channel: (this.values.authenticator as Authenticator)?.channel || this.values.channel,\n      },\n      stateHandle: this.values.stateHandle,\n\n    };\n  }\n\n  getValuesAfterProceed(): SelectEnrollmentChannelValues {\n    this.values = super.getValuesAfterProceed();\n    delete this.values.authenticators;    // required to prevent infinite loops from auto-remediating via values\n    const filterKey = this.values.channel ? 'channel' : 'authenticator';\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== filterKey);\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n", "/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { IdxContext } from '../types/idx-js';\nimport { OktaAuthIdxInterface } from '../types';\n\n\nexport type EnrollmentChannelDataValues = RemediationValues & {\n  email?: string;\n  phoneNumber?: string;\n};\n\nexport class EnrollmentChannelData extends Remediator<EnrollmentChannelDataValues> {\n  static remediationName = 'enrollment-channel-data';\n\n  getInputEmail() {\n    return [\n      { name: 'email', type: 'string', required: true, label: 'Email' },\n    ];\n  }\n\n  getInputPhoneNumber() {\n    return [\n      { name: 'phoneNumber', type: 'string', required: true, label: 'Phone Number' },\n    ];\n  }\n\n  canRemediate() {\n    return Boolean(this.values.email || this.values.phoneNumber);\n  }\n\n  getNextStep(authClient: OktaAuthIdxInterface, context: IdxContext) {\n    const common = super.getNextStep(authClient, context);\n    const authenticator = context.currentAuthenticator.value;\n    return {\n      ...common,\n      authenticator,\n    };\n  }\n\n  getData() {\n    return {\n      stateHandle: this.values.stateHandle,\n      email: this.values.email,\n      phoneNumber: this.values.phoneNumber\n    };\n  }\n\n  getValuesAfterProceed(): EnrollmentChannelDataValues {\n    let trimmedValues = Object.keys(this.values).filter(valueKey => !['email', 'phoneNumber'].includes(valueKey));\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ChallengeAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ChallengeAuthenticator extends VerifyAuthenticator<ChallengeAuthenticatorValues> {\n  static remediationName = 'challenge-authenticator';\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { EnrollPoll } from './EnrollPoll';\n\nexport class ChallengePoll extends EnrollPoll{\n  static remediationName = 'challenge-poll';\n\n  canRemediate() {\n    return !!this.values.startPolling || this.options.step === 'challenge-poll';\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { VerifyAuthenticator, VerifyAuthenticatorValues } from './Base/VerifyAuthenticator';\n\nexport type ResetAuthenticatorValues = VerifyAuthenticatorValues;\n\nexport class ResetAuthenticator extends VerifyAuthenticator<ResetAuthenticatorValues> {\n  static remediationName = 'reset-authenticator';\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxRemediation, IdxRemediationValue, IdxAuthenticator } from '../types/idx-js';\nimport { RemediateOptions } from '../types';\nimport { Remediator, RemediationValues } from './Base/Remediator';\nimport { Authenticator, Credentials, OktaPassword } from '../authenticator';\n\nexport interface EnrollProfileValues extends RemediationValues {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  credentials?: Credentials;\n  password?: string;\n  passcode?: string;\n}\n\nexport class EnrollProfile extends Remediator<EnrollProfileValues> {\n  static remediationName = 'enroll-profile';\n\n  authenticator: Authenticator<any> | null = null;\n\n  constructor(\n    remediation: IdxRemediation,\n    values: EnrollProfileValues = {},\n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // credentials are only required when Profile Enrollment policy requires them\n    // if credentials are included in the remediation, they are considered required\n    // otherwise it will be omitted\n    const credentials = this.getCredentialsFromRemediation();\n    if (credentials) {\n      this.authenticator = this.authenticator = new OktaPassword({} as IdxAuthenticator);\n    }\n  }\n\n  canRemediate() {\n    // ensure credentials can be verified, if required\n    if (this.authenticator && !this.authenticator.canVerify(this.values)) {\n      return false;\n    }\n\n    const userProfileFromValues = this.getData().userProfile;\n    if (!userProfileFromValues) {\n      return false;\n    }\n    // eslint-disable-next-line max-len\n    const userProfileFromRemediation = this.remediation.value!.find(({ name }) => name === 'userProfile') as IdxRemediationValue;\n    return userProfileFromRemediation.form!.value.reduce((canRemediate, curr) => {\n      if (curr.required) {\n        canRemediate = canRemediate && !!userProfileFromValues[curr.name];\n      }\n      return canRemediate;\n    }, true);\n  }\n\n  getCredentialsFromRemediation () {\n    return this.remediation.value!.find(({ name }) => name === 'credentials');\n  }\n\n  mapUserProfile({form: { value: profileAttributes }}) {\n    const attributeNames = profileAttributes.map(({name}) => name);\n    const data = attributeNames.reduce((attributeValues, attributeName) => (\n      this.values[attributeName] ? {\n      ...attributeValues,\n      [attributeName]: this.values[attributeName]\n    } : attributeValues), {});\n    if (Object.keys(data).length === 0) {\n      return;\n    }\n    return data;\n  }\n\n  mapCredentials() {\n    const val = this.authenticator && this.authenticator.mapCredentials(this.values);\n    if (!val) {\n      return;\n    }\n    return val;\n  }\n\n  getInputUserProfile(input) {\n    return [...input.form.value];\n  }\n\n  getInputCredentials(input) {\n    return [...input.form.value];\n  }\n\n  getErrorMessages(errorRemediation) {\n    return errorRemediation.value[0].form.value.reduce((errors, field) => {\n      if (field.messages) {\n        errors.push(field.messages.value[0].message);\n      }\n      return errors;\n    }, []);\n  }\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Credentials } from '../authenticator';\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface IdentifyValues extends RemediationValues {\n  username?: string;\n  password?: string;\n  credentials?: Credentials;\n  rememberMe?: boolean;\n}\n\nexport class Identify extends Remediator<IdentifyValues> {\n  static remediationName = 'identify';\n\n  map = {\n    'identifier': ['username']\n  };\n\n  canRemediate(): boolean {\n    const { identifier } = this.getData();\n    return !!identifier;\n  }\n\n  mapCredentials() {\n    const { credentials, password } = this.values;\n    if (!credentials && !password) {\n      return;\n    }\n    return credentials || { passcode: password };\n  }\n\n  getInputCredentials(input) {\n    return {\n      ...input.form.value[0],\n      name: 'password',\n      required: input.required\n    };\n  }\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface ReEnrollAuthenticatorValues extends RemediationValues {\n  newPassword?: string;\n}\n\nexport class ReEnrollAuthenticator extends Remediator<ReEnrollAuthenticatorValues> {\n  static remediationName = 'reenroll-authenticator';\n\n  mapCredentials() {\n    const { newPassword } = this.values;\n    if (!newPassword) {\n      return;\n    }\n    return { \n      passcode: newPassword,\n    };\n  }\n\n  getInputCredentials(input) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const challengeType = this.getAuthenticator()!.type;\n    const name = challengeType === 'password' ? 'newPassword' : 'verificationCode';\n    return {\n      ...input.form.value[0],\n      name\n    };\n  }\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ReEnrollAuthenticator } from './ReEnrollAuthenticator';\n\nexport class ReEnrollAuthenticatorWarning extends ReEnrollAuthenticator {\n  static remediationName = 'reenroll-authenticator-warning';\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator } from './Base/Remediator';\n\nexport class RedirectIdp extends Remediator {\n  static remediationName = 'redirect-idp';\n\n  canRemediate() {\n    return false;\n  }\n\n  getNextStep() {\n    const { name, type, idp, href } = this.remediation;\n    return {\n      name,\n      type,\n      idp,\n      href\n    };\n  }\n\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { getAuthenticatorFromRemediation } from '../util';\nimport { IdxRemediationValue, IdxContext, IdxOption } from '../../types/idx-js';\nimport { Authenticator, isAuthenticator } from '../../types/api';\nimport { compareAuthenticators, findMatchedOption} from '../../authenticator/util';\n\nexport type SelectAuthenticatorValues = RemediationValues & {\n  authenticator?: string | Authenticator;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class SelectAuthenticator<T extends SelectAuthenticatorValues = SelectAuthenticatorValues>\n  extends Remediator<T> {\n  selectedAuthenticator?: Authenticator;\n  selectedOption?: any;\n\n  // Find matched authenticator in provided order\n  findMatchedOption(authenticators, options) {\n    let option: IdxOption | undefined;\n    for (let authenticator of authenticators) {\n      option = options\n        .find(({ relatesTo }) => relatesTo.key && relatesTo.key === authenticator.key);\n      if (option) {\n        break;\n      }\n    }\n    return option;\n  }\n\n  /* eslint complexity:[0,9] */\n  canRemediate(context?: IdxContext) {\n    const { authenticators, authenticator } = this.values;\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation);\n    const { options } = authenticatorFromRemediation;\n    // Let users select authenticator if no input is provided\n    if (!authenticators || !authenticators.length) {\n      return false;\n    }\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      return true;\n    }\n\n    // Proceed with provided authenticators\n    const matchedOption = this.findMatchedOption(authenticators, options!);\n    if (matchedOption) {\n      // Don't select current authenticator (OKTA-612939)\n      const isCurrentAuthenticator = context?.currentAuthenticator\n        && context?.currentAuthenticator.value.id === matchedOption.relatesTo?.id;\n      const isCurrentAuthenticatorEnrollment = context?.currentAuthenticatorEnrollment\n        && context?.currentAuthenticatorEnrollment.value.id === matchedOption.relatesTo?.id;\n      return !isCurrentAuthenticator && !isCurrentAuthenticatorEnrollment;\n    }\n    \n    return false;\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const { authenticators, authenticator } = this.values;\n\n    // Authenticator is explicitly specified by id\n    if (isAuthenticator(authenticator) && authenticator.id) {\n      this.selectedAuthenticator = authenticator; // track the selected authenticator\n      return authenticator;\n    }\n\n    const { options } = remediationValue;\n    const selectedOption = findMatchedOption(authenticators, options);\n    this.selectedAuthenticator = selectedOption.relatesTo; // track the selected authenticator\n    this.selectedOption = selectedOption;\n    return {\n      id: selectedOption?.value.form.value.find(({ name }) => name === 'id').value\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    const options = remediation.options.map(({ label, relatesTo }) => {\n      return {\n        label,\n        value: relatesTo.key\n      };\n    });\n    return { name: 'authenticator', type: 'string', options };\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticators\n    const authenticators = (this.values.authenticators as Authenticator[])\n      .filter(authenticator => {\n        return compareAuthenticators(authenticator, this.selectedAuthenticator) !== true;\n      });\n    return { ...this.values, authenticators };\n  }\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { getAuthenticatorFromRemediation } from './util';\nimport { IdxRemediation } from '../types/idx-js';\nimport { AuthenticatorKey, Authenticator, RemediateOptions } from '../types';\n\nexport type SelectAuthenticatorAuthenticateValues = SelectAuthenticatorValues & {\n  password?: string;\n};\n\nexport class SelectAuthenticatorAuthenticate extends SelectAuthenticator<SelectAuthenticatorAuthenticateValues> {\n  static remediationName = 'select-authenticator-authenticate';\n\n  constructor(\n    remediation: IdxRemediation, \n    values: SelectAuthenticatorValues = {}, \n    options: RemediateOptions = {}\n  ) {\n    super(remediation, values, options);\n\n    // Preset password authenticator to trigger recover action\n    const isRecoveryFlow = this.options.flow === 'recoverPassword';\n    const hasPasswordInOptions = getAuthenticatorFromRemediation(remediation)\n      .options?.some(({ relatesTo }) => relatesTo?.key === AuthenticatorKey.OKTA_PASSWORD);\n    if (hasPasswordInOptions && (isRecoveryFlow || this.values.password)) {\n      this.values.authenticators = [\n        ...this.values.authenticators || [],\n        { key: AuthenticatorKey.OKTA_PASSWORD }\n      ] as Authenticator[];\n    }\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\n\nexport type SelectAuthenticatorEnrollValues = SelectAuthenticatorValues;\n\nexport class SelectAuthenticatorEnroll extends SelectAuthenticator<SelectAuthenticatorEnrollValues> {\n  static remediationName = 'select-authenticator-enroll';\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { SelectAuthenticator, SelectAuthenticatorValues } from './Base/SelectAuthenticator';\nimport { Authenticator } from '../types';\nimport { IdxRemediationValue } from '../types/idx-js';\n\n\nexport type SelectAuthenticatorUnlockAccountValues = SelectAuthenticatorValues & {\n  identifier?: string;\n  methodType?: string;\n};\n\nexport class SelectAuthenticatorUnlockAccount extends SelectAuthenticator<SelectAuthenticatorUnlockAccountValues> {\n  static remediationName = 'select-authenticator-unlock-account';\n  authenticator?: Authenticator;\n\n  map = {\n    identifier: ['username']\n  };\n\n  canRemediate() {\n    const identifier = this.getData('identifier');\n    return !!identifier && super.canRemediate();\n  }\n\n  mapAuthenticator(remediationValue: IdxRemediationValue) {\n    const authenticatorMap = super.mapAuthenticator(remediationValue);\n    const methodTypeOption = this.selectedOption?.value.form.value.find(({ name }) => name === 'methodType');\n\n    // defaults to 'manually defined' value\n    // 2nd: option may have pre-defined value, like stateHandle\n    // 3rd: if only a single OV option is available, default to that option\n    const methodTypeValue = this.values.methodType ||\n      methodTypeOption?.value as string || methodTypeOption?.options?.[0]?.value as string;\n\n    if (methodTypeValue) {\n      return {\n        ...authenticatorMap,\n        methodType: methodTypeValue\n      };\n    }\n\n    return authenticatorMap;\n  }\n\n  getInputUsername () {\n    return { name: 'username', type: 'string' };\n  }\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface SelectEnrollProfileValues extends RemediationValues {}\n\nexport class SelectEnrollProfile extends Remediator<SelectEnrollProfileValues> {\n  static remediationName = 'select-enroll-profile';\n\n  canRemediate() {\n    return true;\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { Remediator, RemediationValues } from './Remediator';\nimport { IdxRemediationValue, IdxRemediation, IdxAuthenticator } from '../../types/idx-js';\nimport { isAuthenticator } from '../../types/api';\nimport { compareAuthenticators } from '../../authenticator/util';\n\nexport type AuthenticatorDataValues = RemediationValues & {\n  methodType?: string;\n};\n\n// Base class - DO NOT expose static remediationName\nexport class AuthenticatorData<T extends AuthenticatorDataValues = AuthenticatorDataValues> extends Remediator<T> {\n  authenticator: IdxAuthenticator;\n\n  constructor(remediation: IdxRemediation, values: T = {} as T) {\n    super(remediation, values);\n\n    // set before other data calculation\n    this.authenticator = this.getAuthenticator()!;\n\n    this.formatAuthenticatorData();\n  }\n\n  protected formatAuthenticatorData() {\n    const authenticatorData = this.getAuthenticatorData();\n    if (authenticatorData) {\n      this.values.authenticatorsData = this.values.authenticatorsData!.map(data => {\n        if (compareAuthenticators(this.authenticator, data)) {\n          return this.mapAuthenticatorDataFromValues(data);\n        }\n        return data;\n      });\n    } else {\n      const data = this.mapAuthenticatorDataFromValues();\n      if (data) {\n        this.values.authenticatorsData!.push(data);\n      }\n    }\n  }\n\n  protected getAuthenticatorData() {\n    return this.values.authenticatorsData!\n      .find((data) => compareAuthenticators(this.authenticator, data));\n  }\n\n  canRemediate() {\n    return this.values.authenticatorsData!\n      .some(data => compareAuthenticators(this.authenticator, data));\n  }\n\n  protected mapAuthenticatorDataFromValues(authenticatorData?) {\n    // add methodType to authenticatorData if it exists in values\n    let { methodType, authenticator } = this.values;\n    if (!methodType && isAuthenticator(authenticator)) {\n     methodType = authenticator?.methodType;\n    }\n    \n    const { id, enrollmentId } = this.authenticator;\n    const data = { \n      id,\n      enrollmentId,\n      ...(authenticatorData && authenticatorData),\n      ...(methodType && { methodType }) \n    };\n\n    return data.methodType ? data : null;\n  }\n\n  protected getAuthenticatorFromRemediation(): IdxRemediationValue {\n    const authenticator = this.remediation.value!\n      .find(({ name }) => name === 'authenticator') as IdxRemediationValue;\n    return authenticator;\n  }\n\n  getValuesAfterProceed(): T {\n    this.values = super.getValuesAfterProceed();\n    // remove used authenticatorData\n    const authenticatorsData = this.values.authenticatorsData!\n      .filter(data => compareAuthenticators(this.authenticator, data) !== true);\n    return { ...this.values, authenticatorsData };\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\n\nexport type AuthenticatorVerificationDataValues = AuthenticatorDataValues;\n\nexport class AuthenticatorVerificationData extends AuthenticatorData<AuthenticatorVerificationDataValues> {\n  static remediationName = 'authenticator-verification-data';\n\n  mapAuthenticator() {\n    return this.getAuthenticatorData();\n  }\n\n  getInputAuthenticator() {\n    const authenticator = this.getAuthenticatorFromRemediation();\n    const methodType = authenticator.form!.value.find(({ name }) => name === 'methodType');\n    // if has methodType in form, let user select the methodType\n    if (methodType && methodType.options) {\n      return { \n        name: 'methodType', \n        type: 'string', \n        required: true, \n        options: methodType.options \n      };\n    }\n    // no methodType, then return form values\n    const inputs = [...authenticator.form!.value];\n    return inputs;\n  }\n\n  getValuesAfterProceed(): AuthenticatorVerificationDataValues {\n    this.values = super.getValuesAfterProceed();\n    let trimmedValues = Object.keys(this.values).filter(valueKey => valueKey !== 'authenticator');\n    return trimmedValues.reduce((values, valueKey) => ({...values, [valueKey]: this.values[valueKey]}), {});\n  }\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthenticatorData, AuthenticatorDataValues } from './Base/AuthenticatorData';\nimport { getAuthenticatorFromRemediation } from './util';\n\nexport type AuthenticatorEnrollmentDataValues =  AuthenticatorDataValues & {\n  phoneNumber?: string;\n  resend?: boolean; // resend is not a remediator value - revise when IdxResponse structure is updated\n}\nexport class AuthenticatorEnrollmentData extends AuthenticatorData<AuthenticatorEnrollmentDataValues> {\n  static remediationName = 'authenticator-enrollment-data';\n\n  mapAuthenticator() {\n    const authenticatorData = this.getAuthenticatorData();\n    const authenticatorFromRemediation = getAuthenticatorFromRemediation(this.remediation)!;\n    return { \n      id: authenticatorFromRemediation.form!.value\n        .find(({ name }) => name === 'id')!.value,\n      methodType: authenticatorData!.methodType,\n      phoneNumber: authenticatorData!.phoneNumber,\n    };\n  }\n\n  getInputAuthenticator(remediation) {\n    return [\n      { name: 'methodType', type: 'string' }, \n      { name: 'phoneNumber', label: 'Phone Number', type: 'string' }\n    ].map(item => {\n      const value = remediation.form.value.find(val => val.name === item.name);\n      return { ...value, ...item };\n    });\n  }\n\n  protected mapAuthenticatorDataFromValues(data?) {\n    // get mapped authenticator from base class\n    data = super.mapAuthenticatorDataFromValues(data);\n    // add phoneNumber to authenticator if it exists in values\n    const { phoneNumber } = this.values;\n    if (!data && !phoneNumber) {\n      return;\n    }\n\n    return { \n      ...(data && data), \n      ...(phoneNumber && { phoneNumber }) \n    };\n  }\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { Remediator, RemediationValues } from './Base/Remediator';\n\nexport interface SkipValues extends RemediationValues {\n  skip?: boolean;\n}\n\nexport class Skip extends Remediator<SkipValues> {\n  static remediationName = 'skip';\n\n  canRemediate() {\n    return !!this.values.skip || this.options.step === 'skip';\n  }\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  RedirectIdp,\n  AuthenticatorEnrollmentData,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorVerificationData,\n  EnrollPoll,\n  ChallengePoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  Skip\n} from '../remediators';\n\nexport const AuthenticationFlow: RemediationFlow = {\n  'identify': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'redirect-idp': RedirectIdp,\n  'skip': Skip,\n};\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  AuthenticatorVerificationData,\n  ResetAuthenticator,\n  ReEnrollAuthenticator,\n  ReEnrollAuthenticatorWarning,\n  SelectAuthenticatorEnroll,\n  AuthenticatorEnrollmentData,\n  EnrollPoll\n} from '../remediators';\n\nexport const PasswordRecoveryFlow: RemediationFlow = {\n  'identify': Identify,\n  'identify-recovery': Identify,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'reset-authenticator': ResetAuthenticator,\n  'reenroll-authenticator': ReEnrollAuthenticator,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n  'enroll-poll': EnrollPoll,\n};\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport { \n  SelectEnrollProfile,\n  EnrollPoll,\n  SelectEnrollmentChannel,\n  EnrollmentChannelData,\n  EnrollProfile,\n  SelectAuthenticatorEnroll,\n  EnrollAuthenticator,\n  AuthenticatorEnrollmentData,\n  Skip,\n} from '../remediators';\n\nexport const RegistrationFlow: RemediationFlow = {\n  'select-enroll-profile': SelectEnrollProfile,\n  'enroll-profile': EnrollProfile,\n  'authenticator-enrollment-data': AuthenticatorEnrollmentData,\n  'select-authenticator-enroll': SelectAuthenticatorEnroll,\n  'enroll-poll': EnrollPoll,\n  'select-enrollment-channel': SelectEnrollmentChannel,\n  'enrollment-channel-data': EnrollmentChannelData,\n  'enroll-authenticator': EnrollAuthenticator,\n  'skip': Skip,\n};\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { RemediationFlow } from './RemediationFlow';\nimport {\n  Identify,\n  SelectAuthenticatorUnlockAccount,\n  SelectAuthenticatorAuthenticate,\n  ChallengeAuthenticator,\n  ChallengePoll,\n  AuthenticatorVerificationData,\n  ReEnrollAuthenticatorWarning\n} from '../remediators';\n\nexport const AccountUnlockFlow: RemediationFlow = {\n  'identify': Identify,\n  // NOTE: unlock-account is purposely not included. Handled as action\n  // because it's a rememdiation which requires no input\n  // 'unlock-account': UnlockAccount,\n  'select-authenticator-unlock-account': SelectAuthenticatorUnlockAccount,\n  'select-authenticator-authenticate': SelectAuthenticatorAuthenticate,\n  'challenge-authenticator': ChallengeAuthenticator,\n  'challenge-poll': ChallengePoll,\n  'authenticator-verification-data': AuthenticatorVerificationData,\n  'reenroll-authenticator-warning': ReEnrollAuthenticatorWarning,\n};\n", "import { OktaAuthIdxInterface, FlowIdentifier, FlowSpecification } from '../types';\nimport { AuthenticationFlow } from './AuthenticationFlow';\nimport { PasswordRecoveryFlow } from './PasswordRecoveryFlow';\nimport { RegistrationFlow } from './RegistrationFlow';\nimport { AccountUnlockFlow } from './AccountUnlockFlow';\n\n// eslint-disable-next-line complexity\nexport function getFlowSpecification(\n  oktaAuth: OktaAuthIdxInterface,\n  flow: FlowIdentifier = 'default'\n): FlowSpecification {\n  let remediators, actions, withCredentials = true;\n  switch (flow) {\n    case 'register':\n    case 'signup':\n    case 'enrollProfile':\n      remediators = RegistrationFlow;\n      withCredentials = false;\n      break;\n    case 'recoverPassword':\n    case 'resetPassword':\n      remediators = PasswordRecoveryFlow;\n      actions = [\n        'currentAuthenticator-recover', \n        'currentAuthenticatorEnrollment-recover'\n      ];\n      withCredentials = false;\n      break;\n    case 'unlockAccount':\n      remediators = AccountUnlockFlow;\n      withCredentials = false;\n      actions = [\n        'unlock-account'\n      ];\n      break;\n    case 'authenticate':\n    case 'login':\n    case 'signin':\n      remediators = AuthenticationFlow;\n      break;\n    default:\n      // default case has no flow monitor\n      remediators = AuthenticationFlow;\n      break;\n  }\n  return { flow, remediators, actions, withCredentials };\n}\n", "/*!\n * Copyright (c) 2021, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface, CancelOptions, IdxTransactionMeta } from './types';\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\n\nexport async function cancel (authClient: OktaAuthIdxInterface, options?: CancelOptions) {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  const flowSpec = getFlowSpecification(authClient, meta.flow);\n  return run(authClient, {\n    ...options,\n    ...flowSpec,\n    actions: ['cancel']\n  });\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nexport function urlParamsToObject(hashOrSearch: string) {\n  // Predefine regexs for parsing hash\n  var plus2space = /\\+/g;\n  var paramSplit = /([^&=]+)=?([^&]*)/g;\n  var fragment = hashOrSearch || '';\n\n  // Some hash based routers will automatically add a / character after the hash\n  if (fragment.charAt(0) === '#' && fragment.charAt(1) === '/') {\n    fragment = fragment.substring(2);\n  }\n\n  // Remove the leading # or ?\n  if (fragment.charAt(0) === '#' || fragment.charAt(0) === '?') {\n    fragment = fragment.substring(1);\n  }\n\n\n  var obj = {};\n\n  // Loop until we have no more params\n  var param;\n  while (true) { // eslint-disable-line no-constant-condition\n    param = paramSplit.exec(fragment);\n    if (!param) { break; }\n\n    var key = param[1];\n    var value = param[2];\n\n    // id_token should remain base64url encoded\n    if (key === 'id_token' || key === 'access_token' || key === 'code') {\n      obj[key] = value;\n    } else {\n      obj[key] = decodeURIComponent(value.replace(plus2space, ' '));\n    }\n  }\n  return obj;\n}\n", "\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthIdxInterface } from './types';\n\nimport CustomError from '../errors/CustomError';\nimport { urlParamsToObject  } from '../oidc/util/urlParams';\nimport { EmailVerifyCallbackResponse } from './types/api';\n\nexport class EmailVerifyCallbackError extends CustomError {\n  state: string;\n  otp: string;\n\n  constructor(state: string, otp: string) {\n    super(`Enter the OTP code in the originating client: ${otp}`);\n    this.name = 'EmailVerifyCallbackError';\n    this.state = state;\n    this.otp = otp;\n  }\n}\n\nexport function isEmailVerifyCallbackError(error: Error) {\n  return (error.name === 'EmailVerifyCallbackError');\n}\n\n// Check if state && otp have been passed back in the url\nexport function isEmailVerifyCallback (urlPath: string): boolean {\n  return /(otp=)/i.test(urlPath) && /(state=)/i.test(urlPath);\n}\n\n// Parse state and otp from a urlPath (should be either a search or fragment from the URL)\nexport function parseEmailVerifyCallback(urlPath: string): EmailVerifyCallbackResponse {\n  return urlParamsToObject(urlPath) as EmailVerifyCallbackResponse;\n}\n\nexport async function handleEmailVerifyCallback(authClient: OktaAuthIdxInterface, search: string) {\n  if (isEmailVerifyCallback(search)) {\n    const { state, otp } = parseEmailVerifyCallback(search);\n    if (authClient.idx.canProceed({ state })) {\n      // same browser / device\n      return await authClient.idx.proceed({ state, otp });\n    } else {\n      // different browser or device\n      throw new EmailVerifyCallbackError(state, otp);\n    }\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { \n  OktaAuthIdxInterface,\n  IdxTransaction,\n  ProceedOptions,\n} from './types';\nimport { run } from './run';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { AuthSdkError } from '../errors';\n\nexport function canProceed(authClient: OktaAuthIdxInterface, options: ProceedOptions = {}): boolean {\n  const meta = getSavedTransactionMeta(authClient, options);\n  return !!(meta || options.stateHandle);\n}\n\nexport async function proceed(\n  authClient: OktaAuthIdxInterface,\n  options: ProceedOptions = {}\n): Promise<IdxTransaction> {\n\n  if (!canProceed(authClient, options)) {\n    throw new AuthSdkError('Unable to proceed: saved transaction could not be loaded');\n  }\n\n  let { flow, state } = options;\n  if (!flow) {\n    const meta = getSavedTransactionMeta(authClient, { state });\n    flow = meta?.flow;\n  }\n\n  return run(authClient, { \n    ...options, \n    flow\n  });\n}\n", "/*!\n * Copyright (c) 2021-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { proceed } from './proceed';\n\nimport { \n  IdxPollOptions,\n  IdxTransaction,\n  OktaAuthIdxInterface,\n} from './types';\nimport { getSavedTransactionMeta } from './transactionMeta';\nimport { warn } from '../util';\n\nexport async function poll(authClient: OktaAuthIdxInterface, options: IdxPollOptions = {}): Promise<IdxTransaction> {\n  let transaction = await proceed(authClient, {\n    startPolling: true\n  });\n\n  const meta = getSavedTransactionMeta(authClient);\n  let availablePollingRemeditaions = meta?.remediations?.find(remediation => remediation.includes('poll'));\n  if (!availablePollingRemeditaions?.length) {\n    warn('No polling remediations available at the current IDX flow stage');\n  }\n\n  if (Number.isInteger(options.refresh)) {\n    return new Promise(function (resolve, reject) {\n      setTimeout(async function () {\n        try {\n          const refresh = transaction.nextStep?.poll?.refresh;\n          if (refresh) {\n            resolve(poll(authClient, {\n              refresh\n            }));\n          } else {\n            resolve(transaction);\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }, options.refresh);\n    });\n  }\n\n  return transaction;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { OktaAuthIdxInterface, IdxTransaction, StartOptions } from './types';\n\nexport async function startTransaction(\n  authClient: OktaAuthIdxInterface, \n  options: StartOptions = {}\n): Promise<IdxTransaction> {\n  // Clear IDX response cache and saved transaction meta (if any)\n  authClient.transactionManager.clear();\n\n  return run(authClient, {\n    exchangeCodeForTokens: false,\n    ...options\n  });\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  RegistrationOptions, \n  IdxTransaction, \n  OktaAuthIdxInterface, \n  IdxFeature,\n} from './types';\n\nexport async function register(\n  authClient: OktaAuthIdxInterface, options: RegistrationOptions = {}\n): Promise<IdxTransaction> {\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, {\n      ...options,\n      flow: 'register',\n      autoRemediate: false\n    });\n    if (!options.activationToken && enabledFeatures && !enabledFeatures.includes(IdxFeature.REGISTRATION)) {\n      throw new AuthSdkError('Registration is not supported based on your current org configuration.');\n    }\n  }\n\n  return run(authClient, {\n    ...options,\n    flow: 'register'\n  });\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { getFlowSpecification } from './flow';\nimport { \n  OktaAuthIdxInterface, \n  PasswordRecoveryOptions, \n  IdxTransaction,\n} from './types';\n\nexport async function recoverPassword(\n  authClient: OktaAuthIdxInterface, options: PasswordRecoveryOptions = {}\n): Promise<IdxTransaction> {\n  const flowSpec = getFlowSpecification(authClient, 'recoverPassword');\n  return run(\n    authClient, \n    { \n      ...options,\n      ...flowSpec,\n    }\n  );\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { IdxTransactionMeta } from './types/meta';\nimport { OktaAuthIdxInterface } from './types';\n\nexport async function handleInteractionCodeRedirect(\n  authClient: OktaAuthIdxInterface, \n  url: string\n): Promise<void> {\n  const meta = authClient.transactionManager.load() as IdxTransactionMeta;\n  if (!meta) {\n    throw new AuthSdkError('No transaction data was found in storage');\n  }\n\n  const { \n    codeVerifier,\n    state: savedState \n  } = meta;\n  const { \n    searchParams\n  // URL API has been added to the polyfill\n  // eslint-disable-next-line compat/compat\n  } = new URL(url); \n  const state = searchParams.get('state');\n  const interactionCode = searchParams.get('interaction_code');\n\n  // Error handling\n  const error = searchParams.get('error');\n  if (error) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    throw new OAuthError(error, searchParams.get('error_description')!);\n  }\n  if (state !== savedState) {\n    throw new AuthSdkError('State in redirect uri does not match with transaction state');\n  }\n  if (!interactionCode) {\n    throw new AuthSdkError('Unable to parse interaction_code from the url');\n  }\n  \n  // Save tokens to storage\n  const { tokens } = await authClient.token.exchangeCodeForTokens({ interactionCode, codeVerifier });\n  authClient.tokenManager.setTokens(tokens);\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { run } from './run';\nimport { hasSavedInteractionHandle } from './transactionMeta';\nimport { startTransaction } from './startTransaction';\nimport { AuthSdkError } from '../errors';\nimport { \n  OktaAuthIdxInterface, \n  AccountUnlockOptions, \n  IdxTransaction,\n  IdxFeature,\n} from './types';\n\nexport async function unlockAccount(\n  authClient: OktaAuthIdxInterface, options: AccountUnlockOptions = {}\n): Promise<IdxTransaction> {\n  options.flow = 'unlockAccount';\n\n  // Only check at the beginning of the transaction\n  if (!hasSavedInteractionHandle(authClient)) {\n    const { enabledFeatures } = await startTransaction(authClient, { ...options, autoRemediate: false });\n    if (enabledFeatures && !enabledFeatures.includes(IdxFeature.ACCOUNT_UNLOCK)) {\n      throw new AuthSdkError(\n        'Self Service Account Unlock is not supported based on your current org configuration.'\n      );\n    }\n  }\n\n  return run(authClient, { ...options });\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { OktaAuthOAuthInterface } from '../types';\nimport { OAuthError, AuthApiError, isOAuthError } from '../../errors';\n\nexport function isInteractionRequiredError(error: Error) {\n  if (error.name !== 'OAuthError') {\n    return false;\n  }\n  const oauthError = error as OAuthError;\n  return (oauthError.errorCode === 'interaction_required');\n}\n\nexport function isAuthorizationCodeError(sdk: OktaAuthOAuthInterface, error: Error) {\n  if (error.name !== 'AuthApiError') {\n    return false;\n  }\n  const authApiError = error as AuthApiError;\n  // xhr property doesn't seem to match XMLHttpRequest type\n  const errorResponse = authApiError.xhr as unknown as Record<string, unknown>;\n  const responseJSON = errorResponse?.responseJSON as Record<string, unknown>;\n  return sdk.options.pkce && (responseJSON?.error as string === 'invalid_grant');\n}\n\nexport function isRefreshTokenInvalidError(error: unknown): boolean {\n  // error: {\"error\":\"invalid_grant\",\"error_description\":\"The refresh token is invalid or expired.\"}\n  return isOAuthError(error) &&\n    error.errorCode === 'invalid_grant' &&\n    error.errorSummary === 'The refresh token is invalid or expired.';\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\n/* eslint-disable complexity, max-statements */\nimport { OktaAuthOAuthOptions, OktaAuthOAuthInterface, OAuthResponseType } from '../types';\n\nexport function hasTokensInHash(hash: string): boolean {\n  return /((id|access)_token=)/i.test(hash);\n}\n\n// authorization_code\nexport function hasAuthorizationCode(hashOrSearch: string): boolean {\n  return /(code=)/i.test(hashOrSearch);\n}\n\n// interaction_code\nexport function hasInteractionCode(hashOrSearch: string): boolean {\n  return /(interaction_code=)/i.test(hashOrSearch);\n}\n\nexport function hasErrorInUrl(hashOrSearch: string): boolean {\n  return /(error=)/i.test(hashOrSearch) || /(error_description)/i.test(hashOrSearch);\n}\n\nexport function isRedirectUri(uri: string, sdk: OktaAuthOAuthInterface): boolean {\n  var authParams = sdk.options;\n  if (!uri || !authParams.redirectUri) {\n    return false;\n  }\n  return uri.indexOf(authParams.redirectUri) === 0;\n}\n\nexport function isCodeFlow(options: OktaAuthOAuthOptions) {\n  return options.pkce || options.responseType === 'code' || options.responseMode === 'query';\n}\n\nexport function hasResponseType(responseType: OAuthResponseType, options: OktaAuthOAuthOptions): boolean {\n  let hasResponseType = false;\n  if (Array.isArray(options.responseType) && options.responseType.length) {\n    hasResponseType = options.responseType.indexOf(responseType) >= 0;\n  } else {\n    hasResponseType = options.responseType === responseType;\n  }\n  return hasResponseType;\n}\n\nexport function getHashOrSearch(options: OktaAuthOAuthOptions) {\n  var codeFlow = isCodeFlow(options);\n  var useQuery = codeFlow && options.responseMode !== 'fragment';\n  return useQuery ? window.location.search : window.location.hash;\n}\n\n/**\n * Check if tokens or a code have been passed back into the url, which happens in\n * the OIDC (including social auth IDP) redirect flow.\n */\nexport function isLoginRedirect (sdk: OktaAuthOAuthInterface) {\n  // First check, is this a redirect URI?\n  if (!isRedirectUri(window.location.href, sdk)){\n    return false;\n  }\n\n  // The location contains either a code, token, or an error + error_description\n  var codeFlow = isCodeFlow(sdk.options);\n  var hashOrSearch = getHashOrSearch(sdk.options);\n\n  if (hasErrorInUrl(hashOrSearch)) {\n    return true;\n  }\n\n  if (codeFlow) {\n    var hasCode =  hasAuthorizationCode(hashOrSearch) || hasInteractionCode(hashOrSearch);\n    return hasCode;\n  }\n\n  // implicit flow, will always be hash fragment\n  return hasTokensInHash(window.location.hash);\n}\n\n/**\n * Check if error=interaction_required has been passed back in the url, which happens in\n * the social auth IDP redirect flow.\n */\nexport function isInteractionRequired (sdk: OktaAuthOAuthInterface, hashOrSearch?: string) {\n  if (!hashOrSearch) { // web only\n    // First check, is this a redirect URI?\n    if (!isLoginRedirect(sdk)){\n      return false;\n    }\n  \n    hashOrSearch = getHashOrSearch(sdk.options);\n  }\n  return /(error=interaction_required)/i.test(hashOrSearch);\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport { Remediator } from './Base/Remediator.js';\nexport { EnrollAuthenticator } from './EnrollAuthenticator.js';\nexport { EnrollPoll } from './EnrollPoll.js';\nexport { SelectEnrollmentChannel } from './SelectEnrollmentChannel.js';\nexport { EnrollmentChannelData } from './EnrollmentChannelData.js';\nexport { ChallengeAuthenticator } from './ChallengeAuthenticator.js';\nexport { ChallengePoll } from './ChallengePoll.js';\nexport { ResetAuthenticator } from './ResetAuthenticator.js';\nexport { EnrollProfile } from './EnrollProfile.js';\nexport { Identify } from './Identify.js';\nexport { ReEnrollAuthenticator } from './ReEnrollAuthenticator.js';\nexport { ReEnrollAuthenticatorWarning } from './ReEnrollAuthenticatorWarning.js';\nexport { RedirectIdp } from './RedirectIdp.js';\nexport { SelectAuthenticatorAuthenticate } from './SelectAuthenticatorAuthenticate.js';\nexport { SelectAuthenticatorEnroll } from './SelectAuthenticatorEnroll.js';\nexport { SelectAuthenticatorUnlockAccount } from './SelectAuthenticatorUnlockAccount.js';\nexport { SelectEnrollProfile } from './SelectEnrollProfile.js';\nexport { AuthenticatorVerificationData } from './AuthenticatorVerificationData.js';\nexport { AuthenticatorEnrollmentData } from './AuthenticatorEnrollmentData.js';\nexport { Skip } from './Skip.js';\nexport { GenericRemediator } from './GenericRemediator/GenericRemediator.js';\n//# sourceMappingURL=index.js.map\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { isInteractionRequired, isInteractionRequiredError } from '../../oidc';\nimport { authenticate } from '../authenticate';\nimport { cancel } from '../cancel';\nimport {\n  handleEmailVerifyCallback,\n  isEmailVerifyCallback,\n  isEmailVerifyCallbackError,\n  parseEmailVerifyCallback\n} from '../emailVerify';\nimport { handleInteractionCodeRedirect } from '../handleInteractionCodeRedirect';\nimport { makeIdxState } from '../idxState';\nimport { interact } from '../interact';\nimport { introspect } from '../introspect';\nimport { poll } from '../poll';\nimport { canProceed, proceed } from '../proceed';\nimport { recoverPassword } from '../recoverPassword';\nimport { register } from '../register';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { FlowIdentifier, IdxAPI, OktaAuthIdxInterface } from '../types';\nimport { unlockAccount } from '../unlockAccount';\nimport * as remediators from '../remediators';\nimport { getFlowSpecification } from '../flow/FlowSpecification';\nimport { setRemediatorsCtx } from '../util';\n\n// Factory\nexport function createIdxAPI(sdk: OktaAuthIdxInterface): IdxAPI {\n  setRemediatorsCtx({\n    remediators,\n    getFlowSpecification,\n  });\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    interact: interact.bind(null, sdk),\n    introspect: introspect.bind(null, sdk),\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n    \n    authenticate: authenticate.bind(null, sdk),\n    register: register.bind(null, sdk),\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    poll: poll.bind(null, sdk),\n    proceed: proceed.bind(null, sdk),\n    cancel: cancel.bind(null, sdk),\n    recoverPassword: recoverPassword.bind(null, sdk),\n\n    // oauth redirect callback\n    handleInteractionCodeRedirect: handleInteractionCodeRedirect.bind(null, sdk),\n\n    // interaction required callback\n    isInteractionRequired: isInteractionRequired.bind(null, sdk),\n    isInteractionRequiredError,\n\n    // email verify callback\n    handleEmailVerifyCallback: handleEmailVerifyCallback.bind(null, sdk),\n    isEmailVerifyCallback,\n    parseEmailVerifyCallback,\n    isEmailVerifyCallbackError,\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n    setFlow: (flow: FlowIdentifier) => {\n      sdk.options.flow = flow;\n    },\n    getFlow: (): FlowIdentifier | undefined => {\n      return sdk.options.flow;\n    },\n    canProceed: canProceed.bind(null, sdk),\n    unlockAccount: unlockAccount.bind(null, sdk),\n  };\n  return idx;\n}\n\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n/* global atob, btoa, crypto */\nconst a = function(str) { return atob(str); };\nconst b = function (str) { return btoa(str); };\nconst c = typeof crypto === 'undefined' ? null : crypto;\n\nexport { a as atob, b as btoa, c as webcrypto };\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\n/* global document, window, TextEncoder, navigator */\n\nimport { webcrypto } from './crypto';\n\nconst isWindowsPhone = /windows phone|iemobile|wpdesktop/i;\t\n\nexport function isBrowser() {\n  return typeof document !== 'undefined' && typeof window !== 'undefined';\n}\n\nexport function isIE11OrLess() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  return !!documentMode && documentMode <= 11;\n}\n\nexport function getUserAgent() {\n  return navigator.userAgent;\n}\n\nexport function isFingerprintSupported() {\n  const agent = getUserAgent();\n  return agent && !isWindowsPhone.test(agent);\t\n}\n\nexport function isPopupPostMessageSupported() {\n  if (!isBrowser()) {\n    return false;\n  }\n  const documentMode = (document as any).documentMode;\n  var isIE8or9 = documentMode && documentMode < 10;\n  if (typeof window.postMessage !== 'undefined' && !isIE8or9) {\n    return true;\n  }\n  return false;\n}\n\nexport function isTokenVerifySupported() {\n  return typeof webcrypto !== 'undefined'\n    && webcrypto !== null\n    && typeof webcrypto.subtle !== 'undefined'\n    && typeof Uint8Array !== 'undefined';\n}\n\nexport function hasTextEncoder() {\n  return typeof TextEncoder !== 'undefined';\n}\n\nexport function isPKCESupported() {\n  return isTokenVerifySupported() && hasTextEncoder();\n}\n\nexport function isHTTPS() {\n  if (!isBrowser()) {\n    return false;\n  }\n  return window.location.protocol === 'https:';\n}\n\nexport function isLocalhost() {\n  // eslint-disable-next-line compat/compat\n  return isBrowser() && window.location.hostname === 'localhost';\n}\n\n", "\n\n// Do not use this type in code, so it won't be emitted in the declaration output\nimport { removeNils } from '../util';\n\nimport * as features from '../features';\nimport * as constants from '../constants';\n\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport Emitter from 'tiny-emitter';\n\nimport {\n  EventEmitter,\n  OktaAuthConstructor,\n  OktaAuthBaseInterface,\n  OktaAuthBaseOptions,\n  OktaAuthOptionsConstructor, \n  FeaturesAPI,\n} from './types';\n\nexport function createOktaAuthBase\n<\n  O extends OktaAuthBaseOptions = OktaAuthBaseOptions,\n>\n(\n  OptionsConstructor: OktaAuthOptionsConstructor<O>\n): OktaAuthConstructor<OktaAuthBaseInterface<O>>\n{\n  class OktaAuthBase implements OktaAuthBaseInterface<O>\n  {\n    options: O;\n    emitter: EventEmitter;\n    features: FeaturesAPI;\n    static features: FeaturesAPI = features;\n    static constants = constants;\n    \n    constructor(...args: any[]) {\n      const options = new OptionsConstructor(args.length ? args[0] || {} : {});\n      this.options = removeNils(options) as O; // clear out undefined values\n      this.emitter = new Emitter();\n      this.features = features;\n    }\n  }\n\n  // Hoist feature detection functions to prototype & static type\n  OktaAuthBase.features = OktaAuthBase.prototype.features = features;\n\n  // Also hoist constants for CommonJS users\n  Object.assign(OktaAuthBase, {\n    constants\n  });\n\n  return OktaAuthBase;\n}\n", "import { OktaAuthBaseInterface, OktaAuthConstructor } from '../base/types';\nimport {\n  OktaAuthStorageInterface,\n  OktaAuthStorageOptions,\n  StorageManagerConstructor,\n  StorageManagerInterface,\n} from './types';\n\nexport function mixinStorage\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthStorageOptions = OktaAuthStorageOptions,\n  TBase extends OktaAuthConstructor<OktaAuthBaseInterface<O>> = OktaAuthConstructor<OktaAuthBaseInterface<O>>\n>\n(\n  Base: TBase, StorageManager: StorageManagerConstructor<S>\n): TBase & OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n{\n  return class OktaAuthStorage extends Base implements OktaAuthStorageInterface<S, O>\n  {\n    storageManager: S;\n    constructor(...args: any[]) {\n      super(...args);\n      const { storageManager, cookies, storageUtil } = this.options;\n      this.storageManager = new StorageManager(storageManager!, cookies!, storageUtil!);\n    }\n    clearStorage(): void {\n      // override in subclass\n    }\n  };\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* global SDK_VERSION */\n\nimport { isBrowser } from '../features';\nexport class OktaUserAgent {\n  environments: string[];\n\n  constructor() {\n    // add base sdk env\n    this.environments = [`okta-auth-js/${SDK_VERSION}`];\n    this.maybeAddNodeEnvironment();\n  }\n\n  addEnvironment(env: string) {\n    this.environments.push(env);\n  }\n\n  getHttpHeader() {\n    return { 'X-Okta-User-Agent-Extended': this.environments.join(' ') };\n  }\n\n  getVersion() {\n    return SDK_VERSION;\n  }\n\n  maybeAddNodeEnvironment() {\n    if (isBrowser() || !process || !process.versions) {\n      return;\n    }\n    const { node: version } = process.versions;\n    this.environments.push(`nodejs/${version}`);\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthHttpInterface } from './types';\n\nexport function setRequestHeader(authClient: OktaAuthHttpInterface, headerName, headerValue) {\n  authClient.options.headers = authClient.options.headers || {};\n  authClient.options.headers[headerName] = headerValue;\n}", "import { OktaAuthStorageInterface, StorageManagerInterface } from '../storage/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  HttpAPI,\n  OktaAuthHttpInterface,\n  OktaAuthHttpOptions,\n} from './types';\nimport { OktaUserAgent } from './OktaUserAgent';\nimport { setRequestHeader } from './headers';\nimport { toQueryString } from '../util';\nimport { get } from './request';\n\nexport function mixinHttp\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n{\n  return class OktaAuthHttp extends Base implements OktaAuthHttpInterface<S, O>\n  {\n    _oktaUserAgent: OktaUserAgent;\n    http: HttpAPI;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this._oktaUserAgent = new OktaUserAgent();\n\n      // HTTP\n      this.http = {\n        setRequestHeader: setRequestHeader.bind(null, this)\n      };\n    }\n\n    setHeaders(headers) {\n      this.options.headers = Object.assign({}, this.options.headers, headers);\n    }\n  \n    getIssuerOrigin(): string {\n      // Infer the URL from the issuer URL, omitting the /oauth2/{authServerId}\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return this.options.issuer!.split('/oauth2/')[0];\n    }\n  \n    webfinger(opts): Promise<object> {\n      var url = '/.well-known/webfinger' + toQueryString(opts);\n      var options = {\n        headers: {\n          'Accept': 'application/jrd+json'\n        }\n      };\n      return get(this, url, options);\n    }\n  };\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport { base64ToBase64Url, base64UrlDecode, base64UrlToBase64, base64UrlToBuffer, base64UrlToString, bufferToBase64Url, stringToBase64Url, stringToBuffer } from './base64.js';\nexport { getOidcHash } from './oidcHash.js';\nexport { verifyToken } from './verifyToken.js';\nexport { atob, btoa, webcrypto } from './browser.js';\n//# sourceMappingURL=index.js.map\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { AuthSdkError } from '../errors';\nimport { atob, btoa } from './webcrypto';\n\n// converts a string to base64 (url/filename safe variant)\nexport function stringToBase64Url(str) {\n  var b64 = btoa(str);\n  return base64ToBase64Url(b64);\n}\n\n// converts a standard base64-encoded string to a \"url/filename safe\" variant\nexport function base64ToBase64Url(b64) {\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=+$/, '');\n}\n\n// converts a \"url/filename safe\" base64 string to a \"standard\" base64 string\nexport function base64UrlToBase64(b64u) {\n  return b64u.replace(/-/g, '+').replace(/_/g, '/');\n}\n\nexport function base64UrlToString(b64u) {\n  var b64 = base64UrlToBase64(b64u);\n  switch (b64.length % 4) {\n    case 0:\n      break;\n    case 2:\n      b64 += '==';\n      break;\n    case 3:\n      b64 += '=';\n      break;\n    default:\n      throw new AuthSdkError('Not a valid Base64Url');\n  }\n  var utf8 = atob(b64);\n  try {\n    return decodeURIComponent(escape(utf8));\n  } catch (e) {\n    return utf8;\n  }\n}\n\nexport function stringToBuffer(str) {\n  var buffer = new Uint8Array(str.length);\n  for (var i = 0; i < str.length; i++) {\n    buffer[i] = str.charCodeAt(i);\n  }\n  return buffer;\n}\n\nexport function base64UrlDecode(str) {\n  return atob(base64UrlToBase64(str));\n}\n\n// Converts base64 string to binary data view\nexport function base64UrlToBuffer(b64u) {\n  return Uint8Array.from(base64UrlDecode(b64u), (c: string) => c.charCodeAt(0));\n}\n\n// Converts an ArrayBuffer object that contains binary data to base64 encoded string\nexport function bufferToBase64Url(bin) {\n  return btoa(new Uint8Array(bin).reduce((s, byte) => s + String.fromCharCode(byte), ''));\n}\n\n\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* global TextEncoder */\nimport { stringToBase64Url } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function getOidcHash(str) {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var intBuffer = new Uint8Array(arrayBuffer);\n    var firstHalf = intBuffer.slice(0, 16);\n    var hash = String.fromCharCode.apply(null, firstHalf as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { clone } from '../util';\nimport { stringToBuffer, base64UrlDecode } from './base64';\nimport { webcrypto } from './webcrypto';\n\nexport function verifyToken(idToken, key) {\n  key = clone(key);\n\n  var format = 'jwk';\n  var algo = {\n    name: 'RSASSA-PKCS1-v1_5',\n    hash: { name: 'SHA-256' }\n  };\n  var extractable = true;\n  var usages = ['verify'];\n\n  // https://connect.microsoft.com/IE/feedback/details/2242108/webcryptoapi-importing-jwk-with-use-field-fails\n  // This is a metadata tag that specifies the intent of how the key should be used.\n  // It's not necessary to properly verify the jwt's signature.\n  delete key.use;\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  return webcrypto.subtle.importKey(\n    format,\n    key,\n    algo,\n    extractable,\n    usages\n  )\n  .then(function(cryptoKey) {\n    var jwt = idToken.split('.');\n    var payload = stringToBuffer(jwt[0] + '.' + jwt[1]);\n    var b64Signature = base64UrlDecode(jwt[2]);\n    var signature = stringToBuffer(b64Signature);\n\n    return webcrypto.subtle.verify(\n      algo,\n      cryptoKey,\n      signature,\n      payload\n    );\n  });\n}\n\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n// Implements a queue for synchronous or asynchronous methods\n// Methods will be wrapped in a promise and execute sequentially\n// This can be used to prevent concurrent calls to a single method or a set of methods\n\nimport { isPromise } from './types';\nimport { warn } from './console';\n\ninterface QueueItem {\n  method: () => void;\n  thisObject: object;\n  args: any[];\n  resolve: (value?: unknown) => void;\n  reject: (reason?: unknown) => void;\n}\n\ninterface PromiseQueueOptions {\n  quiet?: boolean; // if false, concurrrency warnings will not be logged\n}\nexport class PromiseQueue {\n  queue: QueueItem[];\n  running: boolean;\n  options: PromiseQueueOptions;\n\n  constructor(options: PromiseQueueOptions = { quiet: false }) {\n    this.queue = [];\n    this.running = false;\n    this.options = options;\n  }\n\n  // Returns a promise\n  // If the method is synchronous, it will resolve when the method completes\n  // If the method returns a promise, it will resolve (or reject) with the value from the method's promise\n  push(method: (...args: any) => any, thisObject: any, ...args: any[]) {\n    return new Promise((resolve, reject) => {\n      if (this.queue.length > 0) {\n        // There is at least one other pending call.\n        // The PromiseQueue will prevent these methods from running concurrently.\n        if (this.options.quiet !== false) {\n          warn(\n            'Async method is being called but another async method is already running. ' +\n            'The new method will be delayed until the previous method completes.'\n          );\n        }\n      }\n      this.queue.push({\n        method,\n        thisObject,\n        args,\n        resolve,\n        reject\n      });\n      this.run();\n    });\n  }\n\n  run() {\n    if (this.running) {\n      return;\n    }\n    if (this.queue.length === 0) {\n      return;\n    }\n    this.running = true;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    var queueItem = this.queue.shift()!;\n    var res = queueItem.method.apply(queueItem.thisObject, queueItem.args as never) as unknown;\n    if (isPromise(res)) {\n      (res as Promise<unknown>).then(queueItem.resolve, queueItem.reject).finally(() => {\n        this.running = false;\n        this.run();\n      });\n    } else {\n      queueItem.resolve(res);\n      this.running = false;\n      this.run();\n    }\n  }\n}\n", "/*!\n * Copyright (c) 2019-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n /* eslint-disable complexity, max-statements */\nimport { stringToBase64Url, webcrypto } from '../../crypto';\nimport { MIN_VERIFIER_LENGTH, MAX_VERIFIER_LENGTH, DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\n\nfunction dec2hex (dec) {\n  return ('0' + dec.toString(16)).substr(-2);\n}\n\nfunction getRandomString(length) {\n  var a = new Uint8Array(Math.ceil(length / 2));\n  webcrypto.getRandomValues(a);\n  var str = Array.from(a, dec2hex).join('');\n  return str.slice(0, length);\n}\n\nfunction generateVerifier(prefix?: string): string {\n  var verifier = prefix || '';\n  if (verifier.length < MIN_VERIFIER_LENGTH) {\n    verifier = verifier + getRandomString(MIN_VERIFIER_LENGTH - verifier.length);\n  }\n  return encodeURIComponent(verifier).slice(0, MAX_VERIFIER_LENGTH);\n}\n\nfunction computeChallenge(str: string): PromiseLike<any> {  \n  var buffer = new TextEncoder().encode(str);\n  return webcrypto.subtle.digest('SHA-256', buffer).then(function(arrayBuffer) {\n    var hash = String.fromCharCode.apply(null, new Uint8Array(arrayBuffer) as unknown as number[]);\n    var b64u = stringToBase64Url(hash); // url-safe base64 variant\n    return b64u;\n  });\n}\n\nexport default {\n  DEFAULT_CODE_CHALLENGE_METHOD,\n  generateVerifier,\n  computeChallenge\n};\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { JWTObject } from './types';\nimport { base64UrlToString } from '../crypto';\n\nexport function decodeToken(token: string): JWTObject {\n  var jwt = token.split('.');\n  var decodedToken: JWTObject;\n\n  try {\n    decodedToken = {\n      header: JSON.parse(base64UrlToString(jwt[0])),\n      payload: JSON.parse(base64UrlToString(jwt[1])),\n      signature: jwt[2]\n    };\n  } catch (e) {\n    throw new AuthSdkError('Malformed token');\n  }\n\n  return decodedToken;\n}\n", "\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateNonce, generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultTokenParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    pkce,\n    clientId,\n    redirectUri,\n    responseType,\n    responseMode,\n    scopes,\n    acrValues,\n    maxAge,\n    state,\n    ignoreSignature\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    pkce,\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseType: responseType || ['token', 'id_token'],\n    responseMode,\n    state: state || generateState(),\n    nonce: generateNonce(),\n    scopes: scopes || ['openid', 'email'],\n    acrValues,\n    maxAge,\n    ignoreSignature\n  });\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../../errors';\nimport { CustomUrls, OAuthParams, OAuthResponse, RefreshToken, TokenParams } from '../types';\nimport { removeNils, toQueryString } from '../../util';\nimport { httpRequest, OktaAuthHttpInterface } from '../../http';\n\nfunction validateOptions(options: TokenParams) {\n  // Quick validation\n  if (!options.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (!options.redirectUri) {\n    throw new AuthSdkError('The redirectUri passed to /authorize must also be passed to /token');\n  }\n\n  if (!options.authorizationCode && !options.interactionCode) {\n    throw new AuthSdkError('An authorization code (returned from /authorize) must be passed to /token');\n  }\n\n  if (!options.codeVerifier) {\n    throw new AuthSdkError('The \"codeVerifier\" (generated and saved by your app) must be passed to /token');\n  }\n}\n\nfunction getPostData(sdk, options: TokenParams): string {\n  // Convert Token params to OAuth params, sent to the /token endpoint\n  var params: OAuthParams = removeNils({\n    'client_id': options.clientId,\n    'redirect_uri': options.redirectUri,\n    'grant_type': options.interactionCode ? 'interaction_code' : 'authorization_code',\n    'code_verifier': options.codeVerifier\n  });\n\n  if (options.interactionCode) {\n    params['interaction_code'] = options.interactionCode;\n  } else if (options.authorizationCode) {\n    params.code = options.authorizationCode;\n  }\n\n  const { clientSecret } = sdk.options;\n  if (clientSecret) {\n    params['client_secret'] = clientSecret;\n  }\n\n  // Encode as URL string\n  return toQueryString(params).slice(1);\n}\n\n// exchange authorization code for an access token\nexport function postToTokenEndpoint(sdk, options: TokenParams, urls: CustomUrls): Promise<OAuthResponse> {\n  validateOptions(options);\n  var data = getPostData(sdk, options);\n\n  const headers = {\n    'Content-Type': 'application/x-www-form-urlencoded'\n  };\n\n  return httpRequest(sdk, {\n    url: urls.tokenUrl,\n    method: 'POST',\n    args: data,\n    headers\n  });\n}\n\nexport function postRefreshToken(\n  sdk: OktaAuthHttpInterface,\n  options: TokenParams,\n  refreshToken: RefreshToken\n): Promise<OAuthResponse> {\n  return httpRequest(sdk, {\n    url: refreshToken.tokenUrl,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n    },\n\n    args: Object.entries({\n      client_id: options.clientId, // eslint-disable-line camelcase\n      grant_type: 'refresh_token', // eslint-disable-line camelcase\n      scope: refreshToken.scopes.join(' '),\n      refresh_token: refreshToken.refreshToken, // eslint-disable-line camelcase\n    }).map(function ([name, value]) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return name + '=' + encodeURIComponent(value!);\n    }).join('&'),\n  });\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { get } from '../../http';\nimport { find } from '../../util';\nimport { OktaAuthOAuthInterface, WellKnownResponse } from '../types';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nexport function getWellKnown(sdk: OktaAuthOAuthInterface, issuer?: string): Promise<WellKnownResponse> {\n  var authServerUri = (issuer || sdk.options.issuer);\n  return get(sdk, authServerUri + '/.well-known/openid-configuration', {\n    cacheResponse: true\n  });\n}\n\nexport function getKey(sdk: OktaAuthOAuthInterface, issuer: string, kid: string): Promise<string> {\n  var httpCache = sdk.storageManager.getHttpCache(sdk.options.cookies);\n\n  return getWellKnown(sdk, issuer)\n  .then(function(wellKnown) {\n    var jwksUri = wellKnown['jwks_uri'];\n\n    // Check our kid against the cached version (if it exists and isn't expired)\n    var cacheContents = httpCache.getStorage();\n    var cachedResponse = cacheContents[jwksUri];\n    if (cachedResponse && Date.now()/1000 < cachedResponse.expiresAt) {\n      var cachedKey = find(cachedResponse.response.keys, {\n        kid: kid\n      });\n\n      if (cachedKey) {\n        return cachedKey;\n      }\n    }\n\n    // Remove cache for the key\n    httpCache.clearStorage(jwksUri);\n\n    // Pull the latest keys if the key wasn't in the cache\n    return get(sdk, jwksUri, {\n      cacheResponse: true\n    })\n    .then(function(res) {\n      var key = find(res.keys, {\n        kid: kid\n      });\n\n      if (key) {\n        return key;\n      }\n\n      throw new AuthSdkError('The key id, ' + kid + ', was not found in the server\\'s keys');\n    });\n  });\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* eslint-disable complexity, max-statements */\n\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { OktaAuthOAuthInterface, TokenVerifyParams, UserClaims } from '../../oidc/types';\n\nexport function validateClaims(sdk: OktaAuthOAuthInterface, claims: UserClaims, validationParams: TokenVerifyParams) {\n  const aud = validationParams.clientId;\n  const iss = validationParams.issuer;\n  const nonce = validationParams.nonce;\n  const acr = validationParams.acrValues;\n\n  if (!claims || !iss || !aud) {\n    throw new AuthSdkError('The jwt, iss, and aud arguments are all required');\n  }\n\n  if (nonce && claims.nonce !== nonce) {\n    throw new AuthSdkError('OAuth flow response nonce doesn\\'t match request nonce');\n  }\n\n  const now = Math.floor(Date.now()/1000);\n\n  if (claims.iss !== iss) {\n    throw new AuthSdkError('The issuer [' + claims.iss + '] ' +\n      'does not match [' + iss + ']');\n  }\n\n  if ((Array.isArray(claims.aud) && claims.aud.indexOf(aud) < 0) ||\n    (!Array.isArray(claims.aud) && claims.aud !== aud))\n  {\n    throw new AuthSdkError('The audience [' + claims.aud + '] ' +\n      'does not match [' + aud + ']');\n  }\n\n  if (acr && claims.acr !== acr) {\n    throw new AuthSdkError('The acr [' + claims.acr + '] ' +\n      'does not match acr_values [' + acr + ']');\n  }\n\n  if (claims.iat! > claims.exp!) {\n    throw new AuthSdkError('The JWT expired before it was issued');\n  }\n\n  if (!sdk.options.ignoreLifetime) {\n    if ((now - sdk.options.maxClockSkew!) > claims.exp!) {\n      throw new AuthSdkError('The JWT expired and is no longer valid');\n    }\n\n    if (claims.iat! > (now + sdk.options.maxClockSkew!)) {\n      throw new AuthSdkError('The JWT was issued in the future');\n    }\n  }\n}\n", "/* eslint-disable max-len */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown, getKey } from './endpoints/well-known';\nimport { validateClaims } from './util';\nimport { AuthSdkError } from '../errors';\nimport { IDToken, OktaAuthOAuthInterface, TokenVerifyParams } from '../oidc/types';\nimport { decodeToken } from './decodeToken';\nimport * as sdkCrypto from '../crypto';\n\n// Verify the id token\nexport async function verifyToken(sdk: OktaAuthOAuthInterface, token: IDToken, validationParams: TokenVerifyParams): Promise<IDToken> {\n  if (!token || !token.idToken) {\n    throw new AuthSdkError('Only idTokens may be verified');\n  }\n\n  // Decode the Jwt object (may throw)\n  const jwt = decodeToken(token.idToken);\n\n  // The configured issuer may point to a frontend proxy.\n  // Get the \"real\" issuer from .well-known/openid-configuration\n  const configuredIssuer = validationParams?.issuer || sdk.options.issuer;\n  const { issuer } = await getWellKnown(sdk, configuredIssuer);\n\n  const validationOptions: TokenVerifyParams = Object.assign({\n    // base options, can be overridden by params\n    clientId: sdk.options.clientId,\n    ignoreSignature: sdk.options.ignoreSignature\n  }, validationParams, {\n    // final options, cannot be overridden\n    issuer\n  });\n\n  // Standard claim validation (may throw)\n  validateClaims(sdk, jwt.payload, validationOptions);\n\n  // If the browser doesn't support native crypto or we choose not\n  // to verify the signature, bail early\n  if (validationOptions.ignoreSignature == true || !sdk.features.isTokenVerifySupported()) {\n    return token;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const key = await getKey(sdk, token.issuer, jwt.header.kid!);\n  const valid = await sdkCrypto.verifyToken(token.idToken, key);\n  if (!valid) {\n    throw new AuthSdkError('The token signature is not valid');\n  }\n  if (validationParams && validationParams.accessToken && token.claims.at_hash) {\n    const hash = await sdkCrypto.getOidcHash(validationParams.accessToken);\n    if (hash !== token.claims.at_hash) {\n      throw new AuthSdkError('Token hash verification failed');\n    }\n  }\n  return token;\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { clone } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport {\n  OktaAuthOAuthInterface,\n  TokenVerifyParams,\n  IDToken,\n  OAuthResponse,\n  TokenParams,\n  TokenResponse,\n  CustomUrls,\n  Tokens,\n} from './types';\nimport { verifyToken } from './verifyToken';\nimport { getDefaultTokenParams } from './util';\n\nfunction validateResponse(res: OAuthResponse, oauthParams: TokenParams) {\n  if (res['error'] && res['error_description']) {\n    throw new OAuthError(res['error'], res['error_description']);\n  }\n\n  if (res.state !== oauthParams.state) {\n    throw new AuthSdkError('OAuth flow response state doesn\\'t match request state');\n  }\n}\n\nexport async function handleOAuthResponse(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  res: OAuthResponse,\n  urls?: CustomUrls\n): Promise<TokenResponse> {\n  const pkce = sdk.options.pkce !== false;\n\n  // The result contains an authorization_code and PKCE is enabled \n  // `exchangeCodeForTokens` will call /token then call `handleOauthResponse` recursively with the result\n  if (pkce && (res.code || res.interaction_code)) {\n    return sdk.token.exchangeCodeForTokens(Object.assign({}, tokenParams, {\n      authorizationCode: res.code,\n      interactionCode: res.interaction_code\n    }), urls);\n  }\n\n  tokenParams = tokenParams || getDefaultTokenParams(sdk);\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n\n  let responseType = tokenParams.responseType || [];\n  if (!Array.isArray(responseType) && responseType !== 'none') {\n    responseType = [responseType];\n  }\n\n  let scopes;\n  if (res.scope) {\n    scopes = res.scope.split(' ');\n  } else {\n    scopes = clone(tokenParams.scopes);\n  }\n  const clientId = tokenParams.clientId || sdk.options.clientId;\n\n  // Handling the result from implicit flow or PKCE token exchange\n  validateResponse(res, tokenParams);\n\n  const tokenDict = {} as Tokens;\n  const expiresIn = res.expires_in;\n  const tokenType = res.token_type;\n  const accessToken = res.access_token;\n  const idToken = res.id_token;\n  const refreshToken = res.refresh_token;\n  const now = Math.floor(Date.now()/1000);\n\n  if (accessToken) {\n    const accessJwt = sdk.token.decode(accessToken);\n    tokenDict.accessToken = {\n      accessToken: accessToken,\n      claims: accessJwt.payload,\n      expiresAt: Number(expiresIn) + now,\n      tokenType: tokenType!,\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      userinfoUrl: urls.userinfoUrl!\n    };\n  }\n\n  if (refreshToken) {\n    tokenDict.refreshToken = {\n      refreshToken: refreshToken,\n      // should not be used, this is the accessToken expire time\n      // TODO: remove \"expiresAt\" in the next major version OKTA-407224\n      expiresAt: Number(expiresIn) + now, \n      scopes: scopes,\n      tokenUrl: urls.tokenUrl!,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n    };\n  }\n\n  if (idToken) {\n    const idJwt = sdk.token.decode(idToken);\n    const idTokenObj: IDToken = {\n      idToken: idToken,\n      claims: idJwt.payload,\n      expiresAt: idJwt.payload.exp! - idJwt.payload.iat! + now, // adjusting expiresAt to be in local time\n      scopes: scopes,\n      authorizeUrl: urls.authorizeUrl!,\n      issuer: urls.issuer!,\n      clientId: clientId!\n    };\n\n    const validationParams: TokenVerifyParams = {\n      clientId: clientId!,\n      issuer: urls.issuer!,\n      nonce: tokenParams.nonce,\n      accessToken: accessToken,\n      acrValues: tokenParams.acrValues\n    };\n\n    if (tokenParams.ignoreSignature !== undefined) {\n      validationParams.ignoreSignature = tokenParams.ignoreSignature;\n    }\n\n    await verifyToken(sdk, idTokenObj, validationParams);\n    tokenDict.idToken = idTokenObj;\n  }\n\n  // Validate received tokens against requested response types \n  if (responseType.indexOf('token') !== -1 && !tokenDict.accessToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"token\" was requested but \"access_token\" was not returned.');\n  }\n  if (responseType.indexOf('id_token') !== -1 && !tokenDict.idToken) {\n    // eslint-disable-next-line max-len\n    throw new AuthSdkError('Unable to parse OAuth flow response: response type \"id_token\" was requested but \"id_token\" was not returned.');\n  }\n\n  return {\n    tokens: tokenDict,\n    state: res.state!,\n    code: res.code,\n    responseType\n  };\n  \n}", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/* eslint-disable max-len */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { CustomUrls, OAuthResponse, OAuthResponseType, OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { getOAuthUrls, getDefaultTokenParams } from './util';\nimport { clone } from '../util';\nimport { postToTokenEndpoint } from './endpoints/token';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\n// codeVerifier is required. May pass either an authorizationCode or interactionCode\nexport function exchangeCodeForTokens(sdk: OktaAuthOAuthInterface, tokenParams: TokenParams, urls?: CustomUrls): Promise<TokenResponse> {\n  urls = urls || getOAuthUrls(sdk, tokenParams);\n  // build params using defaults + options\n  tokenParams = Object.assign({}, getDefaultTokenParams(sdk), clone(tokenParams));\n\n  const {\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n    clientId,\n    redirectUri,\n    scopes,\n    ignoreSignature,\n    state,\n    acrValues\n  } = tokenParams;\n\n  var getTokenOptions = {\n    clientId,\n    redirectUri,\n    authorizationCode,\n    interactionCode,\n    codeVerifier,\n  };\n\n  return postToTokenEndpoint(sdk, getTokenOptions, urls)\n    .then((response: OAuthResponse) => {\n\n      // `handleOAuthResponse` hanadles responses from both `/authorize` and `/token` endpoints\n      // Here we modify the response from `/token` so that it more closely matches a response from `/authorize`\n      // `responseType` is used to validate that the expected tokens were returned\n      const responseType: OAuthResponseType[] = ['token']; // an accessToken will always be returned\n      if (scopes!.indexOf('openid') !== -1) {\n        responseType.push('id_token'); // an idToken will be returned if \"openid\" is in the scopes\n      }\n      const handleResponseOptions: TokenParams = {\n        clientId,\n        redirectUri,\n        scopes,\n        responseType,\n        ignoreSignature,\n        acrValues\n      };\n      return handleOAuthResponse(sdk, handleResponseOptions, response, urls!)\n        .then((response: TokenResponse) => {\n          // For compatibility, \"code\" is returned in the TokenResponse. OKTA-326091\n          response.code = authorizationCode;\n          response.state = state!;\n          return response;\n        });\n    })\n    .finally(() => {\n      sdk.transactionManager.clear();\n    });\n}", "/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { isFunction } from '../util';\nimport { AuthSdkError, OAuthError } from '../errors';\nimport { httpRequest } from '../http';\nimport { AccessToken, IDToken, UserClaims, isAccessToken, isIDToken, CustomUserClaims } from './types';\n\nexport async function getUserInfo<T extends CustomUserClaims = CustomUserClaims>(\n  sdk, accessTokenObject: AccessToken,\n  idTokenObject: IDToken\n): Promise<UserClaims<T>> {\n  // If token objects were not passed, attempt to read from the TokenManager\n  if (!accessTokenObject) {\n    accessTokenObject = (await sdk.tokenManager.getTokens()).accessToken as AccessToken;\n  }\n  if (!idTokenObject) {\n    idTokenObject = (await sdk.tokenManager.getTokens()).idToken as IDToken;\n  }\n\n  if (!accessTokenObject || !isAccessToken(accessTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an access token object'));\n  }\n\n  if (!idTokenObject || !isIDToken(idTokenObject)) {\n    return Promise.reject(new AuthSdkError('getUserInfo requires an ID token object'));\n  }\n\n  return httpRequest(sdk, {\n    url: accessTokenObject.userinfoUrl,\n    method: 'GET',\n    accessToken: accessTokenObject.accessToken\n  })\n    .then(userInfo => {\n      // Only return the userinfo response if subjects match to mitigate token substitution attacks\n      if (userInfo.sub === idTokenObject.claims.sub) {\n        return userInfo;\n      }\n      return Promise.reject(new AuthSdkError('getUserInfo request was rejected due to token mismatch'));\n    })\n    .catch(function (err) {\n      if (err.xhr && (err.xhr.status === 401 || err.xhr.status === 403)) {\n        var authenticateHeader;\n        if (err.xhr.headers && isFunction(err.xhr.headers.get) && err.xhr.headers.get('WWW-Authenticate')) {\n          authenticateHeader = err.xhr.headers.get('WWW-Authenticate');\n        } else if (isFunction(err.xhr.getResponseHeader)) {\n          authenticateHeader = err.xhr.getResponseHeader('WWW-Authenticate');\n        }\n        if (authenticateHeader) {\n          var errorMatches = authenticateHeader.match(/error=\"(.*?)\"/) || [];\n          var errorDescriptionMatches = authenticateHeader.match(/error_description=\"(.*?)\"/) || [];\n          var error = errorMatches[1];\n          var errorDescription = errorDescriptionMatches[1];\n          if (error && errorDescription) {\n            err = new OAuthError(error, errorDescription);\n          }\n        }\n      }\n      throw err;\n    });\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window, document */\n/* eslint-disable complexity, max-statements */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface } from '../types';\n\nexport function addListener(eventTarget, name, fn) {\n  if (eventTarget.addEventListener) {\n    eventTarget.addEventListener(name, fn);\n  } else {\n    eventTarget.attachEvent('on' + name, fn);\n  }\n}\n\nexport function removeListener(eventTarget, name, fn) {\n  if (eventTarget.removeEventListener) {\n    eventTarget.removeEventListener(name, fn);\n  } else {\n    eventTarget.detachEvent('on' + name, fn);\n  }\n}\n\nexport function loadFrame(src) {\n  var iframe = document.createElement('iframe');\n  iframe.style.display = 'none';\n  iframe.src = src;\n\n  return document.body.appendChild(iframe);\n}\n\nexport function loadPopup(src, options) {\n  var title = options.popupTitle || 'External Identity Provider User Authentication';\n  var appearance = 'toolbar=no, scrollbars=yes, resizable=yes, ' +\n    'top=100, left=500, width=600, height=600';\n  return window.open(src, title, appearance);\n}\n\nexport function addPostMessageListener(sdk: OktaAuthOAuthInterface, timeout, state) {\n  var responseHandler;\n  var timeoutId;\n  var msgReceivedOrTimeout = new Promise(function (resolve, reject) {\n\n    responseHandler = function responseHandler(e) {\n      if (!e.data || e.data.state !== state) {\n        // A message not meant for us\n        return;\n      }\n\n      // Configuration mismatch between saved token and current app instance\n      // This may happen if apps with different issuers are running on the same host url\n      // If they share the same storage key, they may read and write tokens in the same location.\n      // Common when developing against http://localhost\n      if (e.origin !== sdk.getIssuerOrigin()) {\n        return reject(new AuthSdkError('The request does not match client configuration'));\n      }\n      resolve(e.data);\n    };\n\n    addListener(window, 'message', responseHandler);\n\n    timeoutId = setTimeout(function () {\n      reject(new AuthSdkError('OAuth flow timed out'));\n    }, timeout || 120000);\n  });\n\n  return msgReceivedOrTimeout\n    .finally(function () {\n      clearTimeout(timeoutId);\n      removeListener(window, 'message', responseHandler);\n    });\n}\n", "/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { getWellKnown } from '../endpoints/well-known';\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { getDefaultTokenParams } from './defaultTokenParams';\nimport { DEFAULT_CODE_CHALLENGE_METHOD } from '../../constants';\nimport PKCE from './pkce';\nimport { OktaAuthBaseInterface } from '../../base/types';\n\nexport function assertPKCESupport(sdk: OktaAuthBaseInterface) {\n  if (!sdk.features.isPKCESupported()) {\n    var errorMessage = 'PKCE requires a modern browser with encryption support running in a secure context.';\n    if (!sdk.features.isHTTPS()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\nThe current page is not being served with HTTPS protocol. PKCE requires secure HTTPS protocol.';\n    }\n    if (!sdk.features.hasTextEncoder()) {\n      // eslint-disable-next-line max-len\n      errorMessage += '\\n\"TextEncoder\" is not defined. To use PKCE, you may need to include a polyfill/shim for this browser.';\n    }\n    throw new AuthSdkError(errorMessage);\n  }\n}\n\nexport async function validateCodeChallengeMethod(sdk: OktaAuthOAuthInterface, codeChallengeMethod?: string) {\n  // set default code challenge method, if none provided\n  codeChallengeMethod = codeChallengeMethod || sdk.options.codeChallengeMethod || DEFAULT_CODE_CHALLENGE_METHOD;\n\n  // validate against .well-known/openid-configuration\n  const wellKnownResponse = await getWellKnown(sdk);\n  var methods = wellKnownResponse['code_challenge_methods_supported'] || [];\n  if (methods.indexOf(codeChallengeMethod) === -1) {\n    throw new AuthSdkError('Invalid code_challenge_method');\n  }\n  return codeChallengeMethod;\n}\n\nexport async function preparePKCE(\n  sdk: OktaAuthOAuthInterface, \n  tokenParams: TokenParams\n): Promise<TokenParams> {\n  let {\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  } = tokenParams;\n\n  // PKCE calculations can be avoided by passing a codeChallenge\n  codeChallenge = codeChallenge || sdk.options.codeChallenge;\n  if (!codeChallenge) {\n    assertPKCESupport(sdk);\n    codeVerifier = codeVerifier || PKCE.generateVerifier();\n    codeChallenge = await PKCE.computeChallenge(codeVerifier);\n  }\n  codeChallengeMethod = await validateCodeChallengeMethod(sdk, codeChallengeMethod);\n\n  // Clone/copy the params. Set PKCE values\n  tokenParams = {\n    ...tokenParams,\n    responseType: 'code', // responseType is forced\n    codeVerifier,\n    codeChallenge,\n    codeChallengeMethod\n  };\n\n  return tokenParams;\n}\n\n// Prepares params for a call to /authorize or /token\nexport async function prepareTokenParams(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams = {}\n): Promise<TokenParams> {\n  // build params using defaults + options\n  const defaults = getDefaultTokenParams(sdk);\n  tokenParams = { ...defaults, ...tokenParams };\n\n  if (tokenParams.pkce === false) {\n    // Implicit flow or authorization_code without PKCE\n    return tokenParams;\n  }\n\n  return preparePKCE(sdk, tokenParams);\n}", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { isString, removeNils, toQueryString } from '../../util';\nimport { AuthSdkError } from '../../errors';\nimport { OAuthParams, TokenParams } from '../types';\n\nexport function convertTokenParamsToOAuthParams(tokenParams: TokenParams) {\n  // Quick validation\n  if (!tokenParams.clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to get a token');\n  }\n\n  if (isString(tokenParams.responseType) && tokenParams.responseType.indexOf(' ') !== -1) {\n    throw new AuthSdkError('Multiple OAuth responseTypes must be defined as an array');\n  }\n\n  // Convert our params to their actual OAuth equivalents\n  var oauthParams: OAuthParams = {\n    'client_id': tokenParams.clientId,\n    'code_challenge': tokenParams.codeChallenge,\n    'code_challenge_method': tokenParams.codeChallengeMethod,\n    'display': tokenParams.display,\n    'idp': tokenParams.idp,\n    'idp_scope': tokenParams.idpScope,\n    'login_hint': tokenParams.loginHint,\n    'max_age': tokenParams.maxAge,\n    'nonce': tokenParams.nonce,\n    'prompt': tokenParams.prompt,\n    'redirect_uri': tokenParams.redirectUri,\n    'response_mode': tokenParams.responseMode,\n    'response_type': tokenParams.responseType,\n    'sessionToken': tokenParams.sessionToken,\n    'state': tokenParams.state,\n    'acr_values': tokenParams.acrValues,\n    'enroll_amr_values': tokenParams.enrollAmrValues,\n  };\n  oauthParams = removeNils(oauthParams) as OAuthParams;\n\n  ['idp_scope', 'response_type', 'enroll_amr_values'].forEach(function (mayBeArray) {\n    if (Array.isArray(oauthParams[mayBeArray])) {\n      oauthParams[mayBeArray] = oauthParams[mayBeArray].join(' ');\n    }\n  });\n\n  if (tokenParams.responseType!.indexOf('id_token') !== -1 &&\n    tokenParams.scopes!.indexOf('openid') === -1) {\n    throw new AuthSdkError('openid scope must be specified in the scopes argument when requesting an id_token');\n  } else if (tokenParams.scopes) {\n    oauthParams.scope = tokenParams.scopes!.join(' ');\n  }\n\n  return oauthParams;\n}\n\nexport function buildAuthorizeParams(tokenParams: TokenParams) {\n  var oauthQueryParams = convertTokenParamsToOAuthParams(tokenParams);\n  return toQueryString({ \n    ...oauthQueryParams, \n    ...(tokenParams.extraParams && { ...tokenParams.extraParams })\n  });\n}\n", "\n/* global document */\n/* eslint-disable complexity, max-statements */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport {\n  getOAuthUrls,\n  loadFrame,\n  addPostMessageListener\n} from './util';\n\nimport AuthSdkError from '../errors/AuthSdkError';\n\nimport {\n  OktaAuthOAuthInterface,\n  TokenParams,\n  PopupParams,\n  OAuthResponse,\n} from './types';\n\nimport { prepareTokenParams } from './util/prepareTokenParams';\nimport { buildAuthorizeParams } from './endpoints/authorize';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n/*\n * Retrieve an idToken from an Okta or a third party idp\n *\n * Two main flows:\n *\n *  1) Exchange a sessionToken for a token\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *      sessionToken: 'yourtoken'\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *\n *    Forced:\n *      prompt: 'none'\n *      responseMode: 'okta_post_message'\n *      display: undefined\n *\n *  2) Get a token from an idp\n *\n *    Required:\n *      clientId: passed via the OktaAuth constructor or into getToken\n *\n *    Optional:\n *      redirectUri: defaults to window.location.href\n *      scopes: defaults to ['openid', 'email']\n *      idp: defaults to Okta as an idp\n *      prompt: no default. Pass 'none' to throw an error if user is not signed in\n *\n *    Forced:\n *      display: 'popup'\n *\n *  Only common optional params shown. Any OAuth parameters not explicitly forced are available to override\n *\n * @param {Object} oauthOptions\n * @param {String} [oauthOptions.clientId] ID of this client\n * @param {String} [oauthOptions.redirectUri] URI that the iframe or popup will go to once authenticated\n * @param {String[]} [oauthOptions.scopes] OAuth 2.0 scopes to request (openid must be specified)\n * @param {String} [oauthOptions.idp] ID of an external IdP to use for user authentication\n * @param {String} [oauthOptions.sessionToken] Bootstrap Session Token returned by the Okta Authentication API\n * @param {String} [oauthOptions.prompt] Determines whether the Okta login will be displayed on failure.\n *                                       Use 'none' to prevent this behavior\n *\n * @param {Object} options\n * @param {Integer} [options.timeout] Time in ms before the flow is automatically terminated. Defaults to 120000\n * @param {String} [options.popupTitle] Title dispayed in the popup.\n *                                      Defaults to 'External Identity Provider User Authentication'\n */\nexport function getToken(sdk: OktaAuthOAuthInterface, options: TokenParams & PopupParams) {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getToken\" takes only a single set of options'));\n  }\n\n  options = options || {};\n\n  // window object cannot be serialized, save for later use\n  // TODO: move popup related params into a separate options object\n  const popupWindow = options.popupWindow;\n  options.popupWindow = undefined;\n\n  return prepareTokenParams(sdk, options)\n    .then(function (tokenParams: TokenParams) {\n\n      // Start overriding any options that don't make sense\n      var sessionTokenOverrides = {\n        prompt: 'none',\n        responseMode: 'okta_post_message',\n        display: null\n      };\n\n      var idpOverrides = {\n        display: 'popup'\n      };\n\n      if (options.sessionToken) {\n        Object.assign(tokenParams, sessionTokenOverrides);\n      } else if (options.idp) {\n        Object.assign(tokenParams, idpOverrides);\n      }\n\n      // Use the query params to build the authorize url\n      var requestUrl,\n        endpoint,\n        urls;\n\n      // Get authorizeUrl and issuer\n      urls = getOAuthUrls(sdk, tokenParams);\n      endpoint = options.codeVerifier ? urls.tokenUrl : urls.authorizeUrl;\n      requestUrl = endpoint + buildAuthorizeParams(tokenParams);\n\n      // Determine the flow type\n      var flowType;\n      if (tokenParams.sessionToken || tokenParams.display === null) {\n        flowType = 'IFRAME';\n      } else if (tokenParams.display === 'popup') {\n        flowType = 'POPUP';\n      } else {\n        flowType = 'IMPLICIT';\n      }\n\n      // Execute the flow type\n      switch (flowType) {\n        case 'IFRAME':\n          var iframePromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          var iframeEl = loadFrame(requestUrl);\n          return iframePromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (document.body.contains(iframeEl)) {\n                iframeEl.parentElement?.removeChild(iframeEl);\n              }\n            });\n\n        case 'POPUP':\n          var oauthPromise; // resolves with OAuth response\n\n          // Add listener on postMessage before window creation, so\n          // postMessage isn't triggered before we're listening\n          if (tokenParams.responseMode === 'okta_post_message') {\n            if (!sdk.features.isPopupPostMessageSupported()) {\n              throw new AuthSdkError('This browser doesn\\'t have full postMessage support');\n            }\n            oauthPromise = addPostMessageListener(sdk, options.timeout, tokenParams.state);\n          }\n\n          // Redirect for authorization\n          // popupWindown can be null when popup is blocked\n          if (popupWindow) { \n            popupWindow.location.assign(requestUrl);\n          }\n\n          // The popup may be closed without receiving an OAuth response. Setup a poller to monitor the window.\n          var popupPromise = new Promise(function (resolve, reject) {\n            var closePoller = setInterval(function () {\n              if (!popupWindow || popupWindow.closed) {\n                clearInterval(closePoller);\n                reject(new AuthSdkError('Unable to parse OAuth flow response'));\n              }\n            }, 100);\n\n            // Proxy the OAuth promise results\n            oauthPromise\n              .then(function (res) {\n                clearInterval(closePoller);\n                resolve(res);\n              })\n              .catch(function (err) {\n                clearInterval(closePoller);\n                reject(err);\n              });\n          });\n\n          return popupPromise\n            .then(function (res) {\n              return handleOAuthResponse(sdk, tokenParams, res as OAuthResponse, urls);\n            })\n            .finally(function () {\n              if (popupWindow && !popupWindow.closed) {\n                popupWindow.close();\n              }\n            });\n\n        default:\n          throw new AuthSdkError('The full page redirect flow is not supported');\n      }\n    });\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\n\nexport function getWithoutPrompt(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithoutPrompt\" takes only a single set of options'));\n  }\n  \n  options = clone(options) || {};\n  Object.assign(options, {\n    prompt: 'none',\n    responseMode: 'okta_post_message',\n    display: null\n  });\n  return getToken(sdk, options);\n}\n\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams, TokenResponse } from './types';\nimport { clone } from '../util';\nimport { getToken } from './getToken';\nimport { loadPopup } from './util';\n\nexport function getWithPopup(sdk: OktaAuthOAuthInterface, options: TokenParams): Promise<TokenResponse> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithPopup\" takes only a single set of options'));\n  }\n\n  // some browsers (safari, firefox) block popup if it's initialed from an async process\n  // here we create the popup window immediately after user interaction\n  // then redirect to the /authorize endpoint when the requestUrl is available\n  const popupWindow = loadPopup('/', options);\n  options = clone(options) || {};\n  Object.assign(options, {\n    display: 'popup',\n    responseMode: 'okta_post_message',\n    popupWindow\n  });\n  return getToken(sdk, options);\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, TokenParams } from './types';\nimport { clone } from '../util';\nimport { prepareTokenParams, createOAuthMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport async function getWithRedirect(sdk: OktaAuthOAuthInterface, options?: TokenParams): Promise<void> {\n  if (arguments.length > 2) {\n    return Promise.reject(new AuthSdkError('As of version 3.0, \"getWithRedirect\" takes only a single set of options'));\n  }\n\n  options = clone(options) || {};\n\n  const tokenParams = await prepareTokenParams(sdk, options);\n  const meta = createOAuthMeta(sdk, tokenParams);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(tokenParams);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n", "/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { isInteractionRequiredError, urlParamsToObject } from './util';\nimport {\n  ParseFromUrlOptions,\n  TokenResponse,\n  CustomUrls,\n  TransactionMeta,\n  OAuthResponse\n} from './types';\nimport { isString } from '../util';\nimport { handleOAuthResponse } from './handleOAuthResponse';\n\nfunction removeHash(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.search);\n  } else {\n    nativeLoc.hash = '';\n  }\n}\n\nfunction removeSearch(sdk) {\n  var nativeHistory = sdk.token.parseFromUrl._getHistory();\n  var nativeDoc = sdk.token.parseFromUrl._getDocument();\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  if (nativeHistory && nativeHistory.replaceState) {\n    nativeHistory.replaceState(null, nativeDoc.title, nativeLoc.pathname + nativeLoc.hash);\n  } else {\n    nativeLoc.search = '';\n  }\n}\n\nexport function getResponseMode(sdk): 'query' | 'fragment' {\n  // https://openid.net/specs/openid-connect-core-1_0.html#Authentication\n  var defaultResponseMode = sdk.options.pkce ? 'query' : 'fragment';\n  var responseMode = sdk.options.responseMode || defaultResponseMode;\n  return responseMode;\n}\n\nexport function parseOAuthResponseFromUrl(sdk, options: string | ParseFromUrlOptions): OAuthResponse {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  var url = options.url;\n  var responseMode = options.responseMode || getResponseMode(sdk);\n  var nativeLoc = sdk.token.parseFromUrl._getLocation();\n  var paramStr;\n\n  if (responseMode === 'query') {\n    paramStr = url ? url.substring(url.indexOf('?')) : nativeLoc.search;\n  } else {\n    paramStr = url ? url.substring(url.indexOf('#')) : nativeLoc.hash;\n  }\n\n  if (!paramStr) {\n    throw new AuthSdkError('Unable to parse a token from the url');\n  }\n\n  return urlParamsToObject(paramStr);\n}\n\nexport function cleanOAuthResponseFromUrl(sdk, options: ParseFromUrlOptions) {\n  // Clean hash or search from the url\n  const responseMode = options.responseMode || getResponseMode(sdk);\n  responseMode === 'query' ? removeSearch(sdk) : removeHash(sdk);\n}\n\nexport async function parseFromUrl(sdk, options?: string | ParseFromUrlOptions): Promise<TokenResponse> {\n  options = options || {};\n  if (isString(options)) {\n    options = { url: options } as ParseFromUrlOptions;\n  } else {\n    options = options as ParseFromUrlOptions;\n  }\n\n  const res: OAuthResponse = parseOAuthResponseFromUrl(sdk, options);\n  const state = res.state;\n  const oauthParams: TransactionMeta = sdk.transactionManager.load({\n    state\n  });\n  if (!oauthParams) {\n    if (sdk.options.pkce) {\n      // eslint-disable-next-line max-len\n      throw new AuthSdkError('Could not load PKCE codeVerifier from storage. This may indicate the auth flow has already completed or multiple auth flows are executing concurrently.', undefined);\n    }\n    throw new AuthSdkError('Unable to retrieve OAuth redirect params from storage');\n  }\n  const urls: CustomUrls = oauthParams.urls as CustomUrls;\n  delete oauthParams.urls;\n\n  if (!options.url) {\n    // Clean hash or search from the url\n    cleanOAuthResponseFromUrl(sdk, options);\n  }\n\n  return handleOAuthResponse(sdk, oauthParams, res, urls)\n    .catch(err => {\n      if (!isInteractionRequiredError(err)) {\n        sdk.transactionManager.clear({\n          state\n        });\n      }\n      throw err;\n    })\n    .then(res => {\n      sdk.transactionManager.clear({\n        state\n      });\n      return res;\n    });\n\n}\n", "import { RefreshToken } from '../types';\nimport { isAuthApiError } from '../../errors';\n\nexport function isSameRefreshToken(a: RefreshToken, b: RefreshToken) {\n  return (a.refreshToken === b.refreshToken);\n}\n\nexport function isRefreshTokenError(err: Error) {\n  if (!isAuthApiError(err)) {\n    return false;\n  }\n\n  if (!err.xhr || !err.xhr.responseJSON) {\n    return false;\n  }\n\n  const { responseJSON } = err.xhr;\n  if (responseJSON.error === 'invalid_grant') {\n    return true;\n  }\n\n  return false;\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { getOAuthUrls } from './util/oauth';\nimport { isSameRefreshToken } from './util/refreshToken';\nimport { OktaAuthOAuthInterface, TokenParams, RefreshToken, Tokens } from './types';\nimport { handleOAuthResponse } from './handleOAuthResponse';\nimport { postRefreshToken } from './endpoints/token';\nimport { isRefreshTokenInvalidError } from './util/errors';\n\nexport async function renewTokensWithRefresh(\n  sdk: OktaAuthOAuthInterface,\n  tokenParams: TokenParams,\n  refreshTokenObject: RefreshToken\n): Promise<Tokens> {\n  const { clientId } = sdk.options;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to renew tokens');\n  }\n\n  try {\n    const renewTokenParams: TokenParams = Object.assign({}, tokenParams, {\n      clientId,\n    });\n    const tokenResponse = await postRefreshToken(sdk, renewTokenParams, refreshTokenObject);\n    const urls = getOAuthUrls(sdk, tokenParams);\n    const { tokens } = await handleOAuthResponse(sdk, renewTokenParams, tokenResponse, urls);\n\n    // Support rotating refresh tokens\n    const { refreshToken } = tokens;\n    if (refreshToken && !isSameRefreshToken(refreshToken, refreshTokenObject)) {\n      sdk.tokenManager.updateRefreshToken(refreshToken);\n    }\n\n    return tokens;\n  }\n  catch (err) {\n    if (isRefreshTokenInvalidError(err)) {\n      // if the refresh token is invalid, remove it from storage\n      sdk.tokenManager.removeRefreshToken();\n    }\n    throw err;\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { OktaAuthOAuthInterface, Token, Tokens, isAccessToken, AccessToken, IDToken, isIDToken } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\n\nfunction throwInvalidTokenError() {\n  throw new AuthSdkError(\n    'Renew must be passed a token with an array of scopes and an accessToken or idToken'\n  );\n}\n\n// Multiple tokens may have come back. Return only the token which was requested.\nfunction getSingleToken(originalToken: Token, tokens: Tokens) {\n  if (isIDToken(originalToken)) {\n    return tokens.idToken;\n  }\n  if (isAccessToken(originalToken)) {\n    return tokens.accessToken;\n  }\n  throwInvalidTokenError();\n}\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\nexport async function renewToken(sdk: OktaAuthOAuthInterface, token: Token): Promise<Token | undefined> {\n  if (!isIDToken(token) && !isAccessToken(token)) {\n    throwInvalidTokenError();\n  }\n\n  let tokens = sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    tokens = await renewTokensWithRefresh(sdk, {\n      scopes: token.scopes,\n    }, tokens.refreshToken);\n    return getSingleToken(token, tokens);\n  }\n\n  var responseType;\n  if (sdk.options.pkce) {\n    responseType = 'code';\n  } else if (isAccessToken(token)) {\n    responseType = 'token';\n  } else {\n    responseType = 'id_token';\n  }\n\n  const { scopes, authorizeUrl, userinfoUrl, issuer } = token as (AccessToken & IDToken);\n  return getWithoutPrompt(sdk, {\n    responseType,\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  })\n    .then(function (res) {\n      return getSingleToken(token, res.tokens);\n    });\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../errors';\nimport { RenewTokensParams, Tokens } from './types';\nimport { getWithoutPrompt } from './getWithoutPrompt';\nimport { renewTokensWithRefresh } from './renewTokensWithRefresh';\nimport { getDefaultTokenParams } from './util';\n\n// If we have a refresh token, renew using that, otherwise getWithoutPrompt\n// eslint-disable-next-line complexity\nexport async function renewTokens(sdk, options?: RenewTokensParams): Promise<Tokens> {\n  const tokens = options?.tokens ?? sdk.tokenManager.getTokensSync();\n  if (tokens.refreshToken) {\n    return renewTokensWithRefresh(sdk, options || {}, tokens.refreshToken);\n  }\n\n  if (!tokens.accessToken && !tokens.idToken) {\n    throw new AuthSdkError('renewTokens() was called but there is no existing token');\n  }\n\n  const accessToken = tokens.accessToken || {};\n  const idToken = tokens.idToken || {};\n  const scopes = accessToken.scopes || idToken.scopes;\n  if (!scopes) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read scopes');\n  }\n  const authorizeUrl = accessToken.authorizeUrl || idToken.authorizeUrl;\n  if (!authorizeUrl) {\n    throw new AuthSdkError('renewTokens: invalid tokens: could not read authorizeUrl');\n  }\n  const userinfoUrl = accessToken.userinfoUrl || sdk.options.userinfoUrl;\n  const issuer = idToken.issuer || sdk.options.issuer;\n\n  // Get tokens using the SSO cookie\n  options = Object.assign({\n    scopes,\n    authorizeUrl,\n    userinfoUrl,\n    issuer\n  }, options);\n\n  if (sdk.options.pkce) {\n    options.responseType = 'code';\n  } else {\n    const { responseType } = getDefaultTokenParams(sdk);\n    options.responseType = responseType;\n  }\n\n  return getWithoutPrompt(sdk, options)\n    .then(res => res.tokens);\n    \n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint complexity:[0,8] */\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport {\n  getOAuthUrls,\n} from './util/oauth';\nimport { btoa } from '../crypto';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  OktaAuthOAuthInterface,\n  RevocableToken,\n  AccessToken,\n  RefreshToken\n} from './types';\n\n// refresh tokens have precedence to be revoked if no token is specified\nexport async function revokeToken(sdk: OktaAuthOAuthInterface, token: RevocableToken): Promise<any> {\n  let accessToken = '';\n  let refreshToken = '';\n  if (token) { \n      accessToken = (token as AccessToken).accessToken;\n      refreshToken = (token as RefreshToken).refreshToken;  \n  }\n  if(!accessToken && !refreshToken) { \n    throw new AuthSdkError('A valid access or refresh token object is required');\n  }\n  var clientId = sdk.options.clientId;\n  var clientSecret = sdk.options.clientSecret;\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to revoke a token');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var revokeUrl = getOAuthUrls(sdk).revokeUrl!;\n  var args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: refreshToken ? 'refresh_token' : 'access_token', \n    token: refreshToken || accessToken,\n  }).slice(1);\n  var creds = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  return post(sdk, revokeUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + creds\n    }\n  });\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { AuthSdkError } from '../errors';\nimport { getWellKnown } from './endpoints/well-known';\nimport { post } from '../http';\nimport { toQueryString } from '../util';\nimport { btoa } from '../crypto';\nimport { Token, TokenKind } from './types';\n\nconst hintMap = {\n  accessToken: 'access_token',\n  idToken: 'id_token',\n  refreshToken: 'refresh_token'\n};\n\n/* eslint complexity: [2, 9] */\nexport async function oidcIntrospect (sdk, kind: TokenKind, token?: Token) {\n  let issuer: string;\n  let clientId: string = sdk.options.clientId;\n  let clientSecret: string | undefined = sdk.options.clientSecret;\n\n  if (!token) {\n    token = sdk.tokenManager.getTokens()[kind];\n  }\n\n  if (!token) {\n    throw new AuthSdkError(`unable to find ${kind} in storage or fn params`);\n  }\n\n  if (kind !== TokenKind.ACCESS) {\n    issuer = (token as any)?.issuer;\n  }\n  else {\n    issuer = (token as any)?.claims?.iss;\n  }\n  issuer = issuer || sdk.options.issuer;\n\n  if (!clientId) {\n    throw new AuthSdkError('A clientId must be specified in the OktaAuth constructor to introspect a token');\n  }\n  if (!issuer) {\n    throw new AuthSdkError('Unable to find issuer');\n  }\n\n  const { introspection_endpoint: introspectUrl }  = await getWellKnown(sdk, issuer);\n  const authHeader = clientSecret ? btoa(`${clientId}:${clientSecret}`) : btoa(clientId);\n  const args = toQueryString({\n    // eslint-disable-next-line camelcase\n    token_type_hint: hintMap[kind],\n    token: token[kind]    // extract raw token string from token object\n  }).slice(1);\n  return post(sdk, introspectUrl, args, {\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      'Authorization': 'Basic ' + authHeader\n    }\n  });\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { OAuthTransactionMeta, OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getOAuthUrls } from './oauth';\n\nexport function createEnrollAuthenticatorMeta(\n  sdk: OktaAuthOAuthInterface, \n  params: EnrollAuthenticatorOptions\n): OAuthTransactionMeta {\n  const issuer = sdk.options.issuer!;\n  const urls = getOAuthUrls(sdk, params);\n  const oauthMeta: OAuthTransactionMeta = {\n    issuer,\n    urls,\n    clientId: params.clientId!,\n    redirectUri: params.redirectUri!,\n    responseType: params.responseType!,\n    responseMode: params.responseMode!,\n    state: params.state!,\n    acrValues: params.acrValues,\n    enrollAmrValues: params.enrollAmrValues,\n  };\n\n  return oauthMeta;\n}\n", "\n/* global window */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { generateState } from './oauth';\nimport { OktaAuthOAuthInterface, TokenParams } from '../types';\nimport { isBrowser } from '../../features';\nimport { removeNils } from '../../util';\n\nexport function getDefaultEnrollAuthenticatorParams(sdk: OktaAuthOAuthInterface): TokenParams {\n  const {\n    clientId,\n    redirectUri,\n    responseMode,\n    state,\n  } = sdk.options;\n  const defaultRedirectUri = isBrowser() ? window.location.href : undefined;\n  return removeNils({\n    clientId,\n    redirectUri: redirectUri || defaultRedirectUri,\n    responseMode,\n    state: state || generateState(),\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n  });\n}", "/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { AuthSdkError } from '../../errors';\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from '../types';\nimport { getDefaultEnrollAuthenticatorParams } from './defaultEnrollAuthenticatorParams';\n\nfunction prepareParams(\n  params: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  params = {\n    ...params,\n    // forced params:\n    responseType: 'none',\n    prompt: 'enroll_authenticator',\n    maxAge: 0,\n  };\n\n  if (!params.enrollAmrValues) {\n    throw new AuthSdkError('enroll_amr_values must be specified');\n  }\n  if (!params.acrValues) {\n    // `acr_values` is required and should equal 'urn:okta:2fa:any:ifpossible'\n    // But this can be changed in future\n    throw new AuthSdkError('acr_values must be specified');\n  }\n\n  // `scope`, `nonce` must be omitted\n  delete params.scopes;\n  delete params.nonce;\n\n  return params;\n}\n\n// Prepares params for a call to /authorize\nexport function prepareEnrollAuthenticatorParams(\n  sdk: OktaAuthOAuthInterface,\n  options: EnrollAuthenticatorOptions\n): EnrollAuthenticatorOptions {\n  return prepareParams({\n    ...getDefaultEnrollAuthenticatorParams(sdk),\n    ...options\n  });\n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { OktaAuthOAuthInterface, EnrollAuthenticatorOptions } from './types';\nimport { clone } from '../util';\nimport { prepareEnrollAuthenticatorParams, createEnrollAuthenticatorMeta } from './util';\nimport { buildAuthorizeParams } from './endpoints/authorize';\n\nexport function enrollAuthenticator(\n  sdk: OktaAuthOAuthInterface, \n  options: EnrollAuthenticatorOptions\n): void {\n  options = clone(options) || {};\n\n  const params = prepareEnrollAuthenticatorParams(sdk, options);\n  const meta = createEnrollAuthenticatorMeta(sdk, params);\n  const requestUrl = meta.urls.authorizeUrl + buildAuthorizeParams(params);\n  sdk.transactionManager.save(meta);\n  if (sdk.options.setLocation) {\n    sdk.options.setLocation(requestUrl);\n  } else {\n    window.location.assign(requestUrl);\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { PromiseQueue } from '../../util';\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport { getUserInfo } from '../getUserInfo';\nimport { getWithoutPrompt } from '../getWithoutPrompt';\nimport { getWithPopup } from '../getWithPopup';\nimport { getWithRedirect } from '../getWithRedirect';\nimport { parseFromUrl } from '../parseFromUrl';\nimport { renewToken } from '../renewToken';\nimport { renewTokens } from '../renewTokens';\nimport { renewTokensWithRefresh } from '../renewTokensWithRefresh';\nimport { revokeToken } from '../revokeToken';\nimport { oidcIntrospect } from '../introspect';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  GetWithRedirectFunction,\n  IDToken,\n  OktaAuthOAuthInterface,\n  ParseFromUrlInterface,\n  TokenAPI,\n  UserClaims,\n  Endpoints,\n} from '../types';\nimport { isLoginRedirect, prepareTokenParams } from '../util';\nimport { verifyToken } from '../verifyToken';\nimport { enrollAuthenticator } from '../enrollAuthenticator';\n\n// Factory\nexport function createTokenAPI(sdk: OktaAuthOAuthInterface, queue: PromiseQueue): TokenAPI {\n  const useQueue = (method) => {\n    return PromiseQueue.prototype.push.bind(queue, method, null);\n  };\n\n  const getWithRedirectFn = useQueue(getWithRedirect.bind(null, sdk)) as GetWithRedirectFunction;\n\n  // eslint-disable-next-line max-len\n  const parseFromUrlFn = useQueue(parseFromUrl.bind(null, sdk)) as ParseFromUrlInterface;\n  const parseFromUrlApi: ParseFromUrlInterface = Object.assign(parseFromUrlFn, {\n    // This is exposed so we can mock getting window.history in our tests\n    _getHistory: function() {\n      return window.history;\n    },\n\n    // This is exposed so we can mock getting window.location in our tests\n    _getLocation: function() {\n      return window.location;\n    },\n\n    // This is exposed so we can mock getting window.document in our tests\n    _getDocument: function() {\n      return window.document;\n    }\n  });\n\n  const token: TokenAPI ={\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    getWithoutPrompt: getWithoutPrompt.bind(null, sdk),\n    getWithPopup: getWithPopup.bind(null, sdk),\n    getWithRedirect: getWithRedirectFn,\n    parseFromUrl: parseFromUrlApi,\n    decode: decodeToken,\n    revoke: revokeToken.bind(null, sdk),\n    renew: renewToken.bind(null, sdk),\n    renewTokensWithRefresh: renewTokensWithRefresh.bind(null, sdk),\n    renewTokens: renewTokens.bind(null, sdk),\n    getUserInfo: <C extends CustomUserClaims = CustomUserClaims>(\n      accessTokenObject: AccessToken,\n      idTokenObject: IDToken\n    ): Promise<UserClaims<C>> => {\n      return getUserInfo(sdk, accessTokenObject, idTokenObject);\n    },\n    verify: verifyToken.bind(null, sdk),\n    isLoginRedirect: isLoginRedirect.bind(null, sdk),\n    introspect: oidcIntrospect.bind(null, sdk),\n  };\n\n  // Wrap certain async token API methods using PromiseQueue to avoid issues with concurrency\n  // 'getWithRedirect' and 'parseFromUrl' are already wrapped\n  const toWrap = [\n    'getWithoutPrompt',\n    'getWithPopup',\n    'revoke',\n    'renew',\n    'renewTokensWithRefresh',\n    'renewTokens'\n  ];\n  toWrap.forEach(key => {\n    token[key] = useQueue(token[key]);\n  });\n\n  return token;\n}\n\nexport function createEndpoints(sdk: OktaAuthOAuthInterface): Endpoints {\n  return {\n    authorize: {\n      enrollAuthenticator: enrollAuthenticator.bind(null, sdk),\n    }\n  };\n}\n", "/* eslint-disable complexity */\n\nimport { AuthSdkError } from '../../errors';\nimport { isAccessToken, isIDToken, isRefreshToken, Token, TokenType } from '../../oidc/types';\n\nexport function validateToken(token: Token, type?: TokenType) {\n  if (!isIDToken(token) && !isAccessToken(token) && !isRefreshToken(token)) {\n    throw new AuthSdkError(\n      'Token must be an Object with scopes, expiresAt, and one of: an idToken, accessToken, or refreshToken property'\n    );\n  }\n  \n  if (type === 'accessToken' && !isAccessToken(token)) {\n    throw new AuthSdkError('invalid accessToken');\n  } \n  if (type === 'idToken' && !isIDToken(token)) {\n    throw new AuthSdkError('invalid idToken');\n  }\n\n  if (type === 'refreshToken' && !isRefreshToken(token)) {\n    throw new AuthSdkError('invalid refreshToken');\n  }\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport default class SdkClock {\n  localOffset: number;\n\n  constructor(localOffset) {\n    // Calculated local clock offset from server time (in milliseconds). Can be positive or negative.\n    this.localOffset = parseInt(localOffset || 0);\n  }\n\n  // factory method. Create an instance of a clock from current context.\n  static create(/* sdk, options */): SdkClock {\n    // TODO: calculate localOffset\n    var localOffset = 0;\n    return new SdkClock(localOffset);\n  }\n\n  // Return the current time (in seconds)\n  now() {\n    var now = (Date.now() + this.localOffset) / 1000;\n    return now;\n  }\n}\n", "/* eslint-disable max-len */\nimport { StorageProvider } from '../../storage/types';\nimport { TokenManagerOptions } from './options';\nimport { AccessToken, IDToken, RefreshToken, Token, Tokens, TokenType } from './Token';\n\nexport interface TokenManagerError {\n  errorSummary: string;\n  errorCode: string;\n  message: string;\n  name: string;\n  tokenKey: string;\n}\n\nexport declare type AccessTokenCallback = (key: string, token: AccessToken) => void;\nexport declare type IDTokenCallback = (key: string, token: IDToken) => void;\nexport declare type RefreshTokenCallback = (key: string, token: RefreshToken) => void;\n\nexport const EVENT_EXPIRED = 'expired';\nexport const EVENT_RENEWED = 'renewed';\nexport const EVENT_ADDED = 'added';\nexport const EVENT_REMOVED = 'removed';\nexport const EVENT_ERROR = 'error';\nexport const EVENT_SET_STORAGE = 'set_storage';\n\nexport declare type TokenManagerErrorEventHandler = (error: TokenManagerError) => void;\nexport declare type TokenManagerEventHandler = (key: string, token: Token) => void;\nexport declare type TokenManagerRenewEventHandler = (key: string, token: Token, oldtoken: Token) => void;\nexport declare type TokenManagerSetStorageEventHandler = (storage: Tokens) => void;\n\nexport declare type TokenManagerAnyEventHandler = TokenManagerErrorEventHandler | TokenManagerRenewEventHandler | TokenManagerSetStorageEventHandler | TokenManagerEventHandler;\nexport declare type TokenManagerAnyEvent = typeof EVENT_RENEWED | typeof EVENT_ERROR | typeof EVENT_SET_STORAGE | typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED;\n\n// only add methods needed internally\nexport interface TokenManagerInterface {\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler: TokenManagerEventHandler, context?: object): void;\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, handler?: TokenManagerEventHandler): void;\n\n  clear(): void;\n  setExpireEventTimeout(key: string, token: Token): void;\n  clearExpireEventTimeout(key: string): void;\n  clearExpireEventTimeoutAll(): void;\n  emitAdded(key: string, token: Token): void;\n  emitError(error: Error): void;\n  emitRemoved(key: string, token: Token): void;\n  emitRenewed(key: string, token: Token, oldToken?: Token): void;\n  renew(key: string): Promise<Token | undefined>;\n  remove(key: string): void;\n  hasExpired(token: Token): boolean;\n  getExpireTime(token: Token): number;\n\n  get(key): Promise<Token | undefined>;\n  getSync(key): Token | undefined;\n  getTokens(): Promise<Tokens>;\n  getTokensSync(): Tokens;\n  setTokens({ accessToken, idToken, refreshToken }: Tokens, accessTokenCb?: AccessTokenCallback, idTokenCb?: IDTokenCallback, refreshTokenCb?: RefreshTokenCallback): void;\n  getStorageKeyByType(type: TokenType): string;\n  add(key: any, token: Token): void;\n  updateRefreshToken(token: RefreshToken);\n  removeRefreshToken(): void;\n  clearPendingRemoveTokens(): void;\n\n  getOptions(): TokenManagerOptions;\n  getStorage(): StorageProvider;\n\n  start();\n  stop();\n  isStarted(): boolean;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\nimport { removeNils, clone } from '../util';\nimport { AuthSdkError } from '../errors';\nimport { validateToken  } from '../oidc/util';\nimport { isLocalhost, isIE11OrLess } from '../features';\nimport SdkClock from '../clock';\nimport {\n  Token, \n  Tokens, \n  TokenType, \n  TokenManagerOptions, \n  isIDToken, \n  isAccessToken,\n  isRefreshToken,\n  TokenManagerErrorEventHandler,\n  TokenManagerSetStorageEventHandler,\n  TokenManagerRenewEventHandler,\n  TokenManagerEventHandler,\n  TokenManagerInterface,\n  RefreshToken,\n  AccessTokenCallback,\n  IDTokenCallback,\n  RefreshTokenCallback,\n  EVENT_RENEWED,\n  EVENT_ADDED,\n  EVENT_ERROR,\n  EVENT_EXPIRED,\n  EVENT_REMOVED,\n  EVENT_SET_STORAGE,\n  TokenManagerAnyEventHandler,\n  TokenManagerAnyEvent,\n  OktaAuthOAuthInterface\n} from './types';\nimport { REFRESH_TOKEN_STORAGE_KEY, TOKEN_STORAGE_NAME } from '../constants';\nimport { EventEmitter } from '../base/types';\nimport { StorageOptions, StorageProvider, StorageType } from '../storage/types';\n\nconst DEFAULT_OPTIONS = {\n  // TODO: remove in next major version - OKTA-473815\n  autoRenew: true,\n  autoRemove: true,\n  syncStorage: true,\n  // --- //\n  clearPendingRemoveTokens: true,\n  storage: undefined, // will use value from storageManager config\n  expireEarlySeconds: 30,\n  storageKey: TOKEN_STORAGE_NAME\n};\n\ninterface TokenManagerState {\n  expireTimeouts: Record<string, unknown>;\n  renewPromise: Promise<Token | undefined> | null;\n  started?: boolean;\n}\nfunction defaultState(): TokenManagerState {\n  return {\n    expireTimeouts: {},\n    renewPromise: null\n  };\n}\nexport class TokenManager implements TokenManagerInterface {\n  private sdk: OktaAuthOAuthInterface;\n  private clock: SdkClock;\n  private emitter: EventEmitter;\n  private storage: StorageProvider;\n  private state: TokenManagerState;\n  private options: TokenManagerOptions;\n\n  on(event: typeof EVENT_RENEWED, handler: TokenManagerRenewEventHandler, context?: object): void;\n  on(event: typeof EVENT_ERROR, handler: TokenManagerErrorEventHandler, context?: object): void;\n  on(event: typeof EVENT_SET_STORAGE, handler: TokenManagerSetStorageEventHandler, context?: object): void;\n  on(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler: TokenManagerEventHandler, context?: object): void;\n  on(event: TokenManagerAnyEvent, handler: TokenManagerAnyEventHandler, context?: object): void {\n    if (context) {\n      this.emitter.on(event, handler, context);\n    } else {\n      this.emitter.on(event, handler);\n    }\n  }\n\n  off(event: typeof EVENT_RENEWED, handler?: TokenManagerRenewEventHandler): void;\n  off(event: typeof EVENT_ERROR, handler?: TokenManagerErrorEventHandler): void;\n  off(event: typeof EVENT_SET_STORAGE, handler?: TokenManagerSetStorageEventHandler): void;\n  off(event: typeof EVENT_EXPIRED | typeof EVENT_ADDED | typeof EVENT_REMOVED, \n    handler?: TokenManagerEventHandler): void;\n  off(event: TokenManagerAnyEvent, handler?: TokenManagerAnyEventHandler): void {\n    if (handler) {\n      this.emitter.off(event, handler);\n    } else {\n      this.emitter.off(event);\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  constructor(sdk: OktaAuthOAuthInterface, options: TokenManagerOptions = {}) {\n    this.sdk = sdk;\n    this.emitter = (sdk as any).emitter;\n    if (!this.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before TokenManager');\n    }\n    \n    options = Object.assign({}, DEFAULT_OPTIONS, removeNils(options));\n    if (!isLocalhost()) {\n      options.expireEarlySeconds = DEFAULT_OPTIONS.expireEarlySeconds;\n    }\n\n    this.options = options;\n\n    const storageOptions: StorageOptions = removeNils({\n      storageKey: options.storageKey,\n      secure: options.secure,\n    });\n    if (typeof options.storage === 'object') {\n      // A custom storage provider must implement getItem(key) and setItem(key, val)\n      storageOptions.storageProvider = options.storage;\n    } else if (options.storage) {\n      storageOptions.storageType = options.storage as StorageType;\n    }\n\n    this.storage = sdk.storageManager.getTokenStorage({...storageOptions, useSeparateCookies: true});\n    this.clock = SdkClock.create(/* sdk, options */);\n    this.state = defaultState();\n  }\n\n  start() {\n    if (this.options.clearPendingRemoveTokens) {\n      this.clearPendingRemoveTokens();\n    }\n    this.setExpireEventTimeoutAll();\n    this.state.started = true;\n  }\n  \n  stop() {\n    this.clearExpireEventTimeoutAll();\n    this.state.started = false;\n  }\n\n  isStarted() {\n    return !!this.state.started;\n  }\n\n  getOptions(): TokenManagerOptions {\n    return clone(this.options);\n  }\n  \n  getExpireTime(token) {\n    const expireEarlySeconds = this.options.expireEarlySeconds || 0;\n    var expireTime = token.expiresAt - expireEarlySeconds;\n    return expireTime;\n  }\n  \n  hasExpired(token) {\n    var expireTime = this.getExpireTime(token);\n    return expireTime <= this.clock.now();\n  }\n  \n  emitExpired(key, token) {\n    this.emitter.emit(EVENT_EXPIRED, key, token);\n  }\n  \n  emitRenewed(key, freshToken, oldToken) {\n    this.emitter.emit(EVENT_RENEWED, key, freshToken, oldToken);\n  }\n  \n  emitAdded(key, token) {\n    this.emitter.emit(EVENT_ADDED, key, token);\n  }\n  \n  emitRemoved(key, token?) {\n    this.emitter.emit(EVENT_REMOVED, key, token);\n  }\n  \n  emitError(error) {\n    this.emitter.emit(EVENT_ERROR, error);\n  }\n  \n  clearExpireEventTimeout(key) {\n    clearTimeout(this.state.expireTimeouts[key] as any);\n    delete this.state.expireTimeouts[key];\n  \n    // Remove the renew promise (if it exists)\n    this.state.renewPromise = null;\n  }\n  \n  clearExpireEventTimeoutAll() {\n    var expireTimeouts = this.state.expireTimeouts;\n    for (var key in expireTimeouts) {\n      if (!Object.prototype.hasOwnProperty.call(expireTimeouts, key)) {\n        continue;\n      }\n      this.clearExpireEventTimeout(key);\n    }\n  }\n  \n  setExpireEventTimeout(key, token) {\n    if (isRefreshToken(token)) {\n      return;\n    }\n\n    var expireTime = this.getExpireTime(token);\n    var expireEventWait = Math.max(expireTime - this.clock.now(), 0) * 1000;\n  \n    // Clear any existing timeout\n    this.clearExpireEventTimeout(key);\n  \n    var expireEventTimeout = setTimeout(() => {\n      this.emitExpired(key, token);\n    }, expireEventWait);\n  \n    // Add a new timeout\n    this.state.expireTimeouts[key] = expireEventTimeout;\n  }\n  \n  setExpireEventTimeoutAll() {\n    var tokenStorage = this.storage.getStorage();\n    for(var key in tokenStorage) {\n      if (!Object.prototype.hasOwnProperty.call(tokenStorage, key)) {\n        continue;\n      }\n      var token = tokenStorage[key];\n      this.setExpireEventTimeout(key, token);\n    }\n  }\n  \n  // reset timeouts to setup autoRenew for tokens from other document context (tabs)\n  resetExpireEventTimeoutAll() {\n    this.clearExpireEventTimeoutAll();\n    this.setExpireEventTimeoutAll();\n  }\n  \n  add(key, token: Token) {\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    this.emitAdded(key, token);\n    this.setExpireEventTimeout(key, token);\n  }\n  \n  getSync(key): Token | undefined {\n    var tokenStorage = this.storage.getStorage();\n    return tokenStorage[key];\n  }\n  \n  async get(key): Promise<Token | undefined> {\n    return this.getSync(key);\n  }\n  \n  getTokensSync(): Tokens {\n    const tokens = {} as Tokens;\n    const tokenStorage = this.storage.getStorage();\n    Object.keys(tokenStorage).forEach(key => {\n      const token = tokenStorage[key];\n      if (isAccessToken(token)) {\n        tokens.accessToken = token;\n      } else if (isIDToken(token)) {\n        tokens.idToken = token;\n      } else if (isRefreshToken(token)) { \n        tokens.refreshToken = token;\n      }\n    });\n    return tokens;\n  }\n  \n  async getTokens(): Promise<Tokens> {\n    return this.getTokensSync();\n  }\n\n  getStorageKeyByType(type: TokenType): string {\n    const tokenStorage = this.storage.getStorage();\n    const key = Object.keys(tokenStorage).filter(key => {\n      const token = tokenStorage[key];\n      return (isAccessToken(token) && type === 'accessToken') \n        || (isIDToken(token) && type === 'idToken')\n        || (isRefreshToken(token) && type === 'refreshToken');\n    })[0];\n    return key;\n  }\n\n  private getTokenType(token: Token): TokenType {\n    if (isAccessToken(token)) {\n      return 'accessToken';\n    }\n    if (isIDToken(token)) {\n      return 'idToken';\n    }\n    if(isRefreshToken(token)) {\n      return 'refreshToken';\n    }\n    throw new AuthSdkError('Unknown token type');\n  }\n\n  // for synchronization of LocalStorage cross tabs for IE11\n  private emitSetStorageEvent() {\n    if (isIE11OrLess()) {\n      const storage = this.storage.getStorage();\n      this.emitter.emit(EVENT_SET_STORAGE, storage);\n    }\n  }\n\n  // used in `SyncStorageService` for synchronization of LocalStorage cross tabs for IE11\n  public getStorage() {\n    return this.storage;\n  }\n\n  setTokens(\n    tokens: Tokens,\n    // TODO: callbacks can be removed in the next major version OKTA-407224\n    accessTokenCb?: AccessTokenCallback, \n    idTokenCb?: IDTokenCallback,\n    refreshTokenCb?: RefreshTokenCallback\n  ): void {\n    const handleTokenCallback = (key, token) => {\n      const type = this.getTokenType(token);\n      if (type === 'accessToken') {\n        accessTokenCb && accessTokenCb(key, token);\n      } else if (type === 'idToken') {\n        idTokenCb && idTokenCb(key, token);\n      } else if (type === 'refreshToken') {\n        refreshTokenCb && refreshTokenCb(key, token);\n      }\n    };\n    const handleAdded = (key, token) => {\n      this.emitAdded(key, token);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRenewed = (key, token, oldToken) => {\n      this.emitRenewed(key, token, oldToken);\n      this.clearExpireEventTimeout(key);\n      this.setExpireEventTimeout(key, token);\n      handleTokenCallback(key, token);\n    };\n    const handleRemoved = (key, token) => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, token);\n      handleTokenCallback(key, token);\n    };\n    \n    const types: TokenType[] = ['idToken', 'accessToken', 'refreshToken'];\n    const existingTokens = this.getTokensSync();\n\n    // valid tokens\n    types.forEach((type) => {\n      const token = tokens[type];\n      if (token) {\n        validateToken(token, type);\n      }\n    });\n  \n    // add token to storage\n    const storage = types.reduce((storage, type) => {\n      const token = tokens[type];\n      if (token) {\n        const storageKey = this.getStorageKeyByType(type) || type;\n        storage[storageKey] = token;\n      }\n      return storage;\n    }, {});\n    this.storage.setStorage(storage);\n    this.emitSetStorageEvent();\n\n    // emit event and start expiration timer\n    types.forEach(type => {\n      const newToken = tokens[type];\n      const existingToken = existingTokens[type];\n      const storageKey = this.getStorageKeyByType(type) || type;\n      if (newToken && existingToken) { // renew\n        // call handleRemoved first, since it clears timers\n        handleRemoved(storageKey, existingToken);\n        handleAdded(storageKey, newToken);\n        handleRenewed(storageKey, newToken, existingToken);\n      } else if (newToken) { // add\n        handleAdded(storageKey, newToken);\n      } else if (existingToken) { //remove\n        handleRemoved(storageKey, existingToken);\n      }\n    });\n  }\n  \n  remove(key) {\n    // Clear any listener for this token\n    this.clearExpireEventTimeout(key);\n  \n    var tokenStorage = this.storage.getStorage();\n    var removedToken = tokenStorage[key];\n    delete tokenStorage[key];\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  \n    this.emitRemoved(key, removedToken);\n  }\n  \n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  async renewToken(token) {\n    return this.sdk.token?.renew(token);\n  }\n  // TODO: this methods is redundant and can be removed in the next major version OKTA-407224\n  validateToken(token: Token) {\n    return validateToken(token);\n  }\n\n  // TODO: renew method should take no param, change in the next major version OKTA-407224\n  renew(key): Promise<Token | undefined> {\n    // Multiple callers may receive the same promise. They will all resolve or reject from the same request.\n    if (this.state.renewPromise) {\n      return this.state.renewPromise;\n    }\n  \n    try {\n      var token = this.getSync(key);\n      if (!token) {\n        throw new AuthSdkError('The tokenManager has no token for the key: ' + key);\n      }\n    } catch (err) {\n      this.emitError(err);\n      return Promise.reject(err);\n    }\n  \n    // Remove existing autoRenew timeout\n    this.clearExpireEventTimeout(key);\n  \n    // A refresh token means a replace instead of renewal\n    // Store the renew promise state, to avoid renewing again\n    const renewPromise = this.state.renewPromise = this.sdk.token.renewTokens()\n      .then(tokens => {\n        this.setTokens(tokens);\n\n        // resolve token based on the key\n        const tokenType = this.getTokenType(token!);\n        return tokens[tokenType];\n      })\n      .catch(err => {\n        // If renew fails, remove token from storage and emit error\n        this.remove(key);\n        err.tokenKey = key;\n        this.emitError(err);\n        throw err;\n      })\n      .finally(() => {\n        // Remove existing promise key\n        this.state.renewPromise = null;\n      });\n  \n    return renewPromise;\n  }\n  \n  clear() {\n    const tokens = this.getTokensSync();\n    this.clearExpireEventTimeoutAll();\n    this.storage.clearStorage();\n    this.emitSetStorageEvent();\n\n    Object.keys(tokens).forEach(key => {\n      this.emitRemoved(key, tokens[key]);\n    });\n  }\n\n  clearPendingRemoveTokens() {\n    const tokenStorage = this.storage.getStorage();\n    const removedTokens = {};\n    Object.keys(tokenStorage).forEach(key => {\n      if (tokenStorage[key].pendingRemove) {\n        removedTokens[key] = tokenStorage[key];\n        delete tokenStorage[key];\n      }\n    });\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n    Object.keys(removedTokens).forEach(key => {\n      this.clearExpireEventTimeout(key);\n      this.emitRemoved(key, removedTokens[key]);\n    });\n  }\n\n  updateRefreshToken(token: RefreshToken) {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n\n    // do not emit any event\n    var tokenStorage = this.storage.getStorage();\n    validateToken(token);\n    tokenStorage[key] = token;\n    this.storage.setStorage(tokenStorage);\n    this.emitSetStorageEvent();\n  }\n\n  removeRefreshToken () {\n    const key = this.getStorageKeyByType('refreshToken') || REFRESH_TOKEN_STORAGE_KEY;\n    this.remove(key);\n  }\n\n  addPendingRemoveFlags() {\n    const tokens = this.getTokensSync();\n    Object.keys(tokens).forEach(key => {\n      tokens[key].pendingRemove = true;\n    });\n    this.setTokens(tokens);\n  }\n  \n}\n", "/* eslint-disable @typescript-eslint/no-non-null-assertion */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport Cookies from 'js-cookie';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport {\n  StorageOptions,\n  CookieOptions,\n  SimpleStorage,\n  StorageType,\n  StorageUtil,\n} from '../storage/types';\nimport { warn } from '../util';\nimport { isIE11OrLess } from '../features';\n\nexport interface CookieStorage extends SimpleStorage {\n  setItem(key: string, value: any, expiresAt?: string | null): void; // can customize expiresAt\n  getItem(key?: string): any; // if no key is passed, all cookies are returned\n  removeItem(key: string); // remove a cookie\n}\n\nexport interface BrowserStorageUtil extends StorageUtil {\n  browserHasLocalStorage(): boolean;\n  browserHasSessionStorage(): boolean;\n  getStorageByType(storageType: StorageType, options: StorageOptions): SimpleStorage;\n  getLocalStorage(): Storage;\n  getSessionStorage(): Storage;\n  getInMemoryStorage(): SimpleStorage;\n  getCookieStorage(options?: StorageOptions): CookieStorage;\n  testStorage(storage: any): boolean;\n  storage: Cookies;\n  inMemoryStore: Record<string, unknown>;\n}\n\n// Building this as an object allows us to mock the functions in our tests\nvar storageUtil: BrowserStorageUtil = {\n\n  // IE11 bug that Microsoft doesn't plan to fix\n  // https://connect.microsoft.com/IE/Feedback/Details/1496040\n  browserHasLocalStorage: function() {\n    try {\n      var storage = this.getLocalStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  browserHasSessionStorage: function() {\n    try {\n      var storage = this.getSessionStorage();\n      return this.testStorage(storage);\n    } catch (e) {\n      return false;\n    }\n  },\n\n  testStorageType: function(storageType: StorageType): boolean {\n    var supported = false;\n    switch (storageType) {\n      case 'sessionStorage':\n        supported = this.browserHasSessionStorage();\n        break;\n      case 'localStorage':\n        supported = this.browserHasLocalStorage();\n        break;\n      case 'cookie':\n      case 'memory':\n        supported = true;\n        break;\n      default:\n        supported = false;\n        break;\n    }\n    return supported;\n  },\n\n  getStorageByType: function(storageType: StorageType, options?: StorageOptions): SimpleStorage {\n    let storageProvider;\n    switch (storageType) {\n      case 'sessionStorage':\n        storageProvider = this.getSessionStorage();\n        break;\n      case 'localStorage':\n        storageProvider = this.getLocalStorage();\n        break;\n      case 'cookie':\n        storageProvider = this.getCookieStorage(options);\n        break;\n      case 'memory':\n        storageProvider = this.getInMemoryStorage();\n        break;\n      default:\n        throw new AuthSdkError(`Unrecognized storage option: ${storageType}`);\n        break;\n    }\n    return storageProvider;\n  },\n\n  findStorageType: function(types: StorageType[]) {\n    let curType;\n    let nextType;\n    \n    types = types.slice(); // copy array\n    curType = types.shift();\n    nextType = types.length ? types[0] : null;\n    if (!nextType) {\n      return curType;\n    }\n\n    if (this.testStorageType(curType)) {\n      return curType;\n    }\n\n    // preferred type was unsupported.\n    warn(`This browser doesn't support ${curType}. Switching to ${nextType}.`);\n\n    // fallback to the next type. this is a recursive call\n    return this.findStorageType(types);\n  },\n\n  getLocalStorage: function() {\n    // Workaound for synchronization issue of LocalStorage cross tabs in IE11\n    if (isIE11OrLess() && !window.onstorage) {\n      window.onstorage = function() {};\n    }\n    \n    return localStorage;\n  },\n\n  getSessionStorage: function() {\n    return sessionStorage;\n  },\n\n  // Provides webStorage-like interface for cookies\n  getCookieStorage: function(options): CookieStorage {\n    const secure = options!.secure;\n    const sameSite = options!.sameSite;\n    const sessionCookie = options!.sessionCookie;\n    if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n      throw new AuthSdkError('getCookieStorage: \"secure\" and \"sameSite\" options must be provided');\n    }\n    const storage: CookieStorage = {\n      getItem: this.storage.get,\n      setItem: (key, value, expiresAt = '2200-01-01T00:00:00.000Z') => {\n        // By defauilt, cookie shouldn't expire\n        expiresAt = (sessionCookie ? null : expiresAt) as string;\n        this.storage.set(key, value, expiresAt, {\n          secure: secure, \n          sameSite: sameSite,\n        });\n      },\n      removeItem: (key) => {\n        this.storage.delete(key);\n      },\n    };\n\n    if (!options!.useSeparateCookies) {\n      return storage;\n    }\n\n    // Tokens are stored separately because cookies have size limits.\n    // Can only be used when storing an object value. Object properties will be saved to separate cookies.\n    // Each property of the object must also be an object.\n    return {\n      getItem: function(key) {\n        var data = storage.getItem(); // read all cookies\n        var value = {};\n        Object.keys(data).forEach(k => {\n          if (k.indexOf(key!) === 0) { // filter out unrelated cookies\n            value[k.replace(`${key}_`, '')] = JSON.parse(data[k]); // populate with cookie data\n          }\n        });\n        return JSON.stringify(value);\n      },\n      setItem: function(key, value) {\n        var existingValues = JSON.parse(this.getItem(key));\n        value = JSON.parse(value);\n        // Set key-value pairs from input to cookies\n        Object.keys(value).forEach(k => {\n          var storageKey = key + '_' + k;\n          var valueToStore = JSON.stringify(value[k]);\n          storage.setItem(storageKey, valueToStore);\n          delete existingValues[k];\n        });\n        // Delete unmatched keys from existing cookies\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n      removeItem: function(key) {\n        var existingValues = JSON.parse(this.getItem(key));\n        Object.keys(existingValues).forEach(k => {\n          storage.removeItem(key + '_' + k);\n        });\n      },\n    };\n  },\n\n  // Provides an in-memory solution\n  inMemoryStore: {}, // override this for a unique memory store per instance\n  getInMemoryStorage: function() {\n    return {\n      getItem: (key) => {\n        return this.inMemoryStore[key];\n      },\n      setItem: (key, value) => {\n        this.inMemoryStore[key] = value;\n      },\n    };\n  },\n\n  testStorage: function(storage) {\n    var key = 'okta-test-storage';\n    try {\n      storage.setItem(key, key);\n      storage.removeItem(key);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  storage: {\n    set: function(name: string, value: string, expiresAt: string, options: CookieOptions): string {\n      const { sameSite, secure } = options;\n      if (typeof secure === 'undefined' || typeof sameSite === 'undefined') {\n        throw new AuthSdkError('storage.set: \"secure\" and \"sameSite\" options must be provided');\n      }\n      var cookieOptions: CookieOptions = {\n        path: options.path || '/',\n        secure,\n        sameSite\n      };\n\n      // eslint-disable-next-line no-extra-boolean-cast\n      if (!!(Date.parse(expiresAt))) {\n        // Expires value can be converted to a Date object.\n        //\n        // If the 'expiresAt' value is not provided, or the value cannot be\n        // parsed as a Date object, the cookie will set as a session cookie.\n        cookieOptions.expires = new Date(expiresAt);\n      }\n\n      Cookies.set(name, value, cookieOptions);\n      return this.get(name);\n    },\n\n    get: function(name?: string): string {\n      // return all cookies when no args is provided\n      if (!arguments.length) {\n        return Cookies.get();\n      }\n      return Cookies.get(name);\n    },\n\n    delete: function(name: string): string {\n      return Cookies.remove(name, { path: '/' });\n    }\n  }\n};\n\nexport default storageUtil;\n", "import { REFERRER_PATH_STORAGE_KEY } from '../../constants';\nimport browserStorage from '../../browser/browserStorage';\nimport { OktaAuthStorageInterface } from '../../storage';\nimport { OktaAuthConstructor } from '../../base';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthOptions,\n  OriginalUriApi,\n  PKCETransactionMeta,\n} from '../types';\n\nexport function provideOriginalUri\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthStorageInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthStorageInterface<S, O>> \n>\n(BaseClass: TBase) {\n  return class WithOriginalUri extends BaseClass implements OriginalUriApi {\n    setOriginalUri(originalUri: string, state?: string): void {\n      // always store in session storage\n      const sessionStorage = browserStorage.getSessionStorage();\n      sessionStorage.setItem(REFERRER_PATH_STORAGE_KEY, originalUri);\n  \n      // to support multi-tab flows, set a state in constructor or pass as param\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.setItem(state, originalUri);\n      }\n    }\n  \n    getOriginalUri(state?: string): string | undefined {\n      // Prefer shared storage (if state is available)\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        const originalUri = sharedStorage.getItem(state);\n        if (originalUri) {\n          return originalUri;\n        }\n      }\n  \n      // Try to load from session storage\n      const storage = browserStorage.getSessionStorage();\n      return storage ? storage.getItem(REFERRER_PATH_STORAGE_KEY) || undefined : undefined;\n    }\n  \n    removeOriginalUri(state?: string): void {\n      // Remove from sessionStorage\n      const storage = browserStorage.getSessionStorage();\n      storage.removeItem(REFERRER_PATH_STORAGE_KEY);\n  \n      // Also remove from shared storage\n      state = state || this.options.state;\n      if (state) {\n        const sharedStorage = this.storageManager.getOriginalUriStorage();\n        sharedStorage.removeItem && sharedStorage.removeItem(state);\n      }\n    }\n  };\n}\n", "import { httpRequest, RequestOptions } from '../../http';\nimport { OktaAuthConstructor } from '../../base/types';\nimport { \n  PromiseQueue,\n} from '../../util';\nimport { CryptoAPI } from '../../crypto/types';\nimport * as crypto from '../../crypto';\nimport {\n  AccessToken,\n  CustomUserClaims,\n  IDToken,\n  IsAuthenticatedOptions,\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PkceAPI,\n  PKCETransactionMeta,\n  RefreshToken,\n  SigninWithRedirectOptions,\n  SignoutOptions,\n  SignoutRedirectUrlOptions,\n  TokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n  UserClaims,\n  Endpoints,\n} from '../types';\nimport PKCE from '../util/pkce';\nimport { createEndpoints, createTokenAPI } from '../factory/api';\nimport { TokenManager } from '../TokenManager';\nimport { getOAuthUrls, isLoginRedirect, hasResponseType } from '../util';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nimport { provideOriginalUri } from './node';\nexport function mixinOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const WithOriginalUri = provideOriginalUri(Base);\n  return class OktaAuthOAuth extends WithOriginalUri\n  implements OktaAuthOAuthInterface<M, S, O, TM>\n  {\n    static crypto: CryptoAPI = crypto;\n    token: TokenAPI;\n    tokenManager: TokenManager;\n    transactionManager: TM;\n    pkce: PkceAPI;\n    endpoints: Endpoints;\n\n    _pending: { handleLogin: boolean };\n    _tokenQueue: PromiseQueue;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.pkce = {\n        DEFAULT_CODE_CHALLENGE_METHOD: PKCE.DEFAULT_CODE_CHALLENGE_METHOD,\n        generateVerifier: PKCE.generateVerifier,\n        computeChallenge: PKCE.computeChallenge\n      };\n  \n      this._pending = { handleLogin: false };\n\n      this._tokenQueue = new PromiseQueue();\n\n      this.token = createTokenAPI(this, this._tokenQueue);\n\n      // TokenManager\n      this.tokenManager = new TokenManager(this, this.options.tokenManager);\n\n      this.endpoints = createEndpoints(this);\n    }\n\n    // inherited from subclass\n    clearStorage(): void {\n      super.clearStorage();\n      \n      // Clear all local tokens\n      this.tokenManager.clear();\n    }\n\n    // Returns true if both accessToken and idToken are not expired\n    // If `autoRenew` option is set, will attempt to renew expired tokens before returning.\n    // eslint-disable-next-line complexity\n    async isAuthenticated(options: IsAuthenticatedOptions = {}): Promise<boolean> {\n      // TODO: remove dependency on tokenManager options in next major version - OKTA-473815\n      const { autoRenew, autoRemove } = this.tokenManager.getOptions();\n\n      const shouldRenew = options.onExpiredToken ? options.onExpiredToken === 'renew' : autoRenew;\n      const shouldRemove = options.onExpiredToken ? options.onExpiredToken === 'remove' : autoRemove;\n\n      let { accessToken } = this.tokenManager.getTokensSync();\n      if (accessToken && this.tokenManager.hasExpired(accessToken)) {\n        accessToken = undefined;\n        if (shouldRenew) {\n          try {\n            accessToken = await this.tokenManager.renew('accessToken') as AccessToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('accessToken');\n        }\n      }\n\n      let { idToken } = this.tokenManager.getTokensSync();\n      if (idToken && this.tokenManager.hasExpired(idToken)) {\n        idToken = undefined;\n        if (shouldRenew) {\n          try {\n            idToken = await this.tokenManager.renew('idToken') as IDToken;\n          } catch {\n            // Renew errors will emit an \"error\" event \n          }\n        } else if (shouldRemove) {\n          this.tokenManager.remove('idToken');\n        }\n      }\n\n      return !!(accessToken && idToken);\n    }\n\n\n    async signInWithRedirect(opts: SigninWithRedirectOptions = {}) {\n      const { originalUri, ...additionalParams } = opts;\n      if(this._pending.handleLogin) { \n        // Don't trigger second round\n        return;\n      }\n\n      this._pending.handleLogin = true;\n      try {\n        // Trigger default signIn redirect flow\n        if (originalUri) {\n          this.setOriginalUri(originalUri);\n        }\n        const params = Object.assign({\n          // TODO: remove this line when default scopes are changed OKTA-343294\n          scopes: this.options.scopes || ['openid', 'email', 'profile']\n        }, additionalParams);\n        await this.token.getWithRedirect(params);\n      } finally {\n        this._pending.handleLogin = false;\n      }\n    }\n\n    async getUser<T extends CustomUserClaims = CustomUserClaims>(): Promise<UserClaims<T>> {\n      const { idToken, accessToken } = this.tokenManager.getTokensSync();\n      return this.token.getUserInfo(accessToken, idToken);\n    }\n  \n    getIdToken(): string | undefined {\n      const { idToken } = this.tokenManager.getTokensSync();\n      return idToken ? idToken.idToken : undefined;\n    }\n  \n    getAccessToken(): string | undefined {\n      const { accessToken } = this.tokenManager.getTokensSync();\n      return accessToken ? accessToken.accessToken : undefined;\n    }\n  \n    getRefreshToken(): string | undefined {\n      const { refreshToken } = this.tokenManager.getTokensSync();\n      return refreshToken ? refreshToken.refreshToken : undefined;\n    }\n  \n    /**\n     * Store parsed tokens from redirect url\n     */\n    async storeTokensFromRedirect(): Promise<void> {\n      const { tokens, responseType } = await this.token.parseFromUrl();\n      if (responseType !== 'none') {\n        this.tokenManager.setTokens(tokens);\n      }\n    }\n  \n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n  \n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n    // Escape hatch method to make arbitrary OKTA API call\n    async invokeApiMethod(options: RequestOptions): Promise<unknown> {\n      if (!options.accessToken) {\n        const accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n        options.accessToken = accessToken?.accessToken;\n      }\n      return httpRequest(this, options);\n    }\n    \n    // Revokes the access token for the application session\n    async revokeAccessToken(accessToken?: AccessToken): Promise<unknown> {\n      if (!accessToken) {\n        accessToken = (await this.tokenManager.getTokens()).accessToken as AccessToken;\n        const accessTokenKey = this.tokenManager.getStorageKeyByType('accessToken');\n        this.tokenManager.remove(accessTokenKey);\n      }\n      // Access token may have been removed. In this case, we will silently succeed.\n      if (!accessToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(accessToken);\n    }\n\n    // Revokes the refresh token for the application session\n    async revokeRefreshToken(refreshToken?: RefreshToken): Promise<unknown> {\n      if (!refreshToken) {\n        refreshToken = (await this.tokenManager.getTokens()).refreshToken as RefreshToken;\n        const refreshTokenKey = this.tokenManager.getStorageKeyByType('refreshToken');\n        this.tokenManager.remove(refreshTokenKey);\n      }\n      // Refresh token may have been removed. In this case, we will silently succeed.\n      if (!refreshToken) {\n        return Promise.resolve(null);\n      }\n      return this.token.revoke(refreshToken);\n    }\n\n    getSignOutRedirectUrl(options: SignoutRedirectUrlOptions = {}) {\n      let {\n        idToken,\n        postLogoutRedirectUri,\n        state,\n      } = options;\n      if (!idToken) {\n        idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n      if (!idToken) {\n        return '';\n      }\n      if (postLogoutRedirectUri === undefined) {\n        postLogoutRedirectUri = this.options.postLogoutRedirectUri;\n      }\n\n      const logoutUrl = getOAuthUrls(this).logoutUrl;\n      const idTokenHint = idToken.idToken; // a string\n      let logoutUri = logoutUrl + '?id_token_hint=' + encodeURIComponent(idTokenHint);\n      if (postLogoutRedirectUri) {\n        logoutUri += '&post_logout_redirect_uri=' + encodeURIComponent(postLogoutRedirectUri);\n      } \n      // State allows option parameters to be passed to logout redirect uri\n      if (state) {\n        logoutUri += '&state=' + encodeURIComponent(state);\n      }\n\n      return logoutUri;\n    }\n\n    // Revokes refreshToken or accessToken, clears all local tokens, then redirects to Okta to end the SSO session.\n    // eslint-disable-next-line complexity, max-statements\n    async signOut(options?: SignoutOptions): Promise<boolean> {\n      options = Object.assign({}, options);\n    \n      // postLogoutRedirectUri must be whitelisted in Okta Admin UI\n      const defaultUri = window.location.origin;\n      const currentUri = window.location.href;\n      // Fix for issue/1410 - allow for no postLogoutRedirectUri to be passed, resulting in /logout default behavior\n      //    \"If no Okta session exists, this endpoint has no effect and the browser is redirected immediately to the\n      //    Okta sign-in page or the post_logout_redirect_uri (if specified).\"\n      // - https://developer.okta.com/docs/reference/api/oidc/#logout\n      const postLogoutRedirectUri = options.postLogoutRedirectUri === null ? null :\n        (options.postLogoutRedirectUri\n        || this.options.postLogoutRedirectUri\n        || defaultUri);\n      const state = options?.state;\n      \n    \n      let accessToken = options.accessToken;\n      let refreshToken = options.refreshToken;\n      const revokeAccessToken = options.revokeAccessToken !== false;\n      const revokeRefreshToken = options.revokeRefreshToken !== false;\n    \n      if (revokeRefreshToken && typeof refreshToken === 'undefined') {\n        refreshToken = this.tokenManager.getTokensSync().refreshToken as RefreshToken;\n      }\n\n      if (revokeAccessToken && typeof accessToken === 'undefined') {\n        accessToken = this.tokenManager.getTokensSync().accessToken as AccessToken;\n      }\n    \n      if (!options.idToken) {\n        options.idToken = this.tokenManager.getTokensSync().idToken as IDToken;\n      }\n\n      if (revokeRefreshToken && refreshToken) {\n        await this.revokeRefreshToken(refreshToken);\n      }\n\n      if (revokeAccessToken && accessToken) {\n        await this.revokeAccessToken(accessToken);\n      }\n\n      const logoutUri = this.getSignOutRedirectUrl({ ...options, postLogoutRedirectUri });\n      // No logoutUri? This can happen if the storage was cleared.\n      // Fallback to XHR signOut, then simulate a redirect to the post logout uri\n      if (!logoutUri) {\n        // local tokens are cleared once session is closed\n        const sessionClosed = await this.closeSession();   // can throw if the user cannot be signed out\n        const redirectUri = new URL(postLogoutRedirectUri || defaultUri); // during fallback, redirectUri cannot be null\n        if (state) {\n          redirectUri.searchParams.append('state', state);\n        }\n        if (postLogoutRedirectUri === currentUri) {\n          // window.location.reload(); // force a hard reload if URI is not changing\n          window.location.href = redirectUri.href;\n        } else {\n          window.location.assign(redirectUri.href);\n        }\n        return sessionClosed;\n      } else {\n        if (options.clearTokensBeforeRedirect) {\n          // Clear all local tokens\n          this.tokenManager.clear();\n        } else {\n          this.tokenManager.addPendingRemoveFlags();\n        }\n        // Flow ends with logout redirect\n        window.location.assign(logoutUri);\n        return true;\n      }\n    }\n\n  };\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n \n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore \n// Do not use this type in code, so it won't be emitted in the declaration output\nimport PCancelable from 'p-cancelable';\nimport { AuthSdkError } from '../errors';\nimport {\n  EVENT_ADDED,\n  EVENT_REMOVED,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface\n} from '../oidc';\nimport {\n  AuthState,\n  AuthStateLogOptions,\n  OktaAuthCoreOptions,\n} from './types';\nimport { PromiseQueue, getConsole } from '../util';\n\nexport const INITIAL_AUTH_STATE = null;\nconst DEFAULT_PENDING = {\n  updateAuthStatePromise: null,\n  canceledTimes: 0\n};\nconst EVENT_AUTH_STATE_CHANGE = 'authStateChange';\nconst MAX_PROMISE_CANCEL_TIMES = 10;\n\n// only compare first level of authState\nconst isSameAuthState = (prevState: AuthState | null, state: AuthState) => {\n  // initial state is null\n  if (!prevState) {\n    return false;\n  }\n\n  return prevState.isAuthenticated === state.isAuthenticated \n    && JSON.stringify(prevState.idToken) === JSON.stringify(state.idToken)\n    && JSON.stringify(prevState.accessToken) === JSON.stringify(state.accessToken)\n    && prevState.error === state.error;\n};\n\n\nexport class AuthStateManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\n{\n  _sdk: OktaAuthOAuthInterface<M, S, O>;\n  _pending: { \n    updateAuthStatePromise: any;\n    canceledTimes: number; \n  };\n  _authState: AuthState | null;\n  _prevAuthState: AuthState | null;\n  _logOptions: AuthStateLogOptions;\n  _transformQueue: PromiseQueue;\n\n  constructor(sdk: OktaAuthOAuthInterface<M, S, O>) {\n    if (!sdk.emitter) {\n      throw new AuthSdkError('Emitter should be initialized before AuthStateManager');\n    }\n\n    this._sdk = sdk;\n    this._pending = { ...DEFAULT_PENDING };\n    this._authState = INITIAL_AUTH_STATE;\n    this._logOptions = {};\n    this._prevAuthState = null;\n    this._transformQueue = new PromiseQueue({\n      quiet: true\n    });\n\n    // Listen on tokenManager events to start updateState process\n    // \"added\" event is emitted in both add and renew process\n    // Only listen on \"added\" event to update auth state\n    sdk.tokenManager.on(EVENT_ADDED, (key, token) => {\n      this._setLogOptions({ event: EVENT_ADDED, key, token });\n      this.updateAuthState();\n    });\n    sdk.tokenManager.on(EVENT_REMOVED, (key, token) => {\n      this._setLogOptions({ event: EVENT_REMOVED, key, token });\n      this.updateAuthState();\n    });\n  }\n\n  _setLogOptions(options) {\n    this._logOptions = options;\n  }\n\n  getAuthState(): AuthState | null {\n    return this._authState;\n  }\n\n  getPreviousAuthState(): AuthState | null {\n    return this._prevAuthState;\n  }\n\n  async updateAuthState(): Promise<AuthState> {\n    const { transformAuthState, devMode } = this._sdk.options;\n\n    const log = (status) => {\n      const { event, key, token } = this._logOptions;\n      getConsole().group(`OKTA-AUTH-JS:updateAuthState: Event:${event} Status:${status}`);\n      getConsole().log(key, token);\n      getConsole().log('Current authState', this._authState);\n      getConsole().groupEnd();\n      \n      // clear log options after logging\n      this._logOptions = {};\n    };\n\n    const emitAuthStateChange = (authState) => {\n      if (isSameAuthState(this._authState, authState)) {\n        devMode && log('unchanged'); \n        return;\n      }\n      this._prevAuthState = this._authState;\n      this._authState = authState;\n      // emit new authState object\n      this._sdk.emitter.emit(EVENT_AUTH_STATE_CHANGE, { ...authState });\n      devMode && log('emitted');\n    };\n\n    const finalPromise = (origPromise) => {       \n      return this._pending.updateAuthStatePromise.then(() => {\n        const curPromise = this._pending.updateAuthStatePromise;\n        if (curPromise && curPromise !== origPromise) {\n          return finalPromise(curPromise);\n        }\n        return this.getAuthState();\n      });\n    };\n\n    if (this._pending.updateAuthStatePromise) {\n      if (this._pending.canceledTimes >= MAX_PROMISE_CANCEL_TIMES) {\n        // stop canceling then starting a new promise\n        // let existing promise finish to prevent running into loops\n        devMode && log('terminated');\n        return finalPromise(this._pending.updateAuthStatePromise);\n      } else {\n        this._pending.updateAuthStatePromise.cancel();\n      }\n    }\n\n    /* eslint-disable complexity */\n    const cancelablePromise = new PCancelable((resolve, _, onCancel) => {\n      onCancel.shouldReject = false;\n      onCancel(() => {\n        this._pending.updateAuthStatePromise = null;\n        this._pending.canceledTimes = this._pending.canceledTimes + 1;\n        devMode && log('canceled');\n      });\n\n      const emitAndResolve = (authState) => {\n        if (cancelablePromise.isCanceled) {\n          resolve();\n          return;\n        }\n        // emit event and resolve promise \n        emitAuthStateChange(authState);\n        resolve();\n\n        // clear pending states after resolve\n        this._pending = { ...DEFAULT_PENDING };\n      };\n\n      this._sdk.isAuthenticated()\n        .then(() => {\n          if (cancelablePromise.isCanceled) {\n            resolve();\n            return;\n          }\n\n          const { accessToken, idToken, refreshToken } = this._sdk.tokenManager.getTokensSync();\n          const authState = {\n            accessToken,\n            idToken,\n            refreshToken,\n            isAuthenticated: !!(accessToken && idToken)\n          };\n\n          // Enqueue transformAuthState so that it does not run concurrently\n          const promise: Promise<AuthState> = transformAuthState\n            ? this._transformQueue.push(transformAuthState, null, this._sdk, authState) as Promise<AuthState>\n            : Promise.resolve(authState);\n\n          promise\n            .then(authState => emitAndResolve(authState))\n            .catch(error => emitAndResolve({\n              accessToken, \n              idToken, \n              refreshToken,\n              isAuthenticated: false, \n              error\n            }));\n        });\n    });\n    /* eslint-enable complexity */\n    this._pending.updateAuthStatePromise = cancelablePromise;\n\n    return finalPromise(cancelablePromise);\n  }\n\n  subscribe(handler): void {\n    this._sdk.emitter.on(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n\n  unsubscribe(handler?): void {\n    this._sdk.emitter.off(EVENT_AUTH_STATE_CHANGE, handler);\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport { EVENT_EXPIRED, TokenManagerInterface, isRefreshToken } from '../oidc/types';\nimport { isBrowser } from '../features';\n\nexport class AutoRenewService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private renewTimeQueue: Array<number>;\n  private started = false;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.renewTimeQueue = [];\n    this.onTokenExpiredHandler = this.onTokenExpiredHandler.bind(this);\n  }\n  \n  private shouldThrottleRenew(): boolean {\n    let res = false;\n    this.renewTimeQueue.push(Date.now());\n    if (this.renewTimeQueue.length >= 10) {\n      // get and remove first item from queue\n      const firstTime = this.renewTimeQueue.shift() as number;\n      const lastTime = this.renewTimeQueue[this.renewTimeQueue.length - 1];\n      res = (lastTime - firstTime) < 30 * 1000;\n    }\n    return res;\n  }\n\n  requiresLeadership() {\n    // If tokens sync storage is enabled, handle tokens expiration only in 1 leader tab\n    return !!this.options.syncStorage && isBrowser();\n  }\n\n  private processExpiredTokens() {\n    const tokenStorage = this.tokenManager.getStorage();\n    const tokens = tokenStorage.getStorage();\n    Object.keys(tokens).forEach(key => {\n      const token = tokens[key];\n      if (!isRefreshToken(token) && this.tokenManager.hasExpired(token)) {\n        this.onTokenExpiredHandler(key);\n      }\n    });\n  }\n\n  private onTokenExpiredHandler(key: string) {\n    if (this.options.autoRenew) {\n      if (this.shouldThrottleRenew()) {\n        const error = new AuthSdkError('Too many token renew requests');\n        this.tokenManager.emitError(error);\n      } else {\n        this.tokenManager.renew(key).catch(() => {}); // Renew errors will emit an \"error\" event \n      }\n    } else if (this.options.autoRemove) {\n      this.tokenManager.remove(key);\n    }\n  }\n\n  canStart() {\n    return (!!this.options.autoRenew || !!this.options.autoRemove) && !this.started;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      this.tokenManager.on(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      if (this.tokenManager.isStarted()) {\n        // If token manager has been already started, we could miss token expire events,\n        //  so need to process expired tokens manually.\n        this.processExpiredTokens();\n      }\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_EXPIRED, this.onTokenExpiredHandler);\n      this.renewTimeQueue = [];\n      this.started = false;\n    }\n  }\n\n  isStarted() {\n    return this.started;\n  }\n}\n", "/**\n * returns true if the given object is a promise\n */\nexport function isPromise(obj) {\n  return obj && typeof obj.then === 'function';\n}\nexport var PROMISE_RESOLVED_FALSE = Promise.resolve(false);\nexport var PROMISE_RESOLVED_TRUE = Promise.resolve(true);\nexport var PROMISE_RESOLVED_VOID = Promise.resolve();\nexport function sleep(time, resolveWith) {\n  if (!time) time = 0;\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      return res(resolveWith);\n    }, time);\n  });\n}\nexport function randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * https://stackoverflow.com/a/8084248\n */\nexport function randomToken() {\n  return Math.random().toString(36).substring(2);\n}\nvar lastMs = 0;\nvar additional = 0;\n\n/**\n * returns the current time in micro-seconds,\n * WARNING: This is a pseudo-function\n * Performance.now is not reliable in webworkers, so we just make sure to never return the same time.\n * This is enough in browsers, and this function will not be used in nodejs.\n * The main reason for this hack is to ensure that BroadcastChannel behaves equal to production when it is used in fast-running unit tests.\n */\nexport function microSeconds() {\n  var ms = new Date().getTime();\n  if (ms === lastMs) {\n    additional++;\n    return ms * 1000 + additional;\n  } else {\n    lastMs = ms;\n    additional = 0;\n    return ms * 1000;\n  }\n}\n\n/**\n * Check if WebLock API is supported.\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport function supportsWebLockAPI() {\n  if (typeof navigator !== 'undefined' && typeof navigator.locks !== 'undefined' && typeof navigator.locks.request === 'function') {\n    return true;\n  } else {\n    return false;\n  }\n}", "import { microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'native';\nexport function create(channelName) {\n  var state = {\n    messagesCallback: null,\n    bc: new BroadcastChannel(channelName),\n    subFns: [] // subscriberFunctions\n  };\n\n  state.bc.onmessage = function (msg) {\n    if (state.messagesCallback) {\n      state.messagesCallback(msg.data);\n    }\n  };\n  return state;\n}\nexport function close(channelState) {\n  channelState.bc.close();\n  channelState.subFns = [];\n}\nexport function postMessage(channelState, messageJson) {\n  try {\n    channelState.bc.postMessage(messageJson, false);\n    return PROMISE_RESOLVED_VOID;\n  } catch (err) {\n    return Promise.reject(err);\n  }\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  if ((typeof window !== 'undefined' || typeof self !== 'undefined') && typeof BroadcastChannel === 'function') {\n    if (BroadcastChannel._pubkey) {\n      throw new Error('BroadcastChannel: Do not overwrite window.BroadcastChannel with this module, this is not a polyfill');\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\nexport function averageResponseTime() {\n  return 150;\n}\nexport var NativeMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "\n/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nexport class ObliviousSet<T = any> {\n    public readonly map = new Map();\n\n    /**\n     * Creating calls to setTimeout() is expensive,\n     * so we only do that if there is not timeout already open.\n     */\n    public _to: boolean = false;\n    constructor(\n        public readonly ttl: number\n    ) { }\n\n    has(value: T): boolean {\n        return this.map.has(value);\n    }\n\n    add(value: T): void {\n        this.map.set(value, now());\n\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(() => {\n                this._to = false;\n                removeTooOldValues(this);\n            }, 0);\n        }\n    }\n\n    clear() {\n        this.map.clear();\n    }\n}\n\n\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nexport function removeTooOldValues(\n    obliviousSet: ObliviousSet\n) {\n    const olderThen = now() - obliviousSet.ttl;\n    const iterator = obliviousSet.map[Symbol.iterator]();\n\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n\n        const next = iterator.next().value;\n\n        if (!next) {\n            return; // no more elements\n        }\n        const value = next[0];\n        const time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        } else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\n\nexport function now(): number {\n    return new Date().getTime();\n}\n\n\n", "export function fillOptionsWithDefaults() {\n  var originalOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var options = JSON.parse(JSON.stringify(originalOptions));\n\n  // main\n  if (typeof options.webWorkerSupport === 'undefined') options.webWorkerSupport = true;\n\n  // indexed-db\n  if (!options.idb) options.idb = {};\n  //  after this time the messages get deleted\n  if (!options.idb.ttl) options.idb.ttl = 1000 * 45;\n  if (!options.idb.fallbackInterval) options.idb.fallbackInterval = 150;\n  //  handles abrupt db onclose events.\n  if (originalOptions.idb && typeof originalOptions.idb.onclose === 'function') options.idb.onclose = originalOptions.idb.onclose;\n\n  // localstorage\n  if (!options.localstorage) options.localstorage = {};\n  if (!options.localstorage.removeTimeout) options.localstorage.removeTimeout = 1000 * 60;\n\n  // custom methods\n  if (originalOptions.methods) options.methods = originalOptions.methods;\n\n  // node\n  if (!options.node) options.node = {};\n  if (!options.node.ttl) options.node.ttl = 1000 * 60 * 2; // 2 minutes;\n  /**\n   * On linux use 'ulimit -Hn' to get the limit of open files.\n   * On ubuntu this was 4096 for me, so we use half of that as maxParallelWrites default.\n   */\n  if (!options.node.maxParallelWrites) options.node.maxParallelWrites = 2048;\n  if (typeof options.node.useFastPath === 'undefined') options.node.useFastPath = true;\n  return options;\n}", "/**\n * this method uses indexeddb to store the messages\n * There is currently no observerAPI for idb\n * @link https://github.com/w3c/IndexedDB/issues/51\n * \n * When working on this, ensure to use these performance optimizations:\n * @link https://rxdb.info/slow-indexeddb.html\n */\n\nimport { sleep, randomInt, randomToken, microSeconds as micro, PROMISE_RESOLVED_VOID } from '../util.js';\nexport var microSeconds = micro;\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nvar DB_PREFIX = 'pubkey.broadcast-channel-0-';\nvar OBJECT_STORE_ID = 'messages';\n\n/**\n * Use relaxed durability for faster performance on all transactions.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport var TRANSACTION_SETTINGS = {\n  durability: 'relaxed'\n};\nexport var type = 'idb';\nexport function getIdb() {\n  if (typeof indexedDB !== 'undefined') return indexedDB;\n  if (typeof window !== 'undefined') {\n    if (typeof window.mozIndexedDB !== 'undefined') return window.mozIndexedDB;\n    if (typeof window.webkitIndexedDB !== 'undefined') return window.webkitIndexedDB;\n    if (typeof window.msIndexedDB !== 'undefined') return window.msIndexedDB;\n  }\n  return false;\n}\n\n/**\n * If possible, we should explicitly commit IndexedDB transactions\n * for better performance.\n * @link https://nolanlawson.com/2021/08/22/speeding-up-indexeddb-reads-and-writes/\n */\nexport function commitIndexedDBTransaction(tx) {\n  if (tx.commit) {\n    tx.commit();\n  }\n}\nexport function createDatabase(channelName) {\n  var IndexedDB = getIdb();\n\n  // create table\n  var dbName = DB_PREFIX + channelName;\n\n  /**\n   * All IndexedDB databases are opened without version\n   * because it is a bit faster, especially on firefox\n   * @link http://nparashuram.com/IndexedDB/perf/#Open%20Database%20with%20version\n   */\n  var openRequest = IndexedDB.open(dbName);\n  openRequest.onupgradeneeded = function (ev) {\n    var db = ev.target.result;\n    db.createObjectStore(OBJECT_STORE_ID, {\n      keyPath: 'id',\n      autoIncrement: true\n    });\n  };\n  return new Promise(function (res, rej) {\n    openRequest.onerror = function (ev) {\n      return rej(ev);\n    };\n    openRequest.onsuccess = function () {\n      res(openRequest.result);\n    };\n  });\n}\n\n/**\n * writes the new message to the database\n * so other readers can find it\n */\nexport function writeMessage(db, readerUuid, messageJson) {\n  var time = new Date().getTime();\n  var writeObject = {\n    uuid: readerUuid,\n    time: time,\n    data: messageJson\n  };\n  var tx = db.transaction([OBJECT_STORE_ID], 'readwrite', TRANSACTION_SETTINGS);\n  return new Promise(function (res, rej) {\n    tx.oncomplete = function () {\n      return res();\n    };\n    tx.onerror = function (ev) {\n      return rej(ev);\n    };\n    var objectStore = tx.objectStore(OBJECT_STORE_ID);\n    objectStore.add(writeObject);\n    commitIndexedDBTransaction(tx);\n  });\n}\nexport function getAllMessages(db) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        ret.push(cursor.value);\n        //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n        cursor[\"continue\"]();\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function getMessagesHigherThan(db, lastCursorId) {\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  var keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n\n  /**\n   * Optimization shortcut,\n   * if getAll() can be used, do not use a cursor.\n   * @link https://rxdb.info/slow-indexeddb.html\n   */\n  if (objectStore.getAll) {\n    var getAllRequest = objectStore.getAll(keyRangeValue);\n    return new Promise(function (res, rej) {\n      getAllRequest.onerror = function (err) {\n        return rej(err);\n      };\n      getAllRequest.onsuccess = function (e) {\n        res(e.target.result);\n      };\n    });\n  }\n  function openCursor() {\n    // Occasionally Safari will fail on IDBKeyRange.bound, this\n    // catches that error, having it open the cursor to the first\n    // item. When it gets data it will advance to the desired key.\n    try {\n      keyRangeValue = IDBKeyRange.bound(lastCursorId + 1, Infinity);\n      return objectStore.openCursor(keyRangeValue);\n    } catch (e) {\n      return objectStore.openCursor();\n    }\n  }\n  return new Promise(function (res, rej) {\n    var openCursorRequest = openCursor();\n    openCursorRequest.onerror = function (err) {\n      return rej(err);\n    };\n    openCursorRequest.onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        if (cursor.value.id < lastCursorId + 1) {\n          cursor[\"continue\"](lastCursorId + 1);\n        } else {\n          ret.push(cursor.value);\n          cursor[\"continue\"]();\n        }\n      } else {\n        commitIndexedDBTransaction(tx);\n        res(ret);\n      }\n    };\n  });\n}\nexport function removeMessagesById(channelState, ids) {\n  if (channelState.closed) {\n    return Promise.resolve([]);\n  }\n  var tx = channelState.db.transaction(OBJECT_STORE_ID, 'readwrite', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  return Promise.all(ids.map(function (id) {\n    var deleteRequest = objectStore[\"delete\"](id);\n    return new Promise(function (res) {\n      deleteRequest.onsuccess = function () {\n        return res();\n      };\n    });\n  }));\n}\nexport function getOldMessages(db, ttl) {\n  var olderThen = new Date().getTime() - ttl;\n  var tx = db.transaction(OBJECT_STORE_ID, 'readonly', TRANSACTION_SETTINGS);\n  var objectStore = tx.objectStore(OBJECT_STORE_ID);\n  var ret = [];\n  return new Promise(function (res) {\n    objectStore.openCursor().onsuccess = function (ev) {\n      var cursor = ev.target.result;\n      if (cursor) {\n        var msgObk = cursor.value;\n        if (msgObk.time < olderThen) {\n          ret.push(msgObk);\n          //alert(\"Name for SSN \" + cursor.key + \" is \" + cursor.value.name);\n          cursor[\"continue\"]();\n        } else {\n          // no more old messages,\n          commitIndexedDBTransaction(tx);\n          res(ret);\n        }\n      } else {\n        res(ret);\n      }\n    };\n  });\n}\nexport function cleanOldMessages(channelState) {\n  return getOldMessages(channelState.db, channelState.options.idb.ttl).then(function (tooOld) {\n    return removeMessagesById(channelState, tooOld.map(function (msg) {\n      return msg.id;\n    }));\n  });\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  return createDatabase(channelName).then(function (db) {\n    var state = {\n      closed: false,\n      lastCursorId: 0,\n      channelName: channelName,\n      options: options,\n      uuid: randomToken(),\n      /**\n       * emittedMessagesIds\n       * contains all messages that have been emitted before\n       * @type {ObliviousSet}\n       */\n      eMIs: new ObliviousSet(options.idb.ttl * 2),\n      // ensures we do not read messages in parallel\n      writeBlockPromise: PROMISE_RESOLVED_VOID,\n      messagesCallback: null,\n      readQueuePromises: [],\n      db: db\n    };\n\n    /**\n     * Handle abrupt closes that do not originate from db.close().\n     * This could happen, for example, if the underlying storage is\n     * removed or if the user clears the database in the browser's\n     * history preferences.\n     */\n    db.onclose = function () {\n      state.closed = true;\n      if (options.idb.onclose) options.idb.onclose();\n    };\n\n    /**\n     * if service-workers are used,\n     * we have no 'storage'-event if they post a message,\n     * therefore we also have to set an interval\n     */\n    _readLoop(state);\n    return state;\n  });\n}\nfunction _readLoop(state) {\n  if (state.closed) return;\n  readNewMessages(state).then(function () {\n    return sleep(state.options.idb.fallbackInterval);\n  }).then(function () {\n    return _readLoop(state);\n  });\n}\nfunction _filterMessage(msgObj, state) {\n  if (msgObj.uuid === state.uuid) return false; // send by own\n  if (state.eMIs.has(msgObj.id)) return false; // already emitted\n  if (msgObj.data.time < state.messagesCallbackTime) return false; // older then onMessageCallback\n  return true;\n}\n\n/**\n * reads all new messages from the database and emits them\n */\nfunction readNewMessages(state) {\n  // channel already closed\n  if (state.closed) return PROMISE_RESOLVED_VOID;\n\n  // if no one is listening, we do not need to scan for new messages\n  if (!state.messagesCallback) return PROMISE_RESOLVED_VOID;\n  return getMessagesHigherThan(state.db, state.lastCursorId).then(function (newerMessages) {\n    var useMessages = newerMessages\n    /**\n     * there is a bug in iOS where the msgObj can be undefined sometimes\n     * so we filter them out\n     * @link https://github.com/pubkey/broadcast-channel/issues/19\n     */.filter(function (msgObj) {\n      return !!msgObj;\n    }).map(function (msgObj) {\n      if (msgObj.id > state.lastCursorId) {\n        state.lastCursorId = msgObj.id;\n      }\n      return msgObj;\n    }).filter(function (msgObj) {\n      return _filterMessage(msgObj, state);\n    }).sort(function (msgObjA, msgObjB) {\n      return msgObjA.time - msgObjB.time;\n    }); // sort by time\n    useMessages.forEach(function (msgObj) {\n      if (state.messagesCallback) {\n        state.eMIs.add(msgObj.id);\n        state.messagesCallback(msgObj.data);\n      }\n    });\n    return PROMISE_RESOLVED_VOID;\n  });\n}\nexport function close(channelState) {\n  channelState.closed = true;\n  channelState.db.close();\n}\nexport function postMessage(channelState, messageJson) {\n  channelState.writeBlockPromise = channelState.writeBlockPromise.then(function () {\n    return writeMessage(channelState.db, channelState.uuid, messageJson);\n  }).then(function () {\n    if (randomInt(0, 10) === 0) {\n      /* await (do not await) */\n      cleanOldMessages(channelState);\n    }\n  });\n  return channelState.writeBlockPromise;\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n  readNewMessages(channelState);\n}\nexport function canBeUsed() {\n  return !!getIdb();\n}\nexport function averageResponseTime(options) {\n  return options.idb.fallbackInterval * 2;\n}\nexport var IndexedDBMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "/**\n * A localStorage-only method which uses localstorage and its 'storage'-event\n * This does not work inside webworkers because they have no access to localstorage\n * This is basically implemented to support IE9 or your grandmother's toaster.\n * @link https://caniuse.com/#feat=namevalue-storage\n * @link https://caniuse.com/#feat=indexeddb\n */\n\nimport { ObliviousSet } from 'oblivious-set';\nimport { fillOptionsWithDefaults } from '../options.js';\nimport { sleep, randomToken, microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nvar KEY_PREFIX = 'pubkey.broadcastChannel-';\nexport var type = 'localstorage';\n\n/**\n * copied from crosstab\n * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32\n */\nexport function getLocalStorage() {\n  var localStorage;\n  if (typeof window === 'undefined') return null;\n  try {\n    localStorage = window.localStorage;\n    localStorage = window['ie8-eventlistener/storage'] || window.localStorage;\n  } catch (e) {\n    // New versions of Firefox throw a Security exception\n    // if cookies are disabled. See\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1028153\n  }\n  return localStorage;\n}\nexport function storageKey(channelName) {\n  return KEY_PREFIX + channelName;\n}\n\n/**\n* writes the new message to the storage\n* and fires the storage-event so other readers can find it\n*/\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    sleep().then(function () {\n      var key = storageKey(channelState.channelName);\n      var writeObj = {\n        token: randomToken(),\n        time: new Date().getTime(),\n        data: messageJson,\n        uuid: channelState.uuid\n      };\n      var value = JSON.stringify(writeObj);\n      getLocalStorage().setItem(key, value);\n\n      /**\n       * StorageEvent does not fire the 'storage' event\n       * in the window that changes the state of the local storage.\n       * So we fire it manually\n       */\n      var ev = document.createEvent('Event');\n      ev.initEvent('storage', true, true);\n      ev.key = key;\n      ev.newValue = value;\n      window.dispatchEvent(ev);\n      res();\n    });\n  });\n}\nexport function addStorageEventListener(channelName, fn) {\n  var key = storageKey(channelName);\n  var listener = function listener(ev) {\n    if (ev.key === key) {\n      fn(JSON.parse(ev.newValue));\n    }\n  };\n  window.addEventListener('storage', listener);\n  return listener;\n}\nexport function removeStorageEventListener(listener) {\n  window.removeEventListener('storage', listener);\n}\nexport function create(channelName, options) {\n  options = fillOptionsWithDefaults(options);\n  if (!canBeUsed()) {\n    throw new Error('BroadcastChannel: localstorage cannot be used');\n  }\n  var uuid = randomToken();\n\n  /**\n   * eMIs\n   * contains all messages that have been emitted before\n   * @type {ObliviousSet}\n   */\n  var eMIs = new ObliviousSet(options.localstorage.removeTimeout);\n  var state = {\n    channelName: channelName,\n    uuid: uuid,\n    eMIs: eMIs // emittedMessagesIds\n  };\n\n  state.listener = addStorageEventListener(channelName, function (msgObj) {\n    if (!state.messagesCallback) return; // no listener\n    if (msgObj.uuid === uuid) return; // own message\n    if (!msgObj.token || eMIs.has(msgObj.token)) return; // already emitted\n    if (msgObj.data.time && msgObj.data.time < state.messagesCallbackTime) return; // too old\n\n    eMIs.add(msgObj.token);\n    state.messagesCallback(msgObj.data);\n  });\n  return state;\n}\nexport function close(channelState) {\n  removeStorageEventListener(channelState.listener);\n}\nexport function onMessage(channelState, fn, time) {\n  channelState.messagesCallbackTime = time;\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  var ls = getLocalStorage();\n  if (!ls) return false;\n  try {\n    var key = '__broadcastchannel_check';\n    ls.setItem(key, 'works');\n    ls.removeItem(key);\n  } catch (e) {\n    // Safari 10 in private mode will not allow write access to local\n    // storage and fail with a QuotaExceededError. See\n    // https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API#Private_Browsing_Incognito_modes\n    return false;\n  }\n  return true;\n}\nexport function averageResponseTime() {\n  var defaultTime = 120;\n  var userAgent = navigator.userAgent.toLowerCase();\n  if (userAgent.includes('safari') && !userAgent.includes('chrome')) {\n    // safari is much slower so this time is higher\n    return defaultTime * 2;\n  }\n  return defaultTime;\n}\nexport var LocalstorageMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "import { microSeconds as micro } from '../util.js';\nexport var microSeconds = micro;\nexport var type = 'simulate';\nvar SIMULATE_CHANNELS = new Set();\nexport function create(channelName) {\n  var state = {\n    name: channelName,\n    messagesCallback: null\n  };\n  SIMULATE_CHANNELS.add(state);\n  return state;\n}\nexport function close(channelState) {\n  SIMULATE_CHANNELS[\"delete\"](channelState);\n}\nexport function postMessage(channelState, messageJson) {\n  return new Promise(function (res) {\n    return setTimeout(function () {\n      var channelArray = Array.from(SIMULATE_CHANNELS);\n      channelArray.filter(function (channel) {\n        return channel.name === channelState.name;\n      }).filter(function (channel) {\n        return channel !== channelState;\n      }).filter(function (channel) {\n        return !!channel.messagesCallback;\n      }).forEach(function (channel) {\n        return channel.messagesCallback(messageJson);\n      });\n      res();\n    }, 5);\n  });\n}\nexport function onMessage(channelState, fn) {\n  channelState.messagesCallback = fn;\n}\nexport function canBeUsed() {\n  return true;\n}\nexport function averageResponseTime() {\n  return 5;\n}\nexport var SimulateMethod = {\n  create: create,\n  close: close,\n  onMessage: onMessage,\n  postMessage: postMessage,\n  canBeUsed: canBeUsed,\n  type: type,\n  averageResponseTime: averageResponseTime,\n  microSeconds: microSeconds\n};", "import { NativeMethod } from './methods/native.js';\nimport { IndexedDBMethod } from './methods/indexed-db.js';\nimport { LocalstorageMethod } from './methods/localstorage.js';\nimport { SimulateMethod } from './methods/simulate.js';\n// the line below will be removed from es5/browser builds\n\n// order is important\nvar METHODS = [NativeMethod,\n// fastest\nIndexedDBMethod, LocalstorageMethod];\nexport function chooseMethod(options) {\n  var chooseMethods = [].concat(options.methods, METHODS).filter(Boolean);\n\n  // the line below will be removed from es5/browser builds\n\n  // directly chosen\n  if (options.type) {\n    if (options.type === 'simulate') {\n      // only use simulate-method if directly chosen\n      return SimulateMethod;\n    }\n    var ret = chooseMethods.find(function (m) {\n      return m.type === options.type;\n    });\n    if (!ret) throw new Error('method-type ' + options.type + ' not found');else return ret;\n  }\n\n  /**\n   * if no webworker support is needed,\n   * remove idb from the list so that localstorage will be chosen\n   */\n  if (!options.webWorkerSupport) {\n    chooseMethods = chooseMethods.filter(function (m) {\n      return m.type !== 'idb';\n    });\n  }\n  var useMethod = chooseMethods.find(function (method) {\n    return method.canBeUsed();\n  });\n  if (!useMethod) {\n    throw new Error(\"No usable method found in \" + JSON.stringify(METHODS.map(function (m) {\n      return m.type;\n    })));\n  } else {\n    return useMethod;\n  }\n}", "import { isPromise, PROMISE_RESOLVED_FALSE, PROMISE_RESOLVED_VOID } from './util.js';\nimport { chooseMethod } from './method-chooser.js';\nimport { fillOptionsWithDefaults } from './options.js';\n\n/**\n * Contains all open channels,\n * used in tests to ensure everything is closed.\n */\nexport var OPEN_BROADCAST_CHANNELS = new Set();\nvar lastId = 0;\nexport var BroadcastChannel = function BroadcastChannel(name, options) {\n  // identifier of the channel to debug stuff\n  this.id = lastId++;\n  OPEN_BROADCAST_CHANNELS.add(this);\n  this.name = name;\n  if (ENFORCED_OPTIONS) {\n    options = ENFORCED_OPTIONS;\n  }\n  this.options = fillOptionsWithDefaults(options);\n  this.method = chooseMethod(this.options);\n\n  // isListening\n  this._iL = false;\n\n  /**\n   * _onMessageListener\n   * setting onmessage twice,\n   * will overwrite the first listener\n   */\n  this._onML = null;\n\n  /**\n   * _addEventListeners\n   */\n  this._addEL = {\n    message: [],\n    internal: []\n  };\n\n  /**\n   * Unsent message promises\n   * where the sending is still in progress\n   * @type {Set<Promise>}\n   */\n  this._uMP = new Set();\n\n  /**\n   * _beforeClose\n   * array of promises that will be awaited\n   * before the channel is closed\n   */\n  this._befC = [];\n\n  /**\n   * _preparePromise\n   */\n  this._prepP = null;\n  _prepareChannel(this);\n};\n\n// STATICS\n\n/**\n * used to identify if someone overwrites\n * window.BroadcastChannel with this\n * See methods/native.js\n */\nBroadcastChannel._pubkey = true;\n\n/**\n * clears the tmp-folder if is node\n * @return {Promise<boolean>} true if has run, false if not node\n */\nexport function clearNodeFolder(options) {\n  options = fillOptionsWithDefaults(options);\n  var method = chooseMethod(options);\n  if (method.type === 'node') {\n    return method.clearNodeFolder().then(function () {\n      return true;\n    });\n  } else {\n    return PROMISE_RESOLVED_FALSE;\n  }\n}\n\n/**\n * if set, this method is enforced,\n * no mather what the options are\n */\nvar ENFORCED_OPTIONS;\nexport function enforceOptions(options) {\n  ENFORCED_OPTIONS = options;\n}\n\n// PROTOTYPE\nBroadcastChannel.prototype = {\n  postMessage: function postMessage(msg) {\n    if (this.closed) {\n      throw new Error('BroadcastChannel.postMessage(): ' + 'Cannot post message after channel has closed ' +\n      /**\n       * In the past when this error appeared, it was really hard to debug.\n       * So now we log the msg together with the error so it at least\n       * gives some clue about where in your application this happens.\n       */\n      JSON.stringify(msg));\n    }\n    return _post(this, 'message', msg);\n  },\n  postInternal: function postInternal(msg) {\n    return _post(this, 'internal', msg);\n  },\n  set onmessage(fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _removeListenerObject(this, 'message', this._onML);\n    if (fn && typeof fn === 'function') {\n      this._onML = listenObj;\n      _addListenerObject(this, 'message', listenObj);\n    } else {\n      this._onML = null;\n    }\n  },\n  addEventListener: function addEventListener(type, fn) {\n    var time = this.method.microSeconds();\n    var listenObj = {\n      time: time,\n      fn: fn\n    };\n    _addListenerObject(this, type, listenObj);\n  },\n  removeEventListener: function removeEventListener(type, fn) {\n    var obj = this._addEL[type].find(function (obj) {\n      return obj.fn === fn;\n    });\n    _removeListenerObject(this, type, obj);\n  },\n  close: function close() {\n    var _this = this;\n    if (this.closed) {\n      return;\n    }\n    OPEN_BROADCAST_CHANNELS[\"delete\"](this);\n    this.closed = true;\n    var awaitPrepare = this._prepP ? this._prepP : PROMISE_RESOLVED_VOID;\n    this._onML = null;\n    this._addEL.message = [];\n    return awaitPrepare\n    // wait until all current sending are processed\n    .then(function () {\n      return Promise.all(Array.from(_this._uMP));\n    })\n    // run before-close hooks\n    .then(function () {\n      return Promise.all(_this._befC.map(function (fn) {\n        return fn();\n      }));\n    })\n    // close the channel\n    .then(function () {\n      return _this.method.close(_this._state);\n    });\n  },\n  get type() {\n    return this.method.type;\n  },\n  get isClosed() {\n    return this.closed;\n  }\n};\n\n/**\n * Post a message over the channel\n * @returns {Promise} that resolved when the message sending is done\n */\nfunction _post(broadcastChannel, type, msg) {\n  var time = broadcastChannel.method.microSeconds();\n  var msgObj = {\n    time: time,\n    type: type,\n    data: msg\n  };\n  var awaitPrepare = broadcastChannel._prepP ? broadcastChannel._prepP : PROMISE_RESOLVED_VOID;\n  return awaitPrepare.then(function () {\n    var sendPromise = broadcastChannel.method.postMessage(broadcastChannel._state, msgObj);\n\n    // add/remove to unsent messages list\n    broadcastChannel._uMP.add(sendPromise);\n    sendPromise[\"catch\"]().then(function () {\n      return broadcastChannel._uMP[\"delete\"](sendPromise);\n    });\n    return sendPromise;\n  });\n}\nfunction _prepareChannel(channel) {\n  var maybePromise = channel.method.create(channel.name, channel.options);\n  if (isPromise(maybePromise)) {\n    channel._prepP = maybePromise;\n    maybePromise.then(function (s) {\n      // used in tests to simulate slow runtime\n      /*if (channel.options.prepareDelay) {\n           await new Promise(res => setTimeout(res, this.options.prepareDelay));\n      }*/\n      channel._state = s;\n    });\n  } else {\n    channel._state = maybePromise;\n  }\n}\nfunction _hasMessageListeners(channel) {\n  if (channel._addEL.message.length > 0) return true;\n  if (channel._addEL.internal.length > 0) return true;\n  return false;\n}\nfunction _addListenerObject(channel, type, obj) {\n  channel._addEL[type].push(obj);\n  _startListening(channel);\n}\nfunction _removeListenerObject(channel, type, obj) {\n  channel._addEL[type] = channel._addEL[type].filter(function (o) {\n    return o !== obj;\n  });\n  _stopListening(channel);\n}\nfunction _startListening(channel) {\n  if (!channel._iL && _hasMessageListeners(channel)) {\n    // someone is listening, start subscribing\n\n    var listenerFn = function listenerFn(msgObj) {\n      channel._addEL[msgObj.type].forEach(function (listenerObject) {\n        /**\n         * Getting the current time in JavaScript has no good precision.\n         * So instead of only listening to events that happened 'after' the listener\n         * was added, we also listen to events that happened 100ms before it.\n         * This ensures that when another process, like a WebWorker, sends events\n         * we do not miss them out because their timestamp is a bit off compared to the main process.\n         * Not doing this would make messages missing when we send data directly after subscribing and awaiting a response.\n         * @link https://johnresig.com/blog/accuracy-of-javascript-time/\n         */\n        var hundredMsInMicro = 100 * 1000;\n        var minMessageTime = listenerObject.time - hundredMsInMicro;\n        if (msgObj.time >= minMessageTime) {\n          listenerObject.fn(msgObj.data);\n        }\n      });\n    };\n    var time = channel.method.microSeconds();\n    if (channel._prepP) {\n      channel._prepP.then(function () {\n        channel._iL = true;\n        channel.method.onMessage(channel._state, listenerFn, time);\n      });\n    } else {\n      channel._iL = true;\n      channel.method.onMessage(channel._state, listenerFn, time);\n    }\n  }\n}\nfunction _stopListening(channel) {\n  if (channel._iL && !_hasMessageListeners(channel)) {\n    // no one is listening, stop subscribing\n    channel._iL = false;\n    var time = channel.method.microSeconds();\n    channel.method.onMessage(channel._state, null, time);\n  }\n}", "/* global WorkerGlobalScope */\n\nexport function addBrowser(fn) {\n  if (typeof WorkerGlobalScope === 'function' && self instanceof WorkerGlobalScope) {\n    /**\n     * Because killing a worker does directly stop the excution\n     * of the code, our only chance is to overwrite the close function\n     * which could work some times.\n     * @link https://stackoverflow.com/q/72903255/3443137\n     */\n    var oldClose = self.close.bind(self);\n    self.close = function () {\n      fn();\n      return oldClose();\n    };\n  } else {\n    /**\n     * if we are on react-native, there is no window.addEventListener\n     * @link https://github.com/pubkey/unload/issues/6\n     */\n    if (typeof window.addEventListener !== 'function') {\n      return;\n    }\n\n    /**\n     * for normal browser-windows, we use the beforeunload-event\n     */\n    window.addEventListener('beforeunload', function () {\n      fn();\n    }, true);\n\n    /**\n     * for iframes, we have to use the unload-event\n     * @link https://stackoverflow.com/q/47533670/3443137\n     */\n    window.addEventListener('unload', function () {\n      fn();\n    }, true);\n  }\n\n  /**\n   * TODO add fallback for safari-mobile\n   * @link https://stackoverflow.com/a/26193516/3443137\n   */\n}", "export function addNode(fn) {\n  process.on('exit', function () {\n    return fn();\n  });\n\n  /**\n   * on the following events,\n   * the process will not end if there are\n   * event-handlers attached,\n   * therefore we have to call process.exit()\n   */\n  process.on('beforeExit', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches ctrl+c event\n  process.on('SIGINT', function () {\n    return fn().then(function () {\n      return process.exit();\n    });\n  });\n  // catches uncaught exceptions\n  process.on('uncaughtException', function (err) {\n    return fn().then(function () {\n      console.trace(err);\n      process.exit(101);\n    });\n  });\n}", "import { addBrowser } from './browser.js';\nimport { addNode } from './node.js';\n\n/**\n * Use the code directly to prevent import problems\n * with the detect-node package.\n * @link https://github.com/iliakan/detect-node/blob/master/index.js\n */\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar USE_METHOD = isNode ? addNode : addBrowser;\nvar LISTENERS = new Set();\nvar startedListening = false;\nfunction startListening() {\n  if (startedListening) {\n    return;\n  }\n  startedListening = true;\n  USE_METHOD(runAll);\n}\nexport function add(fn) {\n  startListening();\n  if (typeof fn !== 'function') {\n    throw new Error('Listener is no function');\n  }\n  LISTENERS.add(fn);\n  var addReturn = {\n    remove: function remove() {\n      return LISTENERS[\"delete\"](fn);\n    },\n    run: function run() {\n      LISTENERS[\"delete\"](fn);\n      return fn();\n    }\n  };\n  return addReturn;\n}\nexport function runAll() {\n  var promises = [];\n  LISTENERS.forEach(function (fn) {\n    promises.push(fn());\n    LISTENERS[\"delete\"](fn);\n  });\n  return Promise.all(promises);\n}\nexport function removeAll() {\n  LISTENERS.clear();\n}\nexport function getSize() {\n  return LISTENERS.size;\n}", "import { add as unloadAdd } from 'unload';\n\n/**\n * sends and internal message over the broadcast-channel\n */\nexport function sendLeaderMessage(leaderElector, action) {\n  var msgJson = {\n    context: 'leader',\n    action: action,\n    token: leaderElector.token\n  };\n  return leaderElector.broadcastChannel.postInternal(msgJson);\n}\nexport function beLeader(leaderElector) {\n  leaderElector.isLeader = true;\n  leaderElector._hasLeader = true;\n  var unloadFn = unloadAdd(function () {\n    return leaderElector.die();\n  });\n  leaderElector._unl.push(unloadFn);\n  var isLeaderListener = function isLeaderListener(msg) {\n    if (msg.context === 'leader' && msg.action === 'apply') {\n      sendLeaderMessage(leaderElector, 'tell');\n    }\n    if (msg.context === 'leader' && msg.action === 'tell' && !leaderElector._dpLC) {\n      /**\n       * another instance is also leader!\n       * This can happen on rare events\n       * like when the CPU is at 100% for long time\n       * or the tabs are open very long and the browser throttles them.\n       * @link https://github.com/pubkey/broadcast-channel/issues/414\n       * @link https://github.com/pubkey/broadcast-channel/issues/385\n       */\n      leaderElector._dpLC = true;\n      leaderElector._dpL(); // message the lib user so the app can handle the problem\n      sendLeaderMessage(leaderElector, 'tell'); // ensure other leader also knows the problem\n    }\n  };\n\n  leaderElector.broadcastChannel.addEventListener('internal', isLeaderListener);\n  leaderElector._lstns.push(isLeaderListener);\n  return sendLeaderMessage(leaderElector, 'tell');\n}", "import { randomToken } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\n\n/**\n * A faster version of the leader elector that uses the WebLock API\n * @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Locks_API\n */\nexport var LeaderElectionWebLock = function LeaderElectionWebLock(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  broadcastChannel._befC.push(function () {\n    return _this.die();\n  });\n  this._options = options;\n  this.isLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n  this._lstns = [];\n  this._unl = [];\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  this._wKMC = {}; // stuff for cleanup\n\n  // lock name\n  this.lN = 'pubkey-bc||' + broadcastChannel.method.type + '||' + broadcastChannel.name;\n};\nLeaderElectionWebLock.prototype = {\n  hasLeader: function hasLeader() {\n    var _this2 = this;\n    return navigator.locks.query().then(function (locks) {\n      var relevantLocks = locks.held ? locks.held.filter(function (lock) {\n        return lock.name === _this2.lN;\n      }) : [];\n      if (relevantLocks && relevantLocks.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    var _this3 = this;\n    if (!this._wLMP) {\n      this._wKMC.c = new AbortController();\n      var returnPromise = new Promise(function (res, rej) {\n        _this3._wKMC.res = res;\n        _this3._wKMC.rej = rej;\n      });\n      this._wLMP = new Promise(function (res) {\n        navigator.locks.request(_this3.lN, {\n          signal: _this3._wKMC.c.signal\n        }, function () {\n          // if the lock resolved, we can drop the abort controller\n          _this3._wKMC.c = undefined;\n          beLeader(_this3);\n          res();\n          return returnPromise;\n        })[\"catch\"](function () {});\n      });\n    }\n    return this._wLMP;\n  },\n  set onduplicate(_fn) {\n    // Do nothing because there are no duplicates in the WebLock version\n  },\n  die: function die() {\n    var _this4 = this;\n    this._lstns.forEach(function (listener) {\n      return _this4.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    if (this._wKMC.res) {\n      this._wKMC.res();\n    }\n    if (this._wKMC.c) {\n      this._wKMC.c.abort('LeaderElectionWebLock.die() called');\n    }\n    return sendLeaderMessage(this, 'death');\n  }\n};", "import { sleep, randomToken, PROMISE_RESOLVED_VOID, PROMISE_RESOLVED_TRUE, supportsWebLockAPI } from './util.js';\nimport { sendLeaderMessage, beLeader } from './leader-election-util.js';\nimport { LeaderElectionWebLock } from './leader-election-web-lock.js';\nvar LeaderElection = function LeaderElection(broadcastChannel, options) {\n  var _this = this;\n  this.broadcastChannel = broadcastChannel;\n  this._options = options;\n  this.isLeader = false;\n  this._hasLeader = false;\n  this.isDead = false;\n  this.token = randomToken();\n\n  /**\n   * Apply Queue,\n   * used to ensure we do not run applyOnce()\n   * in parallel.\n   */\n  this._aplQ = PROMISE_RESOLVED_VOID;\n  // amount of unfinished applyOnce() calls\n  this._aplQC = 0;\n\n  // things to clean up\n  this._unl = []; // _unloads\n  this._lstns = []; // _listeners\n  this._dpL = function () {}; // onduplicate listener\n  this._dpLC = false; // true when onduplicate called\n\n  /**\n   * Even when the own instance is not applying,\n   * we still listen to messages to ensure the hasLeader flag\n   * is set correctly.\n   */\n  var hasLeaderListener = function hasLeaderListener(msg) {\n    if (msg.context === 'leader') {\n      if (msg.action === 'death') {\n        _this._hasLeader = false;\n      }\n      if (msg.action === 'tell') {\n        _this._hasLeader = true;\n      }\n    }\n  };\n  this.broadcastChannel.addEventListener('internal', hasLeaderListener);\n  this._lstns.push(hasLeaderListener);\n};\nLeaderElection.prototype = {\n  hasLeader: function hasLeader() {\n    return Promise.resolve(this._hasLeader);\n  },\n  /**\n   * Returns true if the instance is leader,\n   * false if not.\n   * @async\n   */\n  applyOnce: function applyOnce(\n  // true if the applyOnce() call came from the fallbackInterval cycle\n  isFromFallbackInterval) {\n    var _this2 = this;\n    if (this.isLeader) {\n      return sleep(0, true);\n    }\n    if (this.isDead) {\n      return sleep(0, false);\n    }\n\n    /**\n     * Already applying more than once,\n     * -> wait for the apply queue to be finished.\n     */\n    if (this._aplQC > 1) {\n      return this._aplQ;\n    }\n\n    /**\n     * Add a new apply-run\n     */\n    var applyRun = function applyRun() {\n      /**\n       * Optimization shortcuts.\n       * Directly return if a previous run\n       * has already elected a leader.\n       */\n      if (_this2.isLeader) {\n        return PROMISE_RESOLVED_TRUE;\n      }\n      var stopCriteria = false;\n      var stopCriteriaPromiseResolve;\n      /**\n       * Resolves when a stop criteria is reached.\n       * Uses as a performance shortcut so we do not\n       * have to await the responseTime when it is already clear\n       * that the election failed.\n       */\n      var stopCriteriaPromise = new Promise(function (res) {\n        stopCriteriaPromiseResolve = function stopCriteriaPromiseResolve() {\n          stopCriteria = true;\n          res();\n        };\n      });\n      var handleMessage = function handleMessage(msg) {\n        if (msg.context === 'leader' && msg.token != _this2.token) {\n          if (msg.action === 'apply') {\n            // other is applying\n            if (msg.token > _this2.token) {\n              /**\n               * other has higher token\n               * -> stop applying and let other become leader.\n               */\n              stopCriteriaPromiseResolve();\n            }\n          }\n          if (msg.action === 'tell') {\n            // other is already leader\n            stopCriteriaPromiseResolve();\n            _this2._hasLeader = true;\n          }\n        }\n      };\n      _this2.broadcastChannel.addEventListener('internal', handleMessage);\n\n      /**\n       * If the applyOnce() call came from the fallbackInterval,\n       * we can assume that the election runs in the background and\n       * not critical process is waiting for it.\n       * When this is true, we give the other instances\n       * more time to answer to messages in the election cycle.\n       * This makes it less likely to elect duplicate leaders.\n       * But also it takes longer which is not a problem because we anyway\n       * run in the background.\n       */\n      var waitForAnswerTime = isFromFallbackInterval ? _this2._options.responseTime * 4 : _this2._options.responseTime;\n      return sendLeaderMessage(_this2, 'apply') // send out that this one is applying\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })\n      // send again in case another instance was just created\n      .then(function () {\n        return sendLeaderMessage(_this2, 'apply');\n      })\n      // let others time to respond\n      .then(function () {\n        return Promise.race([sleep(waitForAnswerTime), stopCriteriaPromise.then(function () {\n          return Promise.reject(new Error());\n        })]);\n      })[\"catch\"](function () {}).then(function () {\n        _this2.broadcastChannel.removeEventListener('internal', handleMessage);\n        if (!stopCriteria) {\n          // no stop criteria -> own is leader\n          return beLeader(_this2).then(function () {\n            return true;\n          });\n        } else {\n          // other is leader\n          return false;\n        }\n      });\n    };\n    this._aplQC = this._aplQC + 1;\n    this._aplQ = this._aplQ.then(function () {\n      return applyRun();\n    }).then(function () {\n      _this2._aplQC = _this2._aplQC - 1;\n    });\n    return this._aplQ.then(function () {\n      return _this2.isLeader;\n    });\n  },\n  awaitLeadership: function awaitLeadership() {\n    if ( /* _awaitLeadershipPromise */\n    !this._aLP) {\n      this._aLP = _awaitLeadershipOnce(this);\n    }\n    return this._aLP;\n  },\n  set onduplicate(fn) {\n    this._dpL = fn;\n  },\n  die: function die() {\n    var _this3 = this;\n    this._lstns.forEach(function (listener) {\n      return _this3.broadcastChannel.removeEventListener('internal', listener);\n    });\n    this._lstns = [];\n    this._unl.forEach(function (uFn) {\n      return uFn.remove();\n    });\n    this._unl = [];\n    if (this.isLeader) {\n      this._hasLeader = false;\n      this.isLeader = false;\n    }\n    this.isDead = true;\n    return sendLeaderMessage(this, 'death');\n  }\n};\n\n/**\n * @param leaderElector {LeaderElector}\n */\nfunction _awaitLeadershipOnce(leaderElector) {\n  if (leaderElector.isLeader) {\n    return PROMISE_RESOLVED_VOID;\n  }\n  return new Promise(function (res) {\n    var resolved = false;\n    function finish() {\n      if (resolved) {\n        return;\n      }\n      resolved = true;\n      leaderElector.broadcastChannel.removeEventListener('internal', whenDeathListener);\n      res(true);\n    }\n\n    // try once now\n    leaderElector.applyOnce().then(function () {\n      if (leaderElector.isLeader) {\n        finish();\n      }\n    });\n\n    /**\n     * Try on fallbackInterval\n     * @recursive\n     */\n    var tryOnFallBack = function tryOnFallBack() {\n      return sleep(leaderElector._options.fallbackInterval).then(function () {\n        if (leaderElector.isDead || resolved) {\n          return;\n        }\n        if (leaderElector.isLeader) {\n          finish();\n        } else {\n          return leaderElector.applyOnce(true).then(function () {\n            if (leaderElector.isLeader) {\n              finish();\n            } else {\n              tryOnFallBack();\n            }\n          });\n        }\n      });\n    };\n    tryOnFallBack();\n\n    // try when other leader dies\n    var whenDeathListener = function whenDeathListener(msg) {\n      if (msg.context === 'leader' && msg.action === 'death') {\n        leaderElector._hasLeader = false;\n        leaderElector.applyOnce().then(function () {\n          if (leaderElector.isLeader) {\n            finish();\n          }\n        });\n      }\n    };\n    leaderElector.broadcastChannel.addEventListener('internal', whenDeathListener);\n    leaderElector._lstns.push(whenDeathListener);\n  });\n}\nfunction fillOptionsWithDefaults(options, channel) {\n  if (!options) options = {};\n  options = JSON.parse(JSON.stringify(options));\n  if (!options.fallbackInterval) {\n    options.fallbackInterval = 3000;\n  }\n  if (!options.responseTime) {\n    options.responseTime = channel.method.averageResponseTime(channel.options);\n  }\n  return options;\n}\nexport function createLeaderElection(channel, options) {\n  if (channel._leaderElector) {\n    throw new Error('BroadcastChannel already has a leader-elector');\n  }\n  options = fillOptionsWithDefaults(options, channel);\n  var elector = supportsWebLockAPI() ? new LeaderElectionWebLock(channel, options) : new LeaderElection(channel, options);\n  channel._befC.push(function () {\n    return elector.die();\n  });\n  channel._leaderElector = elector;\n  return elector;\n}", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { BroadcastChannel } from 'broadcast-channel';\nimport { isBrowser } from '../features';\nimport {\n  ServiceManagerOptions, ServiceInterface\n} from '../core/types';\nimport {\n  Token, Tokens, \n  EVENT_ADDED, EVENT_REMOVED, EVENT_RENEWED, EVENT_SET_STORAGE, TokenManagerInterface\n} from '../oidc/types';\nimport { AuthSdkError } from '../errors';\n\nexport type SyncMessage = {\n  type: string;\n  key?: string;\n  token?: Token;\n  oldToken?: Token;\n  storage?: Tokens;\n};\nexport class SyncStorageService implements ServiceInterface {\n  private tokenManager: TokenManagerInterface;\n  private options: ServiceManagerOptions;\n  private channel?: BroadcastChannel<SyncMessage>;\n  private started = false;\n  private enablePostMessage = true;\n\n  constructor(tokenManager: TokenManagerInterface, options: ServiceManagerOptions = {}) {\n    this.tokenManager = tokenManager;\n    this.options = options;\n    this.onTokenAddedHandler = this.onTokenAddedHandler.bind(this);\n    this.onTokenRemovedHandler = this.onTokenRemovedHandler.bind(this);\n    this.onTokenRenewedHandler = this.onTokenRenewedHandler.bind(this);\n    this.onSetStorageHandler = this.onSetStorageHandler.bind(this);\n    this.onSyncMessageHandler = this.onSyncMessageHandler.bind(this);\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return !!this.options.syncStorage && isBrowser() && !this.started;\n  }\n\n  async start() {\n    if (!this.canStart()) {\n      return;\n    }\n    \n    const { syncChannelName } = this.options;\n    try {\n      // BroadcastChannel throws if no supported method can be found\n      this.channel = new BroadcastChannel(syncChannelName as string);\n    } catch (err) {\n      throw new AuthSdkError('SyncStorageService is not supported in current browser.');\n    }\n\n    this.tokenManager.on(EVENT_ADDED, this.onTokenAddedHandler);\n    this.tokenManager.on(EVENT_REMOVED, this.onTokenRemovedHandler);\n    this.tokenManager.on(EVENT_RENEWED, this.onTokenRenewedHandler);\n    this.tokenManager.on(EVENT_SET_STORAGE, this.onSetStorageHandler);\n    this.channel.addEventListener('message', this.onSyncMessageHandler);\n    this.started = true;\n  }\n\n  async stop() {\n    if (this.started) {\n      this.tokenManager.off(EVENT_ADDED, this.onTokenAddedHandler);\n      this.tokenManager.off(EVENT_REMOVED, this.onTokenRemovedHandler);\n      this.tokenManager.off(EVENT_RENEWED, this.onTokenRenewedHandler);\n      this.tokenManager.off(EVENT_SET_STORAGE, this.onSetStorageHandler);\n      this.channel?.removeEventListener('message', this.onSyncMessageHandler);\n      await this.channel?.close();\n      this.channel = undefined;\n      this.started = false;\n    }\n  }\n\n  private onTokenAddedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_ADDED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRemovedHandler(key: string, token: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_REMOVED,\n      key,\n      token\n    });\n  }\n\n  private onTokenRenewedHandler(key: string, token: Token, oldToken?: Token) {\n    if (!this.enablePostMessage) {\n      return;\n    }\n    this.channel?.postMessage({\n      type: EVENT_RENEWED,\n      key,\n      token,\n      oldToken\n    });\n  }\n\n  private onSetStorageHandler(storage: Tokens) {\n    this.channel?.postMessage({\n      type: EVENT_SET_STORAGE,\n      storage\n    });\n  }\n\n  /* eslint-disable complexity */\n  private onSyncMessageHandler(msg: SyncMessage) {\n    // Notes:\n    // 1. Using `enablePostMessage` flag here to prevent sync message loop.\n    //    If this flag is on, tokenManager event handlers do not post sync message.\n    // 2. IE11 has known issue with synchronization of LocalStorage cross tabs.\n    //    One workaround is to set empty event handler for `window.onstorage`.\n    //    But it's not 100% working, sometimes you still get old value from LocalStorage.\n    //    Better approch is to explicitly udpate LocalStorage with `setStorage`.\n\n    this.enablePostMessage = false;\n    switch (msg.type) {\n      case EVENT_SET_STORAGE:\n        this.tokenManager.getStorage().setStorage(msg.storage);\n        break;\n      case EVENT_ADDED:\n        this.tokenManager.emitAdded(msg.key!, msg.token!);\n        this.tokenManager.setExpireEventTimeout(msg.key!, msg.token!);\n        break;\n      case EVENT_REMOVED:\n        this.tokenManager.clearExpireEventTimeout(msg.key!);\n        this.tokenManager.emitRemoved(msg.key!, msg.token!);\n        break;\n      case EVENT_RENEWED:\n        this.tokenManager.emitRenewed(msg.key!, msg.token!, msg.oldToken);\n        break;\n      default:\n        break;\n    }\n    this.enablePostMessage = true;\n  }\n} ", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { ServiceInterface, ServiceManagerOptions } from '../core/types';\nimport {\n  BroadcastChannel,\n  createLeaderElection,\n  LeaderElector\n} from 'broadcast-channel';\nimport { isBrowser } from '../features';\n\ndeclare type OnLeaderHandler = (() => Promise<void>);\ndeclare type ServiceOptions = ServiceManagerOptions & {\n  onLeader?: OnLeaderHandler;\n};\n\nexport class LeaderElectionService implements ServiceInterface {\n  private options: ServiceOptions;\n  private channel?: BroadcastChannel;\n  private elector?: LeaderElector;\n  private started = false;\n\n  constructor(options: ServiceOptions = {}) {\n    this.options = options;\n    this.onLeaderDuplicate = this.onLeaderDuplicate.bind(this);\n    this.onLeader = this.onLeader.bind(this);\n  }\n\n  private onLeaderDuplicate() {\n  }\n\n  private async onLeader() {\n    await this.options.onLeader?.();\n  }\n\n  isLeader() {\n    return !!this.elector?.isLeader;\n  }\n\n  hasLeader() {\n    return !!this.elector?.hasLeader;\n  }\n\n  async start() {\n    if (this.canStart()) {\n      const { electionChannelName } = this.options;\n      this.channel = new BroadcastChannel(electionChannelName as string);\n      this.elector = createLeaderElection(this.channel);\n      this.elector.onduplicate = this.onLeaderDuplicate;\n      this.elector.awaitLeadership().then(this.onLeader);\n      this.started = true;\n    }\n  }\n\n  async stop() {\n    if (this.started) {\n      if (this.elector) {\n        await this.elector.die();\n        this.elector = undefined;\n      }\n      if (this.channel) {\n        // Workaround to fix error `Failed to execute 'postMessage' on 'BroadcastChannel': Channel is closed`\n        (this.channel as any).postInternal = () => Promise.resolve();\n        await this.channel.close();\n        this.channel = undefined;\n      }\n      this.started = false;\n    }\n  }\n\n  requiresLeadership() {\n    return false;\n  }\n\n  isStarted() {\n    return this.started;\n  }\n\n  canStart() {\n    return isBrowser() && !this.started;\n  }\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport {\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n} from '../../oidc';\n\nimport {\n  ServiceManagerInterface,\n  ServiceInterface,\n  ServiceManagerOptions,\n  OktaAuthCoreInterface,\n  OktaAuthCoreOptions\n} from '../types';\nimport { AutoRenewService, SyncStorageService, LeaderElectionService } from '../../services';\nimport { removeNils } from '../../util';\n\nconst AUTO_RENEW = 'autoRenew';\nconst SYNC_STORAGE = 'syncStorage';\nconst LEADER_ELECTION = 'leaderElection';\n\nexport class ServiceManager\n<\n  M extends OAuthTransactionMeta,\n  S extends OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions\n>\nimplements ServiceManagerInterface \n{\n  private sdk: OktaAuthCoreInterface<M, S, O>;\n  private options: ServiceManagerOptions;\n  private services: Map<string, ServiceInterface>;\n  private started: boolean;\n\n  private static knownServices = [AUTO_RENEW, SYNC_STORAGE, LEADER_ELECTION];\n\n  private static defaultOptions = {\n    autoRenew: true,\n    autoRemove: true,\n    syncStorage: true\n  };\n\n  constructor(sdk: OktaAuthCoreInterface<M, S, O>, options: ServiceManagerOptions = {}) {\n    this.sdk = sdk;\n    this.onLeader = this.onLeader.bind(this);\n\n    // TODO: backwards compatibility, remove in next major version - OKTA-473815\n    const { autoRenew, autoRemove, syncStorage } = sdk.tokenManager.getOptions();\n    options.electionChannelName = options.electionChannelName || options.broadcastChannelName;\n    this.options = Object.assign({}, \n      ServiceManager.defaultOptions,\n      { autoRenew, autoRemove, syncStorage }, \n      {\n        electionChannelName: `${sdk.options.clientId}-election`,\n        syncChannelName: `${sdk.options.clientId}-sync`,\n      },\n      removeNils(options)\n    );\n\n    this.started = false;\n    this.services = new Map();\n\n    ServiceManager.knownServices.forEach(name => {\n      const svc = this.createService(name);\n      if (svc) {\n        this.services.set(name, svc);\n      }\n    });\n  }\n\n  private async onLeader() {\n    if (this.started) {\n      // Start services that requires leadership\n      await this.startServices();\n    }\n  }\n\n  isLeader() {\n    return (this.getService(LEADER_ELECTION) as LeaderElectionService)?.isLeader();\n  }\n\n  isLeaderRequired() {\n    return [...this.services.values()].some(srv => srv.canStart() && srv.requiresLeadership());\n  }\n\n  async start() {\n    if (this.started) {\n      return;     // noop if services have already started\n    }\n    await this.startServices();\n    this.started = true;\n  }\n  \n  async stop() {\n    await this.stopServices();\n    this.started = false;\n  }\n\n  getService(name: string): ServiceInterface | undefined {\n    return this.services.get(name);\n  }\n\n  private async startServices() {\n    for (const [name, srv] of this.services.entries()) {\n      if (this.canStartService(name, srv)) {\n        await srv.start();\n      }\n    }\n  }\n\n  private async stopServices() {\n    for (const srv of this.services.values()) {\n      await srv.stop();\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private canStartService(name: string, srv: ServiceInterface): boolean {\n    let canStart = srv.canStart() && !srv.isStarted();\n    // only start election if a leader is required\n    if (name === LEADER_ELECTION) {\n      canStart &&= this.isLeaderRequired();\n    } else if (srv.requiresLeadership()) {\n      canStart &&= this.isLeader();\n    }\n    return canStart;\n  }\n\n  private createService(name: string): ServiceInterface {\n    const tokenManager = this.sdk.tokenManager;\n\n    let service: ServiceInterface;\n    switch (name) {\n      case LEADER_ELECTION:\n        service = new LeaderElectionService({...this.options, onLeader: this.onLeader});\n        break;\n      case AUTO_RENEW:\n        service = new AutoRenewService(tokenManager, {...this.options});\n        break;\n      case SYNC_STORAGE:\n        service = new SyncStorageService(tokenManager, {...this.options});\n        break;\n      default:\n        throw new Error(`Unknown service ${name}`);\n    }\n    return service;\n  }\n\n}\n", "import { parseOAuthResponseFromUrl } from '../oidc/parseFromUrl';\nimport { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  PKCETransactionMeta,\n  Tokens,\n  TransactionManagerInterface,\n} from '../oidc/types';\nimport { AuthStateManager } from './AuthStateManager';\nimport { ServiceManager } from './ServiceManager';\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\n\nexport function mixinCore\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  return class OktaAuthCore extends Base implements OktaAuthCoreInterface<M, S, O, TM>\n  {\n    authStateManager: AuthStateManager<M, S, O>;\n    serviceManager: ServiceManager<M, S, O>;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      // AuthStateManager\n      this.authStateManager = new AuthStateManager<M, S, O>(this);\n\n      // ServiceManager\n      this.serviceManager = new ServiceManager<M, S, O>(this, this.options.services);\n    }\n\n    async start() {\n      await this.serviceManager.start();\n      // TODO: review tokenManager.start\n      this.tokenManager.start();\n      if (!this.token.isLoginRedirect()) {\n        await this.authStateManager.updateAuthState();\n      }\n    }\n  \n    async stop() {\n      // TODO: review tokenManager.stop\n      this.tokenManager.stop();\n      await this.serviceManager.stop();\n    }\n\n    async handleRedirect(originalUri?: string): Promise<void> {\n      await this.handleLoginRedirect(undefined, originalUri);\n    }\n\n    // eslint-disable-next-line complexity\n    async handleLoginRedirect(tokens?: Tokens, originalUri?: string): Promise<void> {\n      let state = this.options.state;\n  \n      // Store tokens and update AuthState by the emitted events\n      if (tokens) {\n        this.tokenManager.setTokens(tokens);\n        originalUri = originalUri || this.getOriginalUri(this.options.state);\n      } else if (this.isLoginRedirect()) {\n        try {\n          // For redirect flow, get state from the URL and use it to retrieve the originalUri\n          const oAuthResponse = await parseOAuthResponseFromUrl(this, {});\n          state = oAuthResponse.state;\n          originalUri = originalUri || this.getOriginalUri(state);\n          await this.storeTokensFromRedirect();\n        } catch(e) {\n          // auth state should be updated\n          await this.authStateManager.updateAuthState();\n          throw e;\n        }\n      } else {\n        return; // nothing to do\n      }\n      \n      // ensure auth state has been updated\n      await this.authStateManager.updateAuthState();\n  \n      // clear originalUri from storage\n      this.removeOriginalUri(state);\n  \n      // Redirect to originalUri\n      const { restoreOriginalUri } = this.options;\n      if (restoreOriginalUri) {\n        await restoreOriginalUri(this, originalUri);\n      } else if (originalUri) {\n        window.location.replace(originalUri);\n      }\n    }\n  };\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n/* global window */\nimport { omit, getLink, toQueryString } from '../util';\nimport { get, post, httpRequest } from '../http';\n\nfunction sessionExists(sdk) {\n  return sdk.session.get()\n    .then(function(res) {\n      if (res.status === 'ACTIVE') {\n        return true;\n      }\n      return false;\n    })\n    .catch(function() {\n      return false;\n    });\n}\n\nfunction getSession(sdk) { \n  return get(sdk, '/api/v1/sessions/me', { withCredentials: true })\n  .then(function(session) {\n    var res = omit(session, '_links');\n\n    res.refresh = function() {\n      return post(sdk, getLink(session, 'refresh').href, {}, { withCredentials: true });\n    };\n\n    res.user = function() {\n      return get(sdk, getLink(session, 'user').href, { withCredentials: true });\n    };\n\n    return res;\n  })\n  .catch(function() {\n    // Return INACTIVE status on failure\n    return {status: 'INACTIVE'};\n  });\n}\n\nfunction closeSession(sdk) {\n  return httpRequest(sdk, {\n    url: sdk.getIssuerOrigin() + '/api/v1/sessions/me',\n    method: 'DELETE',\n    withCredentials: true\n  });\n}\n\nfunction refreshSession(sdk) {\n  return post(sdk, '/api/v1/sessions/me/lifecycle/refresh', {}, { withCredentials: true });\n}\n\nfunction setCookieAndRedirect(sdk, sessionToken, redirectUrl) {\n  redirectUrl = redirectUrl || window.location.href;\n  window.location.assign(sdk.getIssuerOrigin() + '/login/sessionCookieRedirect' +\n    toQueryString({\n      checkAccountSetupComplete: true,\n      token: sessionToken,\n      redirectUrl: redirectUrl\n    }));\n}\n\nexport {\n  sessionExists,\n  getSession,\n  closeSession,\n  refreshSession,\n  setCookieAndRedirect\n};\n", "import { SessionAPI } from './types';\nimport { closeSession, getSession, refreshSession, sessionExists, setCookieAndRedirect } from './api';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function createSessionApi(sdk: OktaAuthBaseInterface): SessionAPI {\n  const session = {\n    close: closeSession.bind(null, sdk),\n    exists: sessionExists.bind(null, sdk),\n    get: getSession.bind(null, sdk),\n    refresh: refreshSession.bind(null, sdk),\n    setCookieAndRedirect: setCookieAndRedirect.bind(null, sdk)\n  };\n  return session;\n}\n", "import { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\nimport { createSessionApi } from './factory';\nimport {\n  OktaAuthSessionInterface, SessionAPI,\n} from './types';\nimport { StorageManagerInterface } from '../storage/types';\n\nexport function mixinSession\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n{\n  return class OktaAuthSession extends Base implements OktaAuthSessionInterface<S, O>\n  {\n    session: SessionAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.session = createSessionApi(this);\n    }\n\n    // Ends the current Okta SSO session without redirecting to Okta.\n    closeSession(): Promise<boolean> {\n      return this.session.close() // DELETE /api/v1/sessions/me\n      .then(async () => {\n        // Clear all local tokens\n        this.clearStorage();\n        return true;\n      })\n      .catch(function(e) {\n        if (e.name === 'AuthApiError' && e.errorCode === 'E0000007') {\n          // Session does not exist or has already been closed\n          return false;\n        }\n        throw e;\n      });\n    }\n  };\n}\n", "import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\n\nimport { OktaAuthCoreInterface, OktaAuthCoreOptions } from './types';\nimport { createOktaAuthBase } from '../base';\nimport { mixinStorage } from '../storage/mixin';\nimport { mixinHttp } from '../http/mixin';\nimport { mixinOAuth } from '../oidc/mixin';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { mixinCore } from './mixin';\nimport { mixinSession } from '../session/mixin';\n\nexport function createOktaAuthCore<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n): OktaAuthConstructor<OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  const Core = mixinCore<M, S, O, TM>(WithOAuth);\n  return Core;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { base64UrlToBuffer, bufferToBase64Url } from '../crypto/base64';\nimport {\n  ActivationData,\n  ChallengeData,\n  IdxAuthenticator,\n} from './types';\n\n\n// Get known credentials from list of enrolled authenticators\nconst getEnrolledCredentials = (authenticatorEnrollments: IdxAuthenticator[] = []) => {\n  const credentials: PublicKeyCredentialDescriptor[] = [];\n  authenticatorEnrollments.forEach((enrollement) => {\n    if (enrollement.key === 'webauthn') {\n      credentials.push({\n        type: 'public-key',\n        id: base64UrlToBuffer(enrollement.credentialId),\n      });\n    }\n  });\n  return credentials;\n};\n\n// Build options for navigator.credentials.create\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/create\nexport const buildCredentialCreationOptions = (\n  activationData: ActivationData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      rp: activationData.rp,\n      user: {\n        id: base64UrlToBuffer(activationData.user.id),\n        name: activationData.user.name,\n        displayName: activationData.user.displayName\n      },\n      challenge: base64UrlToBuffer(activationData.challenge),\n      pubKeyCredParams: activationData.pubKeyCredParams,\n      attestation: activationData.attestation,\n      authenticatorSelection: activationData.authenticatorSelection,\n      excludeCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialCreationOptions;\n};\n\n\n// Build options for navigator.credentials.get\n// https://developer.mozilla.org/en-US/docs/Web/API/CredentialsContainer/get\nexport const buildCredentialRequestOptions = (\n  challengeData: ChallengeData, authenticatorEnrollments: IdxAuthenticator[]\n) => {\n  return {\n    publicKey: {\n      challenge: base64UrlToBuffer(challengeData.challenge),\n      userVerification: challengeData.userVerification,\n      allowCredentials: getEnrolledCredentials(authenticatorEnrollments),\n    }\n  } as CredentialRequestOptions;\n};\n\n// Build attestation for webauthn enroll\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAttestationResponse\nexport const getAttestation = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAttestationResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const attestation = bufferToBase64Url(response.attestationObject);\n  return {\n    id,\n    clientData,\n    attestation\n  };\n};\n\n// Build assertion for webauthn verification\n// https://developer.mozilla.org/en-US/docs/Web/API/AuthenticatorAssertionResponse\nexport const getAssertion = (credential: PublicKeyCredential) => {\n  const response = credential.response as AuthenticatorAssertionResponse;\n  const id = credential.id;\n  const clientData = bufferToBase64Url(response.clientDataJSON);\n  const authenticatorData = bufferToBase64Url(response.authenticatorData);\n  const signatureData = bufferToBase64Url(response.signature);\n  return {\n    id,\n    clientData,\n    authenticatorData,\n    signatureData\n  };\n};\n", "import { OktaAuthConstructor } from '../base/types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\nimport {\n  IdxAPI, \n  IdxTransactionManagerInterface, \n  OktaAuthIdxInterface, \n  OktaAuthIdxConstructor, \n  OktaAuthIdxOptions, \n  WebauthnAPI\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createIdxAPI } from './factory/api';\nimport * as webauthn from './webauthn';\n\nexport function mixinIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n>\n(Base: TBase): TBase & OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements OktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: IdxAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createIdxAPI(this);\n    }\n  };\n}\n", "import { createOktaAuthCore } from '../../core/factory';\nimport { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, OktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { mixinIdx } from '../mixin';\nimport { TransactionManagerConstructor } from '../../oidc/types';\nimport { OktaAuthCoreInterface } from '../../core/types';\n\nexport function createOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<OktaAuthIdxInterface<M, S, O, TM> & OktaAuthCoreInterface<M, S, O, TM>>\n{\n  const Core = createOktaAuthCore<M, S, O, TM>(\n    StorageManagerConstructor,\n    OptionsConstructor,\n    TransactionManagerConstructor\n  );\n  const WithIdx = mixinIdx(Core);\n  return WithIdx;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { makeIdxState } from '../idxState';\nimport { canProceed, proceed } from '../proceed';\nimport { startTransaction } from '../startTransaction';\nimport {\n  clearTransactionMeta,\n  createTransactionMeta,\n  getSavedTransactionMeta,\n  getTransactionMeta,\n  isTransactionMetaValid,\n  saveTransactionMeta\n} from '../transactionMeta';\nimport { MinimalIdxAPI, MinimalOktaAuthIdxInterface, OktaAuthIdxInterface } from '../types';\n\n// Factory\nexport function createMinimalIdxAPI(minimalSdk: MinimalOktaAuthIdxInterface): MinimalIdxAPI {\n  const sdk = minimalSdk as OktaAuthIdxInterface;\n  const boundStartTransaction = startTransaction.bind(null, sdk);\n  const idx = {\n    makeIdxResponse: makeIdxState.bind(null, sdk),\n\n    start: boundStartTransaction,\n    startTransaction: boundStartTransaction, // Use `start` instead. `startTransaction` will be removed in 7.0\n    proceed: proceed.bind(null, sdk),\n    canProceed: canProceed.bind(null, sdk),\n    \n    getSavedTransactionMeta: getSavedTransactionMeta.bind(null, sdk),\n    createTransactionMeta: createTransactionMeta.bind(null, sdk),\n    getTransactionMeta: getTransactionMeta.bind(null, sdk),\n    saveTransactionMeta: saveTransactionMeta.bind(null, sdk),\n    clearTransactionMeta: clearTransactionMeta.bind(null, sdk),\n    isTransactionMetaValid,\n  };\n  return idx;\n}\n\n", "import { OktaAuthConstructor } from '../base/types';\nimport { MinimalOktaOAuthInterface } from '../oidc/types';\nimport {\n  IdxTransactionManagerInterface,\n  OktaAuthIdxConstructor,\n  OktaAuthIdxOptions,\n  MinimalIdxAPI,\n  WebauthnAPI,\n  MinimalOktaAuthIdxInterface\n} from './types';\nimport { IdxTransactionMeta } from './types/meta';\nimport { IdxStorageManagerInterface } from './types/storage';\nimport { createMinimalIdxAPI } from '../idx/factory/minimalApi';\nimport * as webauthn from './webauthn';\n\nexport function mixinMinimalIdx\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface,\n  TBase extends OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n    = OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n>\n(\n  Base: TBase\n): TBase & OktaAuthIdxConstructor<MinimalOktaAuthIdxInterface<M, S, O, TM>>\n{\n  return class OktaAuthIdx extends Base implements MinimalOktaAuthIdxInterface<M, S, O, TM>\n  {\n    idx: MinimalIdxAPI;\n    static webauthn: WebauthnAPI = webauthn;\n    \n    constructor(...args: any[]) {\n      super(...args);\n      this.idx = createMinimalIdxAPI(this);\n    }\n  };\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { decodeToken } from '../decodeToken';\nimport { exchangeCodeForTokens } from '../exchangeCodeForTokens';\nimport {\n  OktaAuthOAuthInterface,\n  BaseTokenAPI,\n} from '../types';\nimport { prepareTokenParams } from '../util';\n\n// Factory\nexport function createBaseTokenAPI(sdk: OktaAuthOAuthInterface): BaseTokenAPI {\n  const token: BaseTokenAPI = {\n    prepareTokenParams: prepareTokenParams.bind(null, sdk),\n    exchangeCodeForTokens: exchangeCodeForTokens.bind(null, sdk),\n    decode: decodeToken,\n  };\n\n  return token;\n}\n", "\nimport { OktaAuthConstructor } from '../../base/types';\nimport {\n  OAuthResponseType,\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  MinimalOktaOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n  BaseTokenAPI,\n  TransactionManagerInterface,\n  TransactionManagerConstructor,\n} from '../types';\nimport { createBaseTokenAPI } from '../factory/baseApi';\nimport { isLoginRedirect, hasResponseType } from '../util';\n\nimport { OktaAuthSessionInterface } from '../../session/types';\nexport function mixinMinimalOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface,\n  TBase extends OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthSessionInterface<S, O>>\n>\n(\n  Base: TBase,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>,\n): TBase & OktaAuthConstructor<MinimalOktaOAuthInterface<M, S, O, TM>>\n{\n  return class OktaAuthOAuth extends Base implements MinimalOktaOAuthInterface<M, S, O, TM>\n  {\n    token: BaseTokenAPI;\n    transactionManager: TM;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.transactionManager = new TransactionManagerConstructor(Object.assign({\n        storageManager: this.storageManager,\n      }, this.options.transactionManager));\n  \n      this.token = createBaseTokenAPI(this as any);\n    }\n\n    isLoginRedirect(): boolean {\n      return isLoginRedirect(this as any);\n    }\n\n    isPKCE(): boolean {\n      return !!this.options.pkce;\n    }\n\n    hasResponseType(responseType: OAuthResponseType): boolean {\n      return hasResponseType(responseType, this.options);\n    }\n\n    isAuthorizationCodeFlow(): boolean {\n      return this.hasResponseType('code');\n    }\n\n  };\n\n}\n", "import { OktaAuthOptionsConstructor } from '../../base/types';\nimport { StorageManagerConstructor } from '../../storage/types';\nimport { IdxTransactionManagerInterface, MinimalOktaAuthIdxInterface, OktaAuthIdxConstructor } from '../types/api';\nimport { IdxTransactionMeta } from '../types/meta';\nimport { IdxStorageManagerInterface } from '../types/storage';\nimport { OktaAuthIdxOptions } from '../types/options';\nimport { TransactionManagerConstructor, MinimalOktaOAuthInterface } from '../../oidc/types';\nimport { mixinMinimalIdx } from '../mixinMinimal';\nimport { createOktaAuthBase } from '../../base/factory';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinMinimalOAuth } from '../../oidc/mixin/minimal';\n\nexport function createMinimalOktaAuthIdx<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>,\n  O extends OktaAuthIdxOptions = OktaAuthIdxOptions,\n  TM extends IdxTransactionManagerInterface = IdxTransactionManagerInterface\n>(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n)\n: OktaAuthIdxConstructor<\n  MinimalOktaAuthIdxInterface<M, S, O, TM> & MinimalOktaOAuthInterface<M, S, O, TM>\n>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinMinimalOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  // do not mixin core\n  const WithIdx = mixinMinimalIdx(WithOAuth);\n  return WithIdx;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { OktaAuthBaseOptions } from './types';\n\nexport function createBaseOptionsConstructor() {\n\n  return class BaseOptionsConstructor implements Required<OktaAuthBaseOptions> {\n    devMode: boolean;\n\n    constructor(args: any) {\n      this.devMode = !!args.devMode;\n    }\n  };\n\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n/* eslint-disable complexity */\nimport { StorageManagerOptions, StorageUtil, OktaAuthStorageOptions } from '../types';\nimport { warn } from '../../util';\n\nimport { default as browserStorage } from '../../browser/browserStorage';\n\nexport function getStorage(): StorageUtil {\n  const storageUtil = Object.assign({}, browserStorage, {\n    inMemoryStore: {} // create unique storage for this instance\n  });\n  return storageUtil;\n}\n\nexport const STORAGE_MANAGER_OPTIONS: StorageManagerOptions = {\n  token: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  cache: {\n    storageTypes: [\n      'localStorage',\n      'sessionStorage',\n      'cookie'\n    ]\n  },\n  transaction: {\n    storageTypes: [\n      'sessionStorage',\n      'localStorage',\n      'cookie'\n    ]\n  },\n  'shared-transaction': {\n    storageTypes: [\n      'localStorage'\n    ]\n  },\n  'original-uri': {\n    storageTypes: [\n      'localStorage'\n    ]\n  }\n};\n\nexport function getCookieSettings(args: OktaAuthStorageOptions = {}, isHTTPS: boolean) {\n  // Secure cookies will be automatically used on a HTTPS connection\n  // Non-secure cookies will be automatically used on a HTTP connection\n  // secure option can override the automatic behavior\n  var cookieSettings = args.cookies || {};\n  if (typeof cookieSettings.secure === 'undefined') {\n    cookieSettings.secure = isHTTPS;\n  }\n  if (typeof cookieSettings.sameSite === 'undefined') {\n    cookieSettings.sameSite = cookieSettings.secure ? 'none' : 'lax';\n  }\n\n  // If secure=true, but the connection is not HTTPS, set secure=false.\n  if (cookieSettings.secure && !isHTTPS) {\n    // eslint-disable-next-line no-console\n    warn(\n      'The current page is not being served with the HTTPS protocol.\\n' +\n      'For security reasons, we strongly recommend using HTTPS.\\n' +\n      'If you cannot use HTTPS, set \"cookies.secure\" option to false.'\n    );\n    cookieSettings.secure = false;\n  }\n\n  // Chrome >= 80 will block cookies with SameSite=None unless they are also Secure\n  // If sameSite=none, but the connection is not HTTPS, set sameSite=lax.\n  if (cookieSettings.sameSite === 'none' && !cookieSettings.secure) {\n    cookieSettings.sameSite = 'lax';\n  }\n\n  return cookieSettings;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createBaseOptionsConstructor } from '../../base';\nimport { CookieOptions, OktaAuthStorageOptions, StorageManagerOptions, StorageUtil } from '../types';\nimport { getStorage, STORAGE_MANAGER_OPTIONS, getCookieSettings } from './node';\nimport { isHTTPS } from '../../features';\n\nexport function createStorageOptionsConstructor() {\n\n  const BaseOptionsConstructor = createBaseOptionsConstructor();\n  return class StorageOptionsConstructor extends BaseOptionsConstructor implements Required<OktaAuthStorageOptions> {\n    cookies: CookieOptions;\n    storageUtil: StorageUtil;\n    storageManager: StorageManagerOptions;\n    \n    constructor(args: any) {\n      super(args);\n      this.cookies = getCookieSettings(args, isHTTPS())!;\n      this.storageUtil = args.storageUtil || getStorage();\n      this.storageManager = { ...STORAGE_MANAGER_OPTIONS, ...args.storageManager };\n    }\n  };\n}\n", "/*!\n * Copyright (c) 2018-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport crossFetch from 'cross-fetch';\nimport { FetchOptions, HttpResponse } from '../http/types';\n\n// content-type = application/json OR application/ion+json\nconst appJsonContentTypeRegex = /application\\/\\w*\\+?json/;\n\nfunction readData(response: Response): Promise<object | string> {\n  if (response.headers.get('Content-Type') &&\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    response.headers.get('Content-Type')!.toLowerCase().indexOf('application/json') >= 0) {\n  return response.json()\n    // JSON parse can fail if response is not a valid object\n    .catch(e => {\n      return {\n        error: e,\n        errorSummary: 'Could not parse server response'\n      };\n    });\n  } else {\n    return response.text();\n  }\n}\n\nfunction formatResult(status: number, data: object | string, response: Response) {\n  const isObject = typeof data === 'object';\n  const headers = {};\n  for (const pair of (response.headers as any).entries()) {\n    headers[pair[0]] = pair[1];\n  }\n  const result: HttpResponse = {\n    responseText: isObject ? JSON.stringify(data) : data as string,\n    status: status,\n    headers\n  };\n  if (isObject) {\n    result.responseType = 'json';\n    result.responseJSON = data as object;\n  }\n  return result;\n}\n\n/* eslint-disable complexity */\nfunction fetchRequest(method: string, url: string, args: FetchOptions) {\n  var body = args.data;\n  var headers = args.headers || {};\n  var contentType = (headers['Content-Type'] || headers['content-type'] || '');\n\n  if (body && typeof body !== 'string') {\n    // JSON encode body (if appropriate)\n    if (appJsonContentTypeRegex.test(contentType)) {\n      body = JSON.stringify(body);\n    }\n    else if (contentType === 'application/x-www-form-urlencoded') {\n      body = Object.entries(body)\n      .map( ([param, value]) => `${param}=${encodeURIComponent(value)}` )\n      .join('&');\n    }\n  }\n\n  var fetch = global.fetch || crossFetch;\n  var fetchPromise = fetch(url, {\n    method: method,\n    headers: args.headers,\n    body: body as string,\n    credentials: args.withCredentials ? 'include' : 'omit'\n  });\n\n  if (!fetchPromise.finally) {\n    fetchPromise = Promise.resolve(fetchPromise);\n  }\n\n  return fetchPromise.then(function(response) {\n    var error = !response.ok;\n    var status = response.status;\n    return readData(response)\n      .then(data => {\n        return formatResult(status, data, response);\n      })\n      .then(result => {\n        if (error || result.responseJSON?.error) {\n          // Throwing result object since error handling is done in http.js\n          throw result;\n        }\n        return result;\n      });\n  });\n}\n\nexport default fetchRequest;\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createStorageOptionsConstructor } from '../storage';\nimport { HttpRequestClient, OktaAuthHttpOptions, RequestOptions } from './types';\nimport fetchRequest from '../fetch/fetchRequest';\n\nexport function createHttpOptionsConstructor() {\n  const StorageOptionsConstructor = createStorageOptionsConstructor();\n  return class HttpOptionsConstructor extends StorageOptionsConstructor implements Required<OktaAuthHttpOptions> {\n    issuer: string;\n    transformErrorXHR: (xhr: object) => any;\n    headers: object;\n    httpRequestClient: HttpRequestClient;\n    httpRequestInterceptors: ((request: RequestOptions) => void)[];\n    \n    constructor(args: any) {\n      super(args);\n      this.issuer = args.issuer;\n      this.transformErrorXHR = args.transformErrorXHR;\n      this.headers = args.headers;\n      this.httpRequestClient = args.httpRequestClient || fetchRequest;\n      this.httpRequestInterceptors = args.httpRequestInterceptors;\n    }\n  };\n}\n", "export const enableSharedStorage = true;\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { DEFAULT_MAX_CLOCK_SKEW } from '../../constants';\nimport { removeTrailingSlash, toAbsoluteUrl } from '../../util/url';\nimport { isBrowser } from '../../features';\nimport { createHttpOptionsConstructor } from '../../http/options';\nimport {\n  OAuthResponseMode,\n  OAuthResponseType,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  SetLocationFunction,\n  TokenManagerOptions,\n  TransactionManagerOptions\n} from '../types';\nimport { enableSharedStorage } from './node';\nimport AuthSdkError from '../../errors/AuthSdkError';\n\nfunction assertValidConfig(args) {\n  args = args || {};\n\n  var scopes = args.scopes;\n  if (scopes && !Array.isArray(scopes)) {\n    throw new AuthSdkError('scopes must be a array of strings. ' +\n      'Required usage: new OktaAuth({scopes: [\"openid\", \"email\"]})');\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  var issuer = args.issuer!;\n  if (!issuer) {\n    throw new AuthSdkError('No issuer passed to constructor. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  var isUrlRegex = new RegExp('^http?s?://.+');\n  if (!isUrlRegex.test(issuer)) {\n    throw new AuthSdkError('Issuer must be a valid URL. ' + \n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com/oauth2/{authServerId}\"})');\n  }\n\n  if (issuer.indexOf('-admin.') !== -1) {\n    throw new AuthSdkError('Issuer URL passed to constructor contains \"-admin\" in subdomain. ' +\n      'Required usage: new OktaAuth({issuer: \"https://{yourOktaDomain}.com})');\n  }\n}\n\nexport function createOAuthOptionsConstructor() {\n  const HttpOptionsConstructor = createHttpOptionsConstructor();\n  return class OAuthOptionsConstructor\n    extends HttpOptionsConstructor\n    implements Required<OktaAuthOAuthOptions>\n  {\n    // CustomUrls\n    issuer: string;\n    authorizeUrl: string;\n    userinfoUrl: string;\n    tokenUrl: string;\n    revokeUrl: string;\n    logoutUrl: string;\n    \n    // TokenParams\n    pkce: boolean;\n    clientId: string;\n    redirectUri: string;\n    responseType: OAuthResponseType | OAuthResponseType[];\n    responseMode: OAuthResponseMode;\n    state: string;\n    scopes: string[];\n    ignoreSignature: boolean;\n    codeChallenge: string;\n    codeChallengeMethod: string;\n    acrValues: string;\n    maxAge: string | number;\n\n    // Additional options\n    tokenManager: TokenManagerOptions;\n    postLogoutRedirectUri: string;\n    restoreOriginalUri: (oktaAuth: OktaAuthOAuthInterface, originalUri?: string) => Promise<void>;\n    transactionManager: TransactionManagerOptions;\n\n    // For server-side web applications ONLY!\n    clientSecret: string;\n    setLocation: SetLocationFunction;\n\n    // Workaround for bad client time/clock\n    ignoreLifetime: boolean;\n    maxClockSkew: number;\n\n\n    // eslint-disable-next-line max-statements\n    constructor(options: any) {\n      super(options);\n      \n      assertValidConfig(options);\n      \n      this.issuer = removeTrailingSlash(options.issuer);\n      this.tokenUrl = removeTrailingSlash(options.tokenUrl);\n      this.authorizeUrl = removeTrailingSlash(options.authorizeUrl);\n      this.userinfoUrl = removeTrailingSlash(options.userinfoUrl);\n      this.revokeUrl = removeTrailingSlash(options.revokeUrl);\n      this.logoutUrl = removeTrailingSlash(options.logoutUrl);\n\n      this.pkce = options.pkce === false ? false : true; // PKCE defaults to true\n      this.clientId = options.clientId;\n      this.redirectUri = options.redirectUri;\n      if (isBrowser()) {\n        this.redirectUri = toAbsoluteUrl(options.redirectUri, window.location.origin); // allow relative URIs\n      }\n      this.responseType = options.responseType;\n      this.responseMode = options.responseMode;\n      this.state = options.state;\n      this.scopes = options.scopes;\n      // Give the developer the ability to disable token signature validation.\n      this.ignoreSignature = !!options.ignoreSignature;\n      this.codeChallenge = options.codeChallenge;\n      this.codeChallengeMethod = options.codeChallengeMethod;\n      this.acrValues = options.acrValues;\n      this.maxAge = options.maxAge;\n\n      this.tokenManager = options.tokenManager;\n      this.postLogoutRedirectUri = options.postLogoutRedirectUri;\n      this.restoreOriginalUri = options.restoreOriginalUri;\n      this.transactionManager = { enableSharedStorage, ...options.transactionManager };\n      \n      this.clientSecret = options.clientSecret;\n      this.setLocation = options.setLocation;\n      \n      // As some end user's devices can have their date \n      // and time incorrectly set, allow for the disabling\n      // of the jwt liftetime validation\n      this.ignoreLifetime = !!options.ignoreLifetime;\n\n      // Digital clocks will drift over time, so the server\n      // can misalign with the time reported by the browser.\n      // The maxClockSkew allows relaxing the time-based\n      // validation of tokens (in seconds, not milliseconds).\n      // It currently defaults to 300, because 5 min is the\n      // default maximum tolerance allowed by Kerberos.\n      // (https://technet.microsoft.com/en-us/library/cc976357.aspx)\n      if (!options.maxClockSkew && options.maxClockSkew !== 0) {\n        this.maxClockSkew = DEFAULT_MAX_CLOCK_SKEW;\n      } else {\n        this.maxClockSkew = options.maxClockSkew;\n      }\n\n    }\n  };\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createOAuthOptionsConstructor } from '../oidc';\nimport { AuthState, OktaAuthCoreInterface, OktaAuthCoreOptions, ServiceManagerOptions } from './types';\n\n\nexport function createCoreOptionsConstructor()\n{\n  const OAuthOptionsConstructor = createOAuthOptionsConstructor();\n  return class CoreOptionsConstructor\n    extends OAuthOptionsConstructor\n    implements Required<OktaAuthCoreOptions>\n  {\n    services: ServiceManagerOptions;\n    transformAuthState: (oktaAuth: OktaAuthCoreInterface, authState: AuthState) => Promise<AuthState>;\n\n    constructor(options: any) {\n      super(options);\n      this.services = options.services;\n      this.transformAuthState = options.transformAuthState;\n    }\n  };\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { createCoreOptionsConstructor } from '../core/options';\nimport { FlowIdentifier } from './types/FlowIdentifier';\nimport { OktaAuthIdxOptions } from './types/options';\n\n\nexport function createIdxOptionsConstructor() {\n  const CoreOptionsConstructor = createCoreOptionsConstructor();\n  return class IdxOptionsConstructor\n    extends CoreOptionsConstructor \n    implements Required<OktaAuthIdxOptions>\n  {\n    flow: FlowIdentifier;\n    activationToken: string;\n    recoveryToken: string;\n  \n    // BETA WARNING: configs in this section are subject to change without a breaking change notice\n    idx: {\n      useGenericRemediator?: boolean;\n      exchangeCodeForTokens?: boolean;\n    };\n  \n    constructor(options: any) {\n      super(options);\n  \n      this.flow = options.flow;\n      this.activationToken = options.activationToken;\n      this.recoveryToken = options.recoveryToken;\n      this.idx = options.idx;\n    }\n  };\n  \n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { StorageProvider, SimpleStorage } from './types';\n\n// formerly known as \"storageBuilder\". Represents an object saved under a key/name.\nexport class SavedObject implements StorageProvider {\n  storageProvider: SimpleStorage;\n  storageName: string;\n\n  constructor(storage: SimpleStorage, storageName: string) {\n    if (!storage) {\n      throw new AuthSdkError('\"storage\" is required');\n    }\n\n    if (typeof storageName !== 'string' || !storageName.length) {\n      throw new AuthSdkError('\"storageName\" is required');\n    }\n\n    this.storageName = storageName;\n    this.storageProvider = storage;\n  }\n\n  //\n  // SimpleStorage interface\n  //\n\n  getItem(key: string) {\n    return this.getStorage()[key];\n  }\n\n  setItem(key: string, value: any) {\n    return this.updateStorage(key, value);\n  }\n\n  removeItem(key: string) {\n    return this.clearStorage(key);\n  }\n\n  //\n  // StorageProvider interface\n  //\n\n  getStorage() {\n    var storageString = this.storageProvider.getItem(this.storageName);\n    storageString = storageString || '{}';\n    try {\n      return JSON.parse(storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to parse storage string: ' + this.storageName);\n    }\n  }\n\n  setStorage(obj?: any) {\n    try {\n      var storageString = obj ? JSON.stringify(obj) : '{}';\n      this.storageProvider.setItem(this.storageName, storageString);\n    } catch(e) {\n      throw new AuthSdkError('Unable to set storage: ' + this.storageName);\n    }\n  }\n\n  clearStorage(key?: string) {\n    if (!key) {\n      // clear all\n      if (this.storageProvider.removeItem) {\n        this.storageProvider.removeItem(this.storageName);\n      } else {\n        this.setStorage();\n      }\n      return;\n    }\n\n    var obj = this.getStorage();\n    delete obj[key];\n    this.setStorage(obj);\n  }\n\n  updateStorage(key, value) {\n    var obj = this.getStorage();\n    obj[key] = value;\n    this.setStorage(obj);\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\n\nimport {\n  TOKEN_STORAGE_NAME,\n  CACHE_STORAGE_NAME,\n} from '../constants';\nimport {\n  StorageUtil,\n  StorageProvider,\n  StorageOptions,\n  CookieOptions,\n  StorageManagerOptions,\n  SimpleStorage,\n  StorageManagerInterface\n} from './types';\nimport { SavedObject } from './SavedObject';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\n\nexport function logServerSideMemoryStorageWarning(options: StorageOptions) {\n  if (!isBrowser() && !options.storageProvider && !options.storageKey) {\n    // eslint-disable-next-line max-len\n    warn('Memory storage can only support simple single user use case on server side, please provide custom storageProvider or storageKey if advanced scenarios need to be supported.');\n  }\n}\n\n\nexport class BaseStorageManager implements StorageManagerInterface {\n  storageManagerOptions: StorageManagerOptions;\n  cookieOptions: CookieOptions;\n  storageUtil: StorageUtil;\n\n  constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n    this.storageManagerOptions = storageManagerOptions;\n    this.cookieOptions = cookieOptions;\n    this.storageUtil = storageUtil;\n  }\n\n  // combines defaults in order\n  getOptionsForSection(sectionName: string, overrideOptions?: StorageOptions) {\n    return Object.assign({}, this.storageManagerOptions[sectionName], overrideOptions);\n  }\n \n  // generic method to get any available storage provider\n  // eslint-disable-next-line complexity\n  getStorage(options: StorageOptions): SimpleStorage {\n    options = Object.assign({}, this.cookieOptions, options); // set defaults\n\n    if (options.storageProvider) {\n      return options.storageProvider;\n    }\n\n    let { storageType, storageTypes } = options;\n\n    if(storageType === 'sessionStorage') {\n      options.sessionCookie = true;\n    }\n\n    // If both storageType and storageTypes are specified, then storageType will be used first\n    // If storageType cannot be used but it matches an entry in storageTypes, subsequent entries may be used as fallback\n    // if storageType does not match an entry in storageTypes then storageType is used with no fallback.\n    if (storageType && storageTypes) {\n      const idx = storageTypes.indexOf(storageType);\n      if (idx >= 0) {\n        storageTypes = storageTypes.slice(idx);\n        storageType = undefined;\n      }\n    }\n\n    if (!storageType) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      storageType = this.storageUtil.findStorageType(storageTypes!);\n    }\n    return this.storageUtil.getStorageByType(storageType, options);\n  }\n\n  // access_token, id_token, refresh_token\n  getTokenStorage(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('token', options);\n    logServerSideMemoryStorageWarning(options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || TOKEN_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n  // caches well-known response, among others\n  getHttpCache(options?: StorageOptions): StorageProvider {\n    options = this.getOptionsForSection('cache', options);\n    const storage = this.getStorage(options);\n    const storageKey = options.storageKey || CACHE_STORAGE_NAME;\n    return new SavedObject(storage, storageKey);\n  }\n\n}\n", "import {\n  CookieOptions,\n  StorageManagerOptions,\n  StorageOptions,\n  StorageUtil\n} from '../storage/types';\nimport { BaseStorageManager, logServerSideMemoryStorageWarning } from '../storage/BaseStorageManager';\nimport { TransactionStorage, OAuthTransactionMeta, OAuthStorageManagerInterface, PKCETransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { ORIGINAL_URI_STORAGE_NAME, SHARED_TRANSACTION_STORAGE_NAME, TRANSACTION_STORAGE_NAME } from '../constants';\n\n\nexport function createOAuthStorageManager<M extends OAuthTransactionMeta = PKCETransactionMeta>()\n{\n  return class OAuthStorageManager\n    extends BaseStorageManager\n    implements OAuthStorageManagerInterface<M>\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    getTransactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getSharedTansactionStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('shared-transaction', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || SHARED_TRANSACTION_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n\n    getOriginalUriStorage(options?: StorageOptions): TransactionStorage<M> {\n      options = this.getOptionsForSection('original-uri', options);\n      logServerSideMemoryStorageWarning(options);\n      const storage = this.getStorage(options);\n      const storageKey = options.storageKey || ORIGINAL_URI_STORAGE_NAME;\n      return new SavedObject(storage, storageKey);\n    }\n  };\n\n}\n", "import { createOAuthStorageManager } from '../oidc/storage';\nimport { PKCETransactionMeta } from '../oidc/types';\n\nexport function createCoreStorageManager<M extends PKCETransactionMeta = PKCETransactionMeta>() {\n  return createOAuthStorageManager<M>();\n}\n", "import { CookieOptions, StorageManagerOptions, StorageOptions, StorageUtil } from '../storage/types';\nimport {  IdxTransactionMeta } from './types';\nimport { SavedObject } from '../storage';\nimport { IDX_RESPONSE_STORAGE_NAME } from '../constants';\nimport { createCoreStorageManager } from '../core/storage';\nimport { IdxResponseStorage } from './types/storage';\nimport { isBrowser } from '../features';\nimport { warn } from '../util';\nimport AuthSdkError from '../errors/AuthSdkError';\n\nexport function createIdxStorageManager<M extends IdxTransactionMeta>()\n{\n  const CoreStorageManager = createCoreStorageManager<M>();\n  return class IdxStorageManager extends CoreStorageManager\n  {\n    constructor(storageManagerOptions: StorageManagerOptions, cookieOptions: CookieOptions, storageUtil: StorageUtil) {\n      super(storageManagerOptions, cookieOptions, storageUtil);\n    }\n\n    // intermediate idxResponse\n    // store for network traffic optimazation purpose\n    // TODO: revisit in auth-js 6.0 epic JIRA: OKTA-399791\n    getIdxResponseStorage(options?: StorageOptions): IdxResponseStorage | null {\n      let storage;\n      if (isBrowser()) {\n        // on browser side only use memory storage \n        try {\n          storage = this.storageUtil.getStorageByType('memory', options);\n        } catch (e) {\n          // it's ok to miss response storage\n          // eslint-disable-next-line max-len\n          warn('No response storage found, you may want to provide custom implementation for intermediate idx responses to optimize the network traffic');\n        }\n      } else {\n        // on server side re-use transaction custom storage\n        const transactionStorage = this.getTransactionStorage(options);\n        if (transactionStorage) {\n          storage = {\n            getItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (transaction && transaction[key]) {\n                return transaction[key];\n              }\n              return null;\n            },\n            setItem: (key, val) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                throw new AuthSdkError('Transaction has been cleared, failed to save idxState');\n              }\n              transaction[key] = val;\n              transactionStorage.setStorage(transaction);\n            },\n            removeItem: (key) => {\n              const transaction = transactionStorage.getStorage();\n              if (!transaction) {\n                return;\n              }\n              delete transaction[key];\n              transactionStorage.setStorage(transaction);\n            }\n          };\n        }\n      }\n\n      if (!storage) {\n        return null;\n      }\n\n      return new SavedObject(storage, IDX_RESPONSE_STORAGE_NAME);\n    }\n  };\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { IdxTransactionMeta } from '../../idx/types/meta';\nimport { OAuthTransactionMeta, PKCETransactionMeta } from './meta';\nimport { OAuthStorageManagerInterface } from './storage';\n\nexport interface TransactionManagerOptions\n{\n  storageManager?: OAuthStorageManagerInterface;\n  enableSharedStorage?: boolean; // default true\n  saveNonceCookie?: boolean; // default true\n  saveStateCookie?: boolean; // default true\n  saveParamsCookie?: boolean; // default true\n  saveLastResponse?: boolean; // default true\n}\n\n\nexport type CustomAuthTransactionMeta = Record<string, string | undefined>;\n\nexport type TransactionMeta =\n  IdxTransactionMeta |\n  PKCETransactionMeta |\n  OAuthTransactionMeta |\n  CustomAuthTransactionMeta;\n\n\nfunction isObjectWithProperties(obj) {\n  if (!obj || typeof obj !== 'object' || Object.values(obj).length === 0) {\n    return false;\n  }\n  return true;\n}\n\nexport function isOAuthTransactionMeta(obj: any): obj is OAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  return !!obj.redirectUri || !!obj.responseType;\n}\n\nexport function isPKCETransactionMeta(obj: any): obj is PKCETransactionMeta {\n  if (!isOAuthTransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).codeVerifier;\n}\n\nexport function isIdxTransactionMeta(obj: any): obj is IdxTransactionMeta {\n  if (!isPKCETransactionMeta(obj)) {\n    return false;\n  }\n  return !!(obj as any).interactionHandle;\n}\n\nexport function isCustomAuthTransactionMeta(obj: any): obj is CustomAuthTransactionMeta {\n  if (!isObjectWithProperties(obj)) {\n    return false;\n  }\n  const isAllStringValues = Object.values(obj).find((value) => (typeof value !== 'string')) === undefined;\n  return isAllStringValues;\n}\n\nexport function isTransactionMeta(obj: any): obj is TransactionMeta {\n  if (isOAuthTransactionMeta(obj) || isCustomAuthTransactionMeta(obj)) {\n    return true;\n  }\n  return false;\n}\n", "import { OAuthStorageManagerInterface, OAuthTransactionMeta, isTransactionMeta } from '../types';\n\nconst MAX_ENTRY_LIFETIME = 30 * 60 * 1000; // 30 minutes\n\nexport function pruneSharedStorage<M extends OAuthTransactionMeta>(storageManager: OAuthStorageManagerInterface<M>) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  Object.keys(entries).forEach(state => {\n    const entry = entries[state];\n    const age = Date.now() - entry.dateCreated;\n    if (age > MAX_ENTRY_LIFETIME) {\n      delete entries[state];\n    }\n  });\n  sharedStorage.setStorage(entries);\n}\n\nexport function saveTransactionToSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string, meta: M\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  entries[state] = {\n    dateCreated: Date.now(),\n    transaction: meta\n  };\n  sharedStorage.setStorage(entries);\n}\n\n\nexport function loadTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  const entry = entries[state];\n  if (entry && entry.transaction && isTransactionMeta(entry.transaction)) {\n    return entry.transaction;\n  }\n  return null;\n}\n\nexport function clearTransactionFromSharedStorage<M extends OAuthTransactionMeta>(\n  storageManager: OAuthStorageManagerInterface<M>, state: string\n) {\n  const sharedStorage = storageManager.getSharedTansactionStorage();\n  const entries = sharedStorage.getStorage();\n  delete entries[state];\n  sharedStorage.setStorage(entries);\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { StorageProvider } from '../storage/types';\nimport {\n  TransactionMeta,\n  isTransactionMeta,\n  TransactionMetaOptions,\n  TransactionManagerOptions,\n  OAuthTransactionMeta,\n  OAuthStorageManagerInterface,\n  ClearTransactionMetaOptions,\n  TransactionManagerInterface,\n  PKCETransactionMeta\n} from './types';\nimport { warn } from '../util';\nimport {\n  clearTransactionFromSharedStorage,\n  loadTransactionFromSharedStorage,\n  pruneSharedStorage,\n  saveTransactionToSharedStorage\n} from './util/sharedStorage';\n\n\nexport function createTransactionManager\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>\n>\n()\n{\n  return class TransactionManager implements TransactionManagerInterface\n  {\n    options: TransactionManagerOptions;\n    storageManager: S;\n    enableSharedStorage: boolean;\n    saveLastResponse: boolean;\n\n    constructor(options: TransactionManagerOptions) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.storageManager = options.storageManager! as S;\n      this.enableSharedStorage = options.enableSharedStorage === false ? false : true;\n      this.saveLastResponse = options.saveLastResponse === false ? false : true;\n      this.options = options;\n    }\n\n    // eslint-disable-next-line complexity\n    clear(options: ClearTransactionMetaOptions = {}) {\n      const transactionStorage: StorageProvider = this.storageManager.getTransactionStorage();\n      const meta = transactionStorage.getStorage();\n\n      // Clear primary storage (by default, sessionStorage on browser)\n      transactionStorage.clearStorage();\n\n      // Usually we want to also clear shared storage unless another tab may need it to continue/complete a flow\n      if (this.enableSharedStorage && options.clearSharedStorage !== false) {\n        const state = options.state || meta?.state;\n        if (state) {\n          clearTransactionFromSharedStorage(this.storageManager, state);\n        }\n      }\n    }\n\n    // eslint-disable-next-line complexity\n    save(meta: M, options: TransactionMetaOptions = {}) {\n      // There must be only one transaction executing at a time.\n      // Before saving, check to see if a transaction is already stored.\n      // An existing transaction indicates a concurrency/race/overlap condition\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      const obj = storage.getStorage();\n      // oie process may need to update transaction in the middle of process for tracking purpose\n      // false alarm might be caused \n      // TODO: revisit for a better solution, https://oktainc.atlassian.net/browse/OKTA-430919\n      if (isTransactionMeta(obj) && !options.muteWarning) {\n        // eslint-disable-next-line max-len\n        warn('a saved auth transaction exists in storage. This may indicate another auth flow is already in progress.');\n      }\n\n      storage.setStorage(meta);\n\n      // Shared storage allows continuation of transaction in another tab\n      if (this.enableSharedStorage && meta.state) {\n        saveTransactionToSharedStorage(this.storageManager, meta.state, meta);\n      }\n    }\n\n    exists(options: TransactionMetaOptions = {}): boolean {\n      try {\n        const meta = this.load(options);\n        return !!meta;\n      } catch {\n        return false;\n      }\n    }\n\n    // load transaction meta from storage\n    // eslint-disable-next-line complexity,max-statements\n    load(options: TransactionMetaOptions = {}): TransactionMeta | null {\n\n      let meta: TransactionMeta;\n\n      // If state was passed, try loading transaction data from shared storage\n      if (this.enableSharedStorage && options.state) {\n        pruneSharedStorage(this.storageManager); // prune before load\n        meta = loadTransactionFromSharedStorage(this.storageManager, options.state);\n        if (isTransactionMeta(meta)) {\n          return meta;\n        }\n      }\n\n      let storage: StorageProvider = this.storageManager.getTransactionStorage();\n      meta = storage.getStorage();\n      if (isTransactionMeta(meta)) {\n        // if we have meta in the new location, there is no need to go further\n        return meta;\n      }\n\n      return null;\n    }\n\n  };\n}\n", "import { ClearTransactionMetaOptions, TransactionManagerOptions } from '../oidc/types';\nimport { createTransactionManager } from '../oidc/TransactionManager';\nimport { IdxTransactionMeta, IntrospectOptions } from './types';\nimport { isRawIdxResponse } from './types/idx-js';\nimport { IdxStorageManagerInterface, SavedIdxResponse } from './types/storage';\n\nexport function createIdxTransactionManager\n<\n  M extends IdxTransactionMeta = IdxTransactionMeta,\n  S extends IdxStorageManagerInterface<M> = IdxStorageManagerInterface<M>\n>\n()\n{\n  const TransactionManager = createTransactionManager<M, S>();\n  return class IdxTransactionManager extends TransactionManager\n  {\n    constructor(options: TransactionManagerOptions) {\n      super(options);\n    }\n\n    clear(options: ClearTransactionMetaOptions = {}) {\n      super.clear(options);\n\n      if (options.clearIdxResponse !== false) {\n        this.clearIdxResponse();\n      }\n    }\n    \n    saveIdxResponse(data: SavedIdxResponse): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return;\n      }\n      storage.setStorage(data);\n    }\n\n    // eslint-disable-next-line complexity\n    loadIdxResponse(options?: IntrospectOptions): SavedIdxResponse | null {\n      if (!this.saveLastResponse) {\n        return null;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      if (!storage) {\n        return null;\n      }\n      const storedValue = storage.getStorage();\n      if (!storedValue || !isRawIdxResponse(storedValue.rawIdxResponse)) {\n        return null;\n      }\n\n      if (options) {\n        const { interactionHandle } = options;\n        if (interactionHandle && storedValue.interactionHandle !== interactionHandle) {\n          return null;\n        }\n      }\n\n      return storedValue;\n    }\n\n    clearIdxResponse(): void {\n      if (!this.saveLastResponse) {\n        return;\n      }\n      const storage = this.storageManager.getIdxResponseStorage();\n      storage?.clearStorage();\n    }\n  };\n}\n", "import { OktaAuthHttpInterface } from '../../http/types';\n\nexport type TransactionLink = {\n  href: string;\n  hints?: {\n    allow?: string[];\n  };\n}\n\nexport type TransactionLinks = {\n  self: TransactionLink;\n  [property: string]: TransactionLink;\n}\n\ntype TransactionOptions = {\n  // TODO: move res type to http module\n  res: {\n    headers: Record<string, string>;\n    _links?: Record<string, TransactionLink>;\n    [property: string]: unknown;\n  };\n  accessToken: string;\n};\n\nexport default class BaseTransaction {\n  // Deprecated\n  headers?: Record<string, string>;\n\n  constructor(oktaAuth: OktaAuthHttpInterface, options: TransactionOptions) {\n    const { res } = options;\n    const { headers, ...rest } = res;\n    \n    // assign required fields from res\n    if (headers) {\n      this.headers = headers;\n    }\n\n    // add all rest fields from res\n    Object.keys(rest).forEach(key => {\n      if (key === '_links') {\n        return;\n      }\n      this[key] = rest[key];\n    });\n  }\n}\n\nexport interface TransactionType<T extends BaseTransaction = BaseTransaction> extends Function {\n  new (oktaAuth: OktaAuthHttpInterface, options: TransactionOptions): T;\n  prototype: T;\n}\n", "import { \n  default as BaseTransaction,\n  TransactionType,\n  TransactionLinks\n} from './transactions/Base';\nimport { httpRequest } from '../http';\nimport { AuthSdkError } from '../errors';\nimport { MyAccountRequestOptions as RequestOptions } from './types';\nimport { OktaAuthOAuthInterface } from '../oidc/types';\n\ntype SendRequestOptions = RequestOptions & {\n  url: string;\n  method: string;\n}\n\n/* eslint-disable complexity */\nexport async function sendRequest<\n  T extends BaseTransaction = BaseTransaction,\n  N extends 'plural' | 'single' = 'single',\n  NT = N extends 'plural' ? T[] : T\n> (\n  oktaAuth: OktaAuthOAuthInterface, \n  options: SendRequestOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): Promise<NT> {\n  const {\n    accessToken: accessTokenObj\n  } = oktaAuth.tokenManager.getTokensSync();\n  \n  const accessToken = options.accessToken || accessTokenObj?.accessToken;\n  const issuer = oktaAuth.getIssuerOrigin();\n  const { url, method, payload } = options;\n  const requestUrl = url.startsWith(issuer!) ? url : `${issuer}${url}`;\n\n  if (!accessToken) {\n    throw new AuthSdkError('AccessToken is required to request MyAccount API endpoints.');\n  }\n  \n  const res = await httpRequest(oktaAuth, {\n    headers: { 'Accept': '*/*;okta-version=1.0.0' },\n    accessToken,\n    url: requestUrl,\n    method,\n    ...(payload && { args: payload })\n  });\n\n  let ret: T | T[];\n  if (Array.isArray(res)) {\n    ret = res.map(item => new TransactionClass(oktaAuth, { \n      res: item, \n      accessToken\n    }));\n  } else {\n    ret = new TransactionClass(oktaAuth, { \n      res, \n      accessToken\n    });\n  }\n  return ret as NT;\n}\n/* eslint-enable complexity */\n\nexport type GenerateRequestFnFromLinksOptions = {\n  oktaAuth: OktaAuthOAuthInterface;\n  accessToken: string;\n  methodName: string;\n  links: TransactionLinks;\n}\n\ntype IRequestFnFromLinks<T extends BaseTransaction> = (payload?) => Promise<T>;\n\nexport function generateRequestFnFromLinks<T extends BaseTransaction>(\n  {\n    oktaAuth, \n    accessToken,\n    methodName,\n    links,\n  }: GenerateRequestFnFromLinksOptions,\n  TransactionClass: TransactionType<T> = BaseTransaction as TransactionType<T>,\n): IRequestFnFromLinks<T> {\n  for (const method of ['GET', 'POST', 'PUT', 'DELETE']) {\n    if (method.toLowerCase() === methodName) {\n      const link = links.self;\n      return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n        accessToken,\n        url: link.href,\n        method,\n        payload,\n      }, TransactionClass));\n    }\n  }\n  \n  const link = links[methodName];\n  if (!link) {\n    throw new AuthSdkError(`No link is found with methodName: ${methodName}`);\n  }\n\n  return (async (payload?) => sendRequest<T, 'single'>(oktaAuth, {\n    accessToken,\n    url: link.href,\n    method: link.hints!.allow![0],\n    payload,\n  }, TransactionClass));\n}\n", "import BaseTransaction from './Base';\n\nexport default class ProfileTransaction extends BaseTransaction {\n  createdAt: string;\n  modifiedAt: string;\n  profile: Record<string, string>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { createdAt, modifiedAt, profile } = options.res;\n    this.createdAt = createdAt;\n    this.modifiedAt = modifiedAt;\n    this.profile = profile;\n  }\n}\n", "import BaseTransaction from './Base';\n\nexport default class ProfileSchemaTransaction extends BaseTransaction {\n  properties: Record<string, object>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    this.properties = options.res.properties;\n  }\n}\n", "import {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta\n} from '../oidc/types';\n\nexport type { \n  EmailTransaction, \n  EmailStatusTransaction,\n  EmailChallengeTransaction,\n  PhoneTransaction,\n  ProfileTransaction,\n  ProfileSchemaTransaction,\n  PasswordTransaction,\n  BaseTransaction\n} from './transactions';\n\nexport enum EmailRole {\n  PRIMARY = 'PRIMARY',\n  SECONDARY = 'SECONDARY'\n}\n\nexport enum Status {\n  VERIFIED = 'VERIFIED',\n  UNVERIFIED = 'UNVERIFIED'\n}\n\nexport enum PasswordStatus {\n  NOT_ENROLLED = 'NOT_ENROLLED',\n  ACTIVE = 'ACTIVE'\n}\n\nexport type EmailProfile = {\n  email: string;\n}\n\nexport type AddEmailPayload = {\n  profile: {\n    email: string;\n  };\n  sendEmail: boolean;\n  role: EmailRole;\n}\n\nexport type PhoneProfile = {\n  profile: {\n    phoneNumber: string;\n  };\n}\n\nexport type AddPhonePayload = {\n  profile: {\n    phoneNumber: string;\n  };\n  sendCode: boolean;\n  method: string;\n};\n\nexport type ChallengePhonePayload = {\n  method: string;\n}\n\nexport type VerificationPayload = {\n  verificationCode: string;\n};\n\nexport type EnrollPasswordPayload = {\n  profile: {\n    password: string;\n  }\n}\n\nexport type UpdatePasswordPayload = {\n  profile: {\n    password: string;\n    currentPassword?: string;\n  }\n}\n\nexport type UpdateProfilePayload = {\n  profile: {\n    firstName?: string;\n    lastName?: string;\n    email?: string;\n    login?: string;\n    [property: string]: any;\n  };\n};\n\nexport type MyAccountRequestOptions = {\n  id?: string;\n  emailId?: string;\n  challengeId?: string;\n  payload?: AddEmailPayload \n    | AddPhonePayload \n    | ChallengePhonePayload\n    | VerificationPayload \n    | UpdateProfilePayload\n    | EnrollPasswordPayload\n    | UpdatePasswordPayload;\n  accessToken?: string;\n}\n\nexport type IAPIFunction<T> = (\n  oktaAuth: OktaAuthOAuthInterface, \n  options?: MyAccountRequestOptions\n) => Promise<T>;\n\nexport interface OktaAuthMyAccountInterface\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions\n> \n  extends OktaAuthOAuthInterface<M, S, O>\n{\n  myaccount;\n}\n", "import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  ProfileTransaction,\n  ProfileSchemaTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfile: IAPIFunction<ProfileTransaction> = async (oktaAuth, options?) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, ProfileTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.manage\n */\nexport const updateProfile: IAPIFunction<ProfileTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, ProfileTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.profile.read\n */\nexport const getProfileSchema: IAPIFunction<ProfileSchemaTransaction> = async (\n  oktaAuth, \n  options?\n): Promise<ProfileSchemaTransaction> => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/profile/schema',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, ProfileSchemaTransaction);\n  return transaction;\n};\n", "import { EmailProfile, Status } from '../types';\nimport BaseTransaction from './Base';\n\nexport default class EmailStatusTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res } = options;\n    // assign required fields from res\n    const { id, profile, expiresAt, status } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n  }\n}\n", "import EmailStatusTransaction from './EmailStatusTransaction';\nimport { \n  EmailProfile, \n  Status,\n  VerificationPayload, \n} from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailChallengeTransaction extends BaseTransaction {\n  id: string;\n  expiresAt: string;\n  profile: EmailProfile;\n  status: Status;\n\n  poll: () => Promise<EmailStatusTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  verify: (payload: VerificationPayload) => Promise<EmailChallengeTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, expiresAt, profile, status, _links } = res;\n    this.id = id;\n    this.expiresAt = expiresAt;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.poll = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'poll', \n        links: _links,\n      }, EmailStatusTransaction);\n      return await fn();\n    };\n    this.verify = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'verify', \n        links: _links,\n      }, EmailChallengeTransaction);\n      return await fn(payload);\n    };\n  }\n}\n", "import EmailChallengeTransaction from './EmailChallengeTransaction';\nimport EmailStatusTransaction from './EmailStatusTransaction';\nimport { EmailProfile, EmailRole, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class EmailTransaction extends BaseTransaction {\n  id: string;\n  profile: EmailProfile;\n  roles: EmailRole[];\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<EmailTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: () => Promise<EmailChallengeTransaction>;\n  poll?: () => Promise<EmailStatusTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { accessToken, res } = options;\n    // assign required fields from res\n    const { id, profile, roles, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.roles = roles;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n      }, EmailTransaction);\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn();\n    };\n    this.challenge = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links,\n      }, EmailChallengeTransaction);\n      return await fn();\n    };\n    if (_links.poll) {\n      this.poll = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'poll', \n          links: _links,\n        }, EmailStatusTransaction);\n        return await fn();\n      };\n    }\n    if (_links.verify) {\n      this.verify = async (payload: VerificationPayload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links,\n        });\n        return await fn(payload);\n      };\n    }\n  }\n}\n", "import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  EmailTransaction, \n  EmailChallengeTransaction \n} from './transactions';\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmails: IAPIFunction<EmailTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest<EmailTransaction, 'plural'>(oktaAuth, {\n    url: '/idp/myaccount/emails',\n    method: 'GET',\n    accessToken: options?.accessToken\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmail: IAPIFunction<EmailTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}`,\n    method: 'GET',\n    accessToken,\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const addEmail: IAPIFunction<EmailTransaction> = async (\n  oktaAuth, \n  options\n): Promise<EmailTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/emails',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, EmailTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const deleteEmail: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}`,\n    method: 'DELETE',\n    accessToken\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const sendEmailChallenge: IAPIFunction<EmailChallengeTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${id}/challenge`,\n    method: 'POST',\n    accessToken,\n  }, EmailChallengeTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.read\n */\nexport const getEmailChallenge: IAPIFunction<EmailChallengeTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { emailId, challengeId, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}`,\n    method: 'POST',\n    accessToken,\n  }, EmailChallengeTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.email.manage\n */\nexport const verifyEmailChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { emailId, challengeId, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/emails/${emailId}/challenge/${challengeId}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n", "import { ChallengePhonePayload, PhoneProfile, Status, VerificationPayload } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PhoneTransaction extends BaseTransaction {\n  id: string;\n  profile: PhoneProfile;\n  status: Status;\n\n  // eslint-disable-next-line no-use-before-define\n  get: () => Promise<PhoneTransaction>;\n  delete: () => Promise<BaseTransaction>;\n  challenge: (payload: ChallengePhonePayload) => Promise<BaseTransaction>;\n  verify?: (payload: VerificationPayload) => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, profile, status, _links } = res;\n    this.id = id;\n    this.profile = profile;\n    this.status = status;\n\n    // assign transformed fns to transaction\n    this.get = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'get', \n        links: _links,\n      }, PhoneTransaction);\n      return await fn();\n    };\n    this.delete = async () => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'delete', \n        links: _links \n      });\n      return await fn();\n    };\n    this.challenge = async (payload) => {\n      const fn = generateRequestFnFromLinks({ \n        oktaAuth, \n        accessToken, \n        methodName: 'challenge', \n        links: _links \n      });\n      return await fn(payload);\n    };\n    if (_links.verify) {\n      this.verify = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'verify', \n          links: _links \n        });\n        return await fn(payload);\n      } ;\n    }\n  }\n}\n", "import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PhoneTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhones: IAPIFunction<PhoneTransaction[]> = async (\n  oktaAuth,\n  options?\n) => {\n  const transaction = await sendRequest<PhoneTransaction, 'plural'>(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.read\n */\nexport const getPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { accessToken, id } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'GET',\n    accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const addPhone: IAPIFunction<PhoneTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PhoneTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/phones',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PhoneTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const deletePhone: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { id, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}`,\n    method: 'DELETE',\n    accessToken,\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const sendPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options\n) => {\n  const { accessToken, id, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/challenge`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.phone.manage\n */\nexport const verifyPhoneChallenge: IAPIFunction<BaseTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const { id, payload, accessToken } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/phones/${id}/verify`,\n    method: 'POST',\n    payload,\n    accessToken\n  });\n  return transaction;\n};\n", "import { EnrollPasswordPayload, UpdatePasswordPayload, PasswordStatus } from '../types';\nimport BaseTransaction from './Base';\nimport { generateRequestFnFromLinks } from '../request';\n\nexport default class PasswordTransaction extends BaseTransaction {\n  id: string;\n  created: string;\n  lastUpdated: string;\n  status: PasswordStatus;\n\n  // eslint-disable-next-line no-use-before-define\n  get?: () => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  enroll?: (payload: EnrollPasswordPayload) => Promise<PasswordTransaction>;\n  // eslint-disable-next-line no-use-before-define\n  update?: (payload: UpdatePasswordPayload) => Promise<PasswordTransaction>;\n  delete?: () => Promise<BaseTransaction>;\n\n  constructor(oktaAuth, options) {\n    super(oktaAuth, options);\n\n    const { res, accessToken } = options;\n    // assign required fields from res\n    const { id, status, created, lastUpdated, _links } = res;\n    this.id = id;\n    this.status = status;\n    this.created = created;\n    this.lastUpdated = lastUpdated;\n\n    // assign transformed fns to transaction\n    if (this.status == PasswordStatus.NOT_ENROLLED) {\n      this.enroll = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'enroll',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n    }\n    else {\n      this.get = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'get',\n          links: _links,\n        }, PasswordTransaction);\n        return await fn();\n      };\n\n      this.update = async (payload) => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'put', \n          links: _links,\n        }, PasswordTransaction);\n        return await fn(payload);\n      };\n  \n      this.delete = async () => {\n        const fn = generateRequestFnFromLinks({ \n          oktaAuth, \n          accessToken, \n          methodName: 'delete', \n          links: _links \n        });\n        return await fn();\n      };\n    }\n  }\n}\n", "import { sendRequest } from './request';\nimport { IAPIFunction } from './types';\nimport {\n  BaseTransaction, \n  PasswordTransaction\n} from './transactions';\n\n/**\n * @scope: okta.myAccount.password.read\n */\nexport const getPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth,\n  options\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'GET',\n    accessToken: options?.accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const enrollPassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'POST',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const updatePassword: IAPIFunction<PasswordTransaction> = async (\n  oktaAuth, \n  options\n): Promise<PasswordTransaction> => {\n  const { accessToken, payload } = options!;\n  const transaction = await sendRequest(oktaAuth, {\n    url: '/idp/myaccount/password',\n    method: 'PUT',\n    payload,\n    accessToken,\n  }, PasswordTransaction);\n  return transaction;\n};\n\n/**\n * @scope: okta.myAccount.password.manage\n */\nexport const deletePassword: IAPIFunction<BaseTransaction> = async (\n  oktaAuth, \n  options?\n) => {\n  const transaction = await sendRequest(oktaAuth, {\n    url: `/idp/myaccount/password`,\n    method: 'DELETE',\n    accessToken: options?.accessToken,\n  });\n  return transaction;\n};\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nexport { getProfile, getProfileSchema, updateProfile } from './profileApi.js';\nexport { addEmail, deleteEmail, getEmail, getEmailChallenge, getEmails, sendEmailChallenge, verifyEmailChallenge } from './emailApi.js';\nexport { addPhone, deletePhone, getPhone, getPhones, sendPhoneChallenge, verifyPhoneChallenge } from './phoneApi.js';\nexport { deletePassword, enrollPassword, getPassword, updatePassword } from './passwordApi.js';\n//# sourceMappingURL=api.js.map\n", "import { OktaAuthConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  PKCETransactionMeta,\n} from '../oidc/types';\nimport { OktaAuthMyAccountInterface } from './types';\n\nimport * as MyAccountMethods from './api';\n\nexport function mixinMyAccount\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TBase extends OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n    = OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  return class OktaAuthMyAccount extends Base implements OktaAuthMyAccountInterface<M, S, O>\n  {\n    myaccount: any;\n    \n    constructor(...args: any[]) {\n      super(...args);\n\n      this.myaccount = Object.entries(MyAccountMethods)\n        .filter(([ name ]) => name !== 'default')\n        .reduce((acc, [name, fn]) => {\n          acc[name] = (fn as any).bind(null, this);\n          return acc;\n        }, {});\n    }\n  };\n}\n", "import { StorageManagerConstructor } from '../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../base/types';\nimport {\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../oidc/types';\nimport { createOktaAuthCore } from '../core/factory';\nimport { OktaAuthCoreOptions } from '../core/types';\nimport { mixinMyAccount } from './mixin';\nimport { OktaAuthMyAccountInterface } from './types';\n\nexport function createOktaAuthMyAccount\n<\n  M extends PKCETransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthCoreOptions = OktaAuthCoreOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManager: TransactionManagerConstructor<TM>\n)\n: OktaAuthConstructor<OktaAuthMyAccountInterface<M, S, O>>\n{\n  const Core = createOktaAuthCore<M, S, O>(StorageManagerConstructor, OptionsConstructor, TransactionManager);\n  const WithMyAccount = mixinMyAccount<M, S, O>(Core);\n  return WithMyAccount;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n\nimport { AuthnTransactionState } from '../types';\n\nexport function addStateToken(res, options?) {\n  var builtArgs = {} as AuthnTransactionState;\n  Object.assign(builtArgs, options);\n\n  // Add the stateToken if one isn't passed and we have one\n  if (!builtArgs.stateToken && res.stateToken) {\n    builtArgs.stateToken = res.stateToken;\n  }\n\n  return builtArgs;\n}\n\nexport function getStateToken(res) {\n  return addStateToken(res);\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\n/* eslint-disable complexity, max-statements */\nimport { post } from '../http';\nimport AuthSdkError from '../errors/AuthSdkError';\nimport { STATE_TOKEN_KEY_NAME } from '../constants';\nimport { OktaAuthHttpInterface } from '../http/types';\nimport { OktaAuthStorageOptions } from '../storage/types';\nimport { addStateToken } from './util/stateToken';\nimport { AuthnTransactionAPI } from './types';\nimport { OktaAuthBaseInterface } from '../base/types';\n\nexport function transactionStatus(sdk: OktaAuthHttpInterface, args) {\n  args = addStateToken(sdk, args);\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn', args, { withCredentials: true });\n}\n\nexport function resumeTransaction(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = getSavedStateToken(sdk);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to resume'));\n    }\n  }\n  return transactionStatus(sdk, args)\n    .then(function(res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function introspectAuthn (sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, args) {\n  if (!args || !args.stateToken) {\n    var stateToken = getSavedStateToken(sdk);\n    if (stateToken) {\n      args = {\n        stateToken: stateToken\n      };\n    } else {\n      return Promise.reject(new AuthSdkError('No transaction to evaluate'));\n    }\n  }\n  return transactionStep(sdk, args)\n    .then(function (res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function transactionStep(sdk: OktaAuthHttpInterface, args) {\n  args = addStateToken(sdk, args);\n  // v1 pipeline introspect API\n  return post(sdk, sdk.getIssuerOrigin() + '/api/v1/authn/introspect', args, { withCredentials: true });\n}\n\nexport function transactionExists(sdk: OktaAuthBaseInterface<OktaAuthStorageOptions>) {\n  // We have a cookie state token\n  return !!getSavedStateToken(sdk);\n}\n\nexport function postToTransaction(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, url: string, args, options?) {\n  options = Object.assign({ withCredentials: true }, options);\n  return post(sdk, url, args, options)\n    .then(function(res) {\n      return tx.createTransaction(res);\n    });\n}\n\nexport function getSavedStateToken(sdk: OktaAuthBaseInterface<OktaAuthStorageOptions>) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const storage = sdk.options.storageUtil!.storage;\n    return storage.get(STATE_TOKEN_KEY_NAME);\n}\n", "import { OktaAuthHttpInterface } from '../../http/types';\nimport { find, omit, toQueryString } from '../../util';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport { get } from '../../http';\nimport { AuthnTransactionAPI, AuthnTransactionState } from '../types';\nimport { postToTransaction } from '../api';\nimport { addStateToken } from './stateToken';\n\n\n// query parameters to post url\ninterface PostToTransactionParams {\n  autoPush?: boolean;\n  rememberDevice?: boolean;\n  updatePhone?: boolean;\n}\n\n// eslint-disable-next-line max-params\nexport function link2fn(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, link, ref) {\n  if (Array.isArray(link)) {\n    return function(name, opts?) {\n      if (!name) {\n        throw new AuthSdkError('Must provide a link name');\n      }\n\n      var lk = find(link, {name: name});\n      if (!lk) {\n        throw new AuthSdkError('No link found for that name');\n      }\n\n      return link2fn(sdk, tx, res, obj, lk, ref)(opts);\n    };\n\n  } else if (link.hints &&\n      link.hints.allow &&\n      link.hints.allow.length === 1) {\n    var method = link.hints.allow[0];\n    switch (method) {\n\n      case 'GET':\n        return function() {\n          return get(sdk, link.href, { withCredentials: true });\n        };\n\n      case 'POST':\n        // eslint-disable-next-line max-statements,complexity\n        return function(opts: AuthnTransactionState) {\n          if (ref && ref.isPolling) {\n            ref.isPolling = false;\n          }\n\n          var data = addStateToken(res, opts);\n\n          if (res.status === 'MFA_ENROLL' || res.status === 'FACTOR_ENROLL') {\n            // Add factorType and provider\n            Object.assign(data, {\n              factorType: obj.factorType,\n              provider: obj.provider\n            });\n          }\n\n          var params = {} as PostToTransactionParams;\n          var autoPush = data.autoPush;\n          if (autoPush !== undefined) {\n            if (typeof autoPush === 'function') {\n              try {\n                params.autoPush = !!autoPush();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n              }\n            }\n            else if (autoPush !== null) {\n              params.autoPush = !!autoPush;\n            }\n            data = omit(data, 'autoPush');\n          }\n\n          var rememberDevice = data.rememberDevice;\n          if (rememberDevice !== undefined) {\n            if (typeof rememberDevice === 'function') {\n              try {\n                params.rememberDevice = !!rememberDevice();\n              }\n              catch (e) {\n                return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n              }\n            }\n            else if (rememberDevice !== null) {\n              params.rememberDevice = !!rememberDevice;\n            }\n            data = omit(data, 'rememberDevice');\n\n          } else if (data.profile &&\n                    data.profile.updatePhone !== undefined) {\n            if (data.profile.updatePhone) {\n              params.updatePhone = true;\n            }\n            data.profile = omit(data.profile, 'updatePhone');\n          }\n          var href = link.href + toQueryString(params);\n          return postToTransaction(sdk, tx, href, data);\n        };\n    }\n  }\n}\n\n\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport CustomError from './CustomError';\n\nexport default class AuthPollStopError extends CustomError {\n  constructor() {\n    const message = 'The poll was stopped by the sdk';\n    super(message);\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { post } from '../../http';\nimport { isNumber, isObject, getLink, toQueryString, delay as delayFn } from '../../util';\nimport { DEFAULT_POLLING_DELAY } from '../../constants';\nimport AuthSdkError from '../../errors/AuthSdkError';\nimport AuthPollStopError from '../../errors/AuthPollStopError';\nimport { AuthnTransactionState } from '../types';\nimport { getStateToken } from './stateToken';\n\ninterface PollOptions {\n  delay?: number;\n  rememberDevice?: boolean;\n  autoPush?: boolean;\n  transactionCallBack?: (AuthnTransactionState) => void;\n}\n\nexport function getPollFn(sdk, res: AuthnTransactionState, ref) {\n  return function (options: PollOptions | number) {\n    var delay;\n    var rememberDevice;\n    var autoPush;\n    var transactionCallBack;\n\n    if (isNumber(options)) {\n      delay = options;\n    } else if (isObject(options)) {\n      options = options as PollOptions;\n      delay = options.delay;\n      rememberDevice = options.rememberDevice;\n      autoPush = options.autoPush;\n      transactionCallBack = options.transactionCallBack;\n    }\n\n    if (!delay && delay !== 0) {\n      delay = DEFAULT_POLLING_DELAY;\n    }\n\n    // Get the poll function\n    var pollLink = getLink(res, 'next', 'poll');\n    // eslint-disable-next-line complexity\n    function pollFn() {\n      var opts = {} as PollOptions;\n      if (typeof autoPush === 'function') {\n        try {\n          opts.autoPush = !!autoPush();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('AutoPush resulted in an error.'));\n        }\n      }\n      else if (autoPush !== undefined && autoPush !== null) {\n        opts.autoPush = !!autoPush;\n      }\n      if (typeof rememberDevice === 'function') {\n        try {\n          opts.rememberDevice = !!rememberDevice();\n        }\n        catch (e) {\n          return Promise.reject(new AuthSdkError('RememberDevice resulted in an error.'));\n        }\n      }\n      else if (rememberDevice !== undefined && rememberDevice !== null) {\n        opts.rememberDevice = !!rememberDevice;\n      }\n\n      var href = pollLink.href + toQueryString(opts);\n      return post(sdk, href, getStateToken(res), {\n        saveAuthnState: false,\n        withCredentials: true\n      });\n    }\n\n    ref.isPolling = true;\n\n    var retryCount = 0;\n    var recursivePoll = function () {\n      // If the poll was manually stopped during the delay\n      if (!ref.isPolling) {\n        return Promise.reject(new AuthPollStopError());\n      }\n      return pollFn()\n        .then(function (pollRes) {\n          // Reset our retry counter on success\n          retryCount = 0;\n\n          // If we're still waiting\n          if (pollRes.factorResult && pollRes.factorResult === 'WAITING') {\n\n            // If the poll was manually stopped while the pollFn was called\n            if (!ref.isPolling) {\n              throw new AuthPollStopError();\n            }\n\n            if (typeof transactionCallBack === 'function') {\n              transactionCallBack(pollRes);\n            }\n\n            // Continue poll\n            return delayFn(delay).then(recursivePoll);\n\n          } else {\n            // Any non-waiting result, even if polling was stopped\n            // during a request, will return\n            ref.isPolling = false;\n            return sdk.tx.createTransaction(pollRes);\n          }\n        })\n        .catch(function(err) {\n          // Exponential backoff, up to 16 seconds\n          if (err.xhr &&\n              (err.xhr.status === 0 || err.xhr.status === 429) &&\n              retryCount <= 4) {\n            var delayLength = Math.pow(2, retryCount) * 1000;\n            retryCount++;\n            return delayFn(delayLength)\n              .then(recursivePoll);\n          }\n          throw err;\n        });\n    };\n    return recursivePoll()\n      .catch(function(err) {\n        ref.isPolling = false;\n        throw err;\n      });\n  };\n}\n", "import { OktaAuthHttpInterface } from '../../http/types';\nimport { AuthnTransactionFunctions, AuthnTransactionAPI } from '../types';\nimport { link2fn } from './link2fn';\nimport { getPollFn } from './poll';\n\nexport function links2fns(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  var fns = {} as AuthnTransactionFunctions;\n  for (var linkName in obj._links) {\n    if (!Object.prototype.hasOwnProperty.call(obj._links, linkName)) {\n      continue;\n    }\n\n    var link = obj._links[linkName];\n    \n    if (linkName === 'next') {\n      linkName = link.name;\n    }\n\n    if (link.type) {\n      fns[linkName] = link;\n      continue;\n    }\n\n    switch (linkName) {\n      // poll is only found at the transaction\n      // level, so we don't need to pass the link\n      case 'poll':\n        fns.poll = getPollFn(sdk, res, ref);\n        break;\n\n      default:\n        var fn = link2fn(sdk, tx, res, obj, link, ref);\n        if (fn) {\n          fns[linkName] = fn;\n        }\n    }\n  }\n  return fns;\n}\n", "/* eslint-disable complexity */\nimport { OktaAuthHttpInterface } from '../../http/types';\nimport { clone, isObject, omit } from '../../util';\nimport { AuthnTransactionAPI } from '../types';\nimport { links2fns } from './links2fns';\n\nexport function flattenEmbedded(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res, obj, ref) {\n  obj = obj || res;\n  obj = clone(obj);\n\n  if (Array.isArray(obj)) {\n    var objArr = [];\n    for (var o = 0, ol = obj.length; o < ol; o++) {\n      objArr.push(flattenEmbedded(sdk, tx, res, obj[o], ref) as never);\n    }\n    return objArr;\n  }\n\n  var embedded = obj._embedded || {};\n\n  for (var key in embedded) {\n    if (!Object.prototype.hasOwnProperty.call(embedded, key)) {\n      continue;\n    }\n\n    // Flatten any nested _embedded objects\n    if (isObject(embedded[key]) || Array.isArray(embedded[key])) {\n      embedded[key] = flattenEmbedded(sdk, tx, res, embedded[key], ref);\n    }\n  }\n\n  // Convert any links on the embedded object\n  var fns = links2fns(sdk, tx, res, obj, ref);\n  Object.assign(embedded, fns);\n\n  obj = omit(obj, '_embedded', '_links');\n  Object.assign(obj, embedded);\n  return obj;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { OktaAuthHttpInterface } from '../http/types';\nimport {\n  AuthnTransactionFunction,\n  AuthnTransaction,\n  AuthnTransactionAPI,\n  AuthnTransactionState\n} from './types';\nimport { flattenEmbedded } from './util/flattenEmbedded';\n\nexport class AuthnTransactionImpl implements AuthnTransaction {\n  next?: AuthnTransactionFunction;\n  cancel?: AuthnTransactionFunction;\n  skip?: AuthnTransactionFunction;\n  unlock?: AuthnTransactionFunction;\n  changePassword?: AuthnTransactionFunction;\n  resetPassword?: AuthnTransactionFunction;\n  answer?: AuthnTransactionFunction;\n  recovery?: AuthnTransactionFunction;\n  verify?: AuthnTransactionFunction;\n  resend?: AuthnTransactionFunction;\n  activate?: AuthnTransactionFunction;\n  poll?: AuthnTransactionFunction;\n  prev?: AuthnTransactionFunction;\n\n  data?: AuthnTransactionState;\n  stateToken?: string;\n  sessionToken?: string;\n  status: string;\n  user?: Record<string, any>;\n  factor?: Record<string, any>;\n  factors?: Array<Record<string, any> >;\n  policy?: Record<string, any>;\n  scopes?: Array<Record<string, any> >;\n  target?: Record<string, any>;\n  authentication?: Record<string, any>;\n  constructor(sdk: OktaAuthHttpInterface, tx: AuthnTransactionAPI, res: AuthnTransactionState | null = null) {\n    this.data = undefined;\n    this.status = undefined as unknown as string;\n    if (res) {\n      this.data = res;\n\n      // Parse response from Authn V1\n      Object.assign(this, flattenEmbedded(sdk, tx, res, res, {}));\n      delete this.stateToken;\n\n      // RECOVERY_CHALLENGE has some responses without _links.\n      // Without _links, we emulate cancel to make it intuitive\n      // to return to the starting state. We may remove this\n      // when OKTA-75434 is resolved\n      if (res.status === 'RECOVERY_CHALLENGE' && !res._links) {\n        this.cancel = function() {\n          return Promise.resolve(tx.createTransaction());\n        };\n      }\n    }\n  }\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n *\n */\n\nimport { RequestData, RequestOptions, OktaAuthHttpInterface } from '../http/types';\nimport {\n  introspectAuthn,\n  transactionStatus,\n  transactionExists,\n  resumeTransaction,\n  postToTransaction\n} from './api';\nimport { AuthnTransactionImpl } from './AuthnTransactionImpl';\nimport { AuthnTransactionAPI, AuthnTransactionState } from './types';\n\n// Factory\nexport function createAuthnTransactionAPI(sdk: OktaAuthHttpInterface): AuthnTransactionAPI {\n  const tx: AuthnTransactionAPI = {\n    status: transactionStatus.bind(null, sdk),\n    resume(args) {\n      return resumeTransaction(sdk, tx, args);\n    },\n    exists: transactionExists.bind(null, sdk),\n    introspect(args) {\n      return introspectAuthn(sdk, tx, args);\n    },\n    createTransaction: (res?: AuthnTransactionState) => {\n      return new AuthnTransactionImpl(sdk, tx, res);\n    },\n    postToTransaction: (url: string, args?: RequestData, options?: RequestOptions) => {\n      return postToTransaction(sdk, tx, url, args, options);\n    }\n  };\n  return tx;\n}\n", "/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * \n * See the License for the specific language governing permissions and limitations under the License.\n */\n\n\nimport { AuthSdkError } from '../errors';\nimport { isFingerprintSupported } from '../features';\nimport {\n  addListener,\n  removeListener\n} from '../oidc';\nimport { FingerprintOptions } from '../authn/types';\nimport { OktaAuthHttpInterface } from '../http/types';\n\nexport default function fingerprint(sdk: OktaAuthHttpInterface, options?: FingerprintOptions): Promise<string> {\n  options = options || {};\n\n  if (!isFingerprintSupported()) {\n    return Promise.reject(new AuthSdkError('Fingerprinting is not supported on this device'));\n  }\n\n  var timeout;\n  var iframe;\n  var listener;\n  var promise = new Promise(function (resolve, reject) {\n    iframe = document.createElement('iframe');\n    iframe.style.display = 'none';\n\n    // eslint-disable-next-line complexity\n    listener = function listener(e) {\n      if (!e || !e.data || e.origin !== sdk.getIssuerOrigin()) {\n        return;\n      }\n\n      try {\n        var msg = JSON.parse(e.data);\n      } catch (err) {\n        // iframe messages should all be parsable\n        // skip not parsable messages come from other sources in same origin (browser extensions)\n        // TODO: add namespace flag in okta-core to distinguish messages that come from other sources\n        return;\n      }\n\n      if (!msg) { return; }\n      if (msg.type === 'FingerprintAvailable') {\n        return resolve(msg.fingerprint as string);\n      }\n      if (msg.type === 'FingerprintServiceReady') {\n        e.source.postMessage(JSON.stringify({\n          type: 'GetFingerprint'\n        }), e.origin);\n      }\n    };\n    addListener(window, 'message', listener);\n\n    iframe.src = sdk.getIssuerOrigin() + '/auth/services/devicefingerprint';\n    document.body.appendChild(iframe);\n\n    timeout = setTimeout(function() {\n      reject(new AuthSdkError('Fingerprinting timed out'));\n    }, options?.timeout || 15000);\n  });\n\n  return promise.finally(function() {\n    clearTimeout(timeout);\n    removeListener(window, 'message', listener);\n    if (document.body.contains(iframe)) {\n      iframe.parentElement.removeChild(iframe);\n    }\n  }) as Promise<string>;\n}\n", "/* eslint-disable max-statements */\n/* eslint-disable complexity */\n/*!\n * Copyright (c) 2015-present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport { \n  clone,\n} from '../util';\nimport fingerprint from '../browser/fingerprint';\nimport {\n  FingerprintAPI,\n  SigninWithCredentialsOptions,\n  ForgotPasswordOptions,\n  VerifyRecoveryTokenOptions,\n  SigninOptions,\n  OktaAuthTxInterface,\n  AuthnTransaction,\n  AuthnTransactionAPI\n} from './types';\nimport {\n  createAuthnTransactionAPI,\n} from './factory';\nimport { StorageManagerInterface } from '../storage/types';\nimport { OktaAuthHttpInterface, OktaAuthHttpOptions } from '../http/types';\nimport { OktaAuthConstructor } from '../base/types';\n\nexport function mixinAuthn\n<\n  S extends StorageManagerInterface = StorageManagerInterface,\n  O extends OktaAuthHttpOptions = OktaAuthHttpOptions,\n  TBase extends OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n    = OktaAuthConstructor<OktaAuthHttpInterface<S, O>>\n>\n(Base: TBase): TBase & OktaAuthConstructor<OktaAuthTxInterface<S, O>>\n{\n  return class OktaAuthTx extends Base implements OktaAuthTxInterface<S, O> {\n    tx: AuthnTransactionAPI; // legacy, may be removed in future version\n    authn: AuthnTransactionAPI;\n    fingerprint: FingerprintAPI;\n\n    constructor(...args: any[]) {\n      super(...args);\n\n      this.authn = this.tx = createAuthnTransactionAPI(this);\n      \n      // Fingerprint API\n      this.fingerprint = fingerprint.bind(null, this);\n    }\n\n    // Authn  V1\n    async signIn(opts: SigninOptions): Promise<AuthnTransaction> {\n      opts = clone(opts || {});\n      const _postToTransaction = (options?) => {\n        delete opts.sendFingerprint;\n        return this.tx.postToTransaction('/api/v1/authn', opts, options);\n      };\n      if (!opts.sendFingerprint) {\n        return _postToTransaction();\n      }\n      return this.fingerprint()\n      .then(function(fingerprint) {\n        return _postToTransaction({\n          headers: {\n            'X-Device-Fingerprint': fingerprint\n          }\n        });\n      });\n    }\n\n    // Authn  V1\n    async signInWithCredentials(opts: SigninWithCredentialsOptions): Promise<AuthnTransaction> {\n      return this.signIn(opts);\n    }\n\n    // { username, (relayState) }\n    forgotPassword(opts): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/password', opts);\n    }\n\n    // { username, (relayState) }\n    unlockAccount(opts: ForgotPasswordOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/unlock', opts);\n    }\n\n    // { recoveryToken }\n    verifyRecoveryToken(opts: VerifyRecoveryTokenOptions): Promise<AuthnTransaction> {\n      return this.tx.postToTransaction('/api/v1/authn/recovery/token', opts);\n    }\n\n  };\n}\n", "import { StorageManagerConstructor } from '../../storage/types';\nimport { OktaAuthConstructor, OktaAuthOptionsConstructor } from '../../base/types';\n\nimport { createOktaAuthBase } from '../../base';\nimport { mixinStorage } from '../../storage/mixin';\nimport { mixinSession } from '../../session/mixin';\nimport { mixinHttp } from '../../http/mixin';\nimport { mixinOAuth } from '../mixin';\nimport {\n  OAuthTransactionMeta,\n  OktaAuthOAuthInterface,\n  OktaAuthOAuthOptions,\n  OAuthStorageManagerInterface,\n  PKCETransactionMeta,\n  TransactionManagerConstructor,\n  TransactionManagerInterface\n} from '../types';\n\nexport function createOktaAuthOAuth\n<\n  M extends OAuthTransactionMeta = PKCETransactionMeta,\n  S extends OAuthStorageManagerInterface<M> = OAuthStorageManagerInterface<M>,\n  O extends OktaAuthOAuthOptions = OktaAuthOAuthOptions,\n  TM extends TransactionManagerInterface = TransactionManagerInterface\n>\n(\n  StorageManagerConstructor: StorageManagerConstructor<S>,\n  OptionsConstructor: OktaAuthOptionsConstructor<O>,\n  TransactionManagerConstructor: TransactionManagerConstructor<TM>\n):  OktaAuthConstructor<OktaAuthOAuthInterface<M, S, O, TM>>\n{\n  const Base = createOktaAuthBase(OptionsConstructor);\n  const WithStorage = mixinStorage<S, O>(Base, StorageManagerConstructor);\n  const WithHttp = mixinHttp<S, O>(WithStorage);\n  const WithSession = mixinSession<S, O>(WithHttp);\n  const WithOAuth = mixinOAuth<M, S, O, TM>(WithSession, TransactionManagerConstructor);\n  return WithOAuth;\n}\n", "import {\n  OktaAuthOptionsConstructor,\n} from '../base';\n\nimport {\n  IdxStorageManagerConstructor,\n  IdxTransactionManagerConstructor,\n  OktaAuthIdxOptions,\n  createIdxTransactionManager,\n  createOktaAuthIdx,\n  createIdxStorageManager,\n  createIdxOptionsConstructor\n} from '../idx';\n\nimport { mixinMyAccount } from '../myaccount';\nimport { mixinAuthn } from '../authn';\n\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface OktaAuthOptions extends OktaAuthIdxOptions {}\n\nconst OptionsConstructor: OktaAuthOptionsConstructor<OktaAuthOptions> = createIdxOptionsConstructor();\nconst StorageManager: IdxStorageManagerConstructor = createIdxStorageManager();\nconst TransactionManager: IdxTransactionManagerConstructor = createIdxTransactionManager();\n\n// Default bundle includes everything\nconst WithIdx = createOktaAuthIdx(StorageManager, OptionsConstructor, TransactionManager);\nconst WithMyAccount = mixinMyAccount(WithIdx);\nconst WithAuthn = mixinAuthn(WithMyAccount);\n\nclass OktaAuth extends WithAuthn {\n  constructor(options: OktaAuthOptions) {\n    super(options);\n  }\n}\n\nexport default OktaAuth;\nexport { OktaAuth };\nexport * from './common';\nexport * from '../idx';\nexport * from '../myaccount';\nexport * from '../authn';\n"],
  "mappings": "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",
  "names": ["ctx", "self", "self", "exports", "init", "ctx", "PCancelable", "IdxStatus", "AuthenticatorKey", "IdxFeature", "ctx", "c", "c", "get", "converter", "TokenKind", "error", "storageUtil", "isFieldMutable", "divideSingleActionParamsByMutability", "divideActionParamsByMutability", "generateDirectFetch", "generateIdxAction", "generateRemediationFunctions", "obj", "_getPrototypeOf", "o", "_setPrototypeOf", "p", "_construct", "Parent", "args", "Class", "a", "_wrapNativeSuper", "self", "NewError", "type", "t", "moveToAnotherArray", "parseNonRemediations", "type", "parseIdxResponse", "_a", "proceed", "parsersForVersion", "makeIdxState", "withCredentials", "makeIdxState", "key", "type", "name", "key", "value", "value", "_a", "name", "exchangeCodeForTokens", "requestDidSucceed", "proceed", "type", "getFlowSpecification", "getFlowSpecification", "_a", "getFlowSpecification", "hasResponseType", "remediators", "getFlowSpecification", "makeIdxState", "webcrypto", "OptionsConstructor", "Emitter", "StorageManager", "storageUtil", "btoa", "atob", "c", "webcrypto", "webcrypto", "a", "webcrypto", "now", "verifyToken", "sdkCrypto.verifyToken", "sdkCrypto.getOidcHash", "now", "verifyToken", "response", "responseHandler", "res", "a", "b", "btoa", "btoa", "verifyToken", "type", "now", "type", "key", "storage", "storageKey", "storageKey", "sessionStorage", "browserStorage", "_a", "crypto", "PCancelable", "authState", "isPromise", "microSeconds", "ObliviousSet", "microSeconds", "type", "create", "close", "postMessage", "onMessage", "canBeUsed", "averageResponseTime", "type", "microSeconds", "microSeconds", "type", "localStorage", "postMessage", "listener", "create", "canBeUsed", "close", "onMessage", "averageResponseTime", "microSeconds", "type", "create", "close", "postMessage", "onMessage", "canBeUsed", "averageResponseTime", "BroadcastChannel", "BroadcastChannel", "postMessage", "type", "obj", "close", "isPromise", "listenerFn", "run", "isLeaderListener", "LeaderElectionWebLock", "LeaderElection", "hasLeaderListener", "hasLeader", "applyRun", "stopCriteriaPromiseResolve", "handleMessage", "awaitLeadership", "die", "tryOnFallBack", "whenDeathListener", "fillOptionsWithDefaults", "BroadcastChannel", "BroadcastChannel", "OptionsConstructor", "OptionsConstructor", "WithIdx", "makeIdxState", "OptionsConstructor", "WithIdx", "storageUtil", "browserStorage", "isHTTPS", "isObject", "crossFetch", "storageUtil", "storageKey", "storageUtil", "storageKey", "storageUtil", "TransactionManager", "link", "EmailRole", "Status", "PasswordStatus", "MyAccountMethods", "OptionsConstructor", "TransactionManager", "WithMyAccount", "delay", "delayFn", "listener", "fingerprint", "OptionsConstructor"]
}
